{"version":3,"sources":["layouts/time/components/DisplayAccrual.tsx","layouts/time/timesheet/TimeEntry.tsx","layouts/time/timeoff/AddScheduleModal.tsx","layouts/time/components/CalendarEventModal.tsx","components/DropdownItemFilter.tsx","components/DropdownFilter.tsx","compositions/FalconCalendar.tsx","store/hooks/time/useTimeEntries.ts","store/hooks/time/useTimeOffRequests.ts","layouts/time/timesheet/Timesheet.tsx","layouts/time/Calendar.tsx","layouts/time/timeoff/TimeOff.tsx","routes/time/TimeRoutes.tsx","components/FormGroupInput.tsx","components/FormGroupSelect.tsx","store/thunks/workflow/stages.ts","helpers/base64toBlob.ts","store/thunks/time.ts","components/datetime/DateTimeInputGroup.tsx","components/datetime/parts/ViewNavigation.tsx","components/datetime/views/DaysView.tsx","components/datetime/views/MonthsView.tsx","components/datetime/views/YearsView.tsx","components/datetime/views/TimeView.tsx","components/datetime/HappinDateTime.tsx","layouts/errors/UnderConstruction.tsx","store/hooks/time/useTimeCodes.ts","helpers/pluralizeIf.ts","components/DisplayHighlight.tsx","store/hooks/time/useLeaveBanks.ts","components/falconTypes.ts"],"names":["DisplayAccrual","personId","className","useLeaveBanks","leaveBanks","value","useTimeCodes","timeTypes","Card","FalconCardHeader","title","CardBody","length","chunk","map","row","index","Row","noGutters","bank","indx","currentAccrual","accruals","timeOff","newChargedHours","timeCode","find","type","timeCodes","code","_id","timeCodeId","Col","sm","xl","DisplayHighlight","info","label","unit","charAt","toUpperCase","slice","DT_FORMAT","TimeEntry","selectedPersonId","startDate","endDate","setIsOpen","isOpen","event","timesheetInfo","useAction","getCondensedTimesheetInfo","newEntryAction","createTimeEntry","updateEntryAction","updateTimeEntry","useState","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","undefined","selectedAssignment","setSelectedAssignment","assignmentOptions","setAssignmentOptions","selectedCategory","setSelectedCategory","selectedCode","setSelectedCode","selectedTask","setSelectedTask","selectedStage","setSelectedStage","selectedMilestone","setSelectedMilestone","newEntryDescription","setNewEntryDescription","stageData","setStageData","timeCodesLoader","a","post","data","success","records","useEffect","getInfo","stage","milestone","milestones","m","taskOptions","tasks","taskId","t","filter","s","task","startDateInvalid","dayjs","isValid","isBefore","endDateInvalid","isAfter","isValidEntry","toast","error","entry","startTime","toISOString","endTime","comments","assignmentId","assignments","assignment","push","stageId","assignedHours","eventAssignment","taskTitle","pluralizeIf","includes","taskOption","identifier","category","timeTypeId","isWorkflow","color","eventColor","tc","bankable","Modal","size","toggle","o","ModalHeader","ModalBody","lg","FormGroup","Label","for","DateTimeInputGroup","buttonColor","onChange","val","newStartDate","dayjsStart","dayjsEnd","add","format","console","log","synchronizeDatesFromStart","invalid","pickerProps","isValidDate","date","timeConstraints","minutes","step","newEndDate","subtract","synchronizeDatesFromEnd","FormGroupSelect","id","placeholder","options","formatOptionLabel","option","isLoading","loading","isClearable","icon","FormGroupInput","rows","e","target","xs","Button","disabled","onClick","AddScheduleModal","initialStartDate","initialEndDate","addTimeOffAction","createTimeOffRequest","updateTimeOffAction","updateTimeOffRequest","setEndDate","setStartDate","setTitle","allDay","setAllDay","description","setDescription","absentHours","setAbsentHours","setCode","closeBtn","handleClose","bankableCodes","modalClassName","contentClassName","close","name","required","dateTime","dateFormat","timeFormat","CustomInput","checked","md","isNaN","formatGroupLabel","group","ModalFooter","tag","Flex","justify","align","CircleStackIcon","transform","inverse","EventModalMediaContent","heading","content","children","Media","body","CalendarEventModal","dispatch","useDispatch","deleteTimeEntryAction","deleteTimeEntry","deleteTimeOffRequestAction","deleteTimeOffRequest","respondTimeOffRequest","approveTimeOffRequest","acceptTimeEntry","reviewTimeEntry","isOpenDeclineReasonModal","setIsOpenDeclineReasonModal","declineActionReason","setDeclineActionReason","isOpenEditModal","setIsOpenEditModal","declineResolver","useRef","end","start","stageIdentifier","stageTitle","milestoneTitle","badge","approved","declined","declinedReason","entryType","handleDeclineRequest","Promise","res","rej","current","handleAcceptRequest","handleDeleteRequest","confirm","message","confirmColor","confirmText","cancelColor","cancelText","timeEntries","remove","timeOffRequests","centered","Badge","style","cursor","UncontrolledTooltip","placement","isSame","column","assignerName","dueDate","DropdownItemFilter","currentFilter","rest","DropdownItem","classNames","DropdownFilter","filters","handleFilter","right","UncontrolledDropdown","DropdownToggle","DropdownMenu","isIterableArray","DEFAULT_EVENT_TIME_FORMAT","hour","minute","omitZeroMinute","meridiem","DEFAULT_BUTTON_TEXT","today","month","week","day","listWeek","listYear","views","FalconCalendar","apiRef","onAddEventClick","addEventText","initialView","dayMaxEvents","height","stickyHeaderDates","eventTimeFormat","buttonText","events","calendarProps","calendarRef","calendarApi","setCalendarApi","view","setCurrentFilter","viewAllTime","setViewAllTime","getApi","getCurrentData","viewApi","newView","changeView","viewTitle","minHour","Math","min","maxHour","max","countOutOfRange","reduce","total","viewsConfig","eventLimit","slotMinTime","slotMaxTime","CardHeader","prev","next","ref","headerToolbar","plugins","dayGridPlugin","bootstrapPlugin","timeGridPlugin","interactionPlugin","listPlugin","themeSystem","selectMirror","v","useTimeEntries","useLoadAndSelect","actionCreator","getTimeEntries","postParams","selector","state","Object","values","time","timeEntry","deduplicate","useTimeOffRequests","getTimeOffRequests","request","equality","shallowEqual","Timesheet","updateTimeEntryAction","eventModalEventData","setEventModalEventData","myPersonId","useSelector","app","login","startOf","setSelectedPersonId","showTimesheet","setShowTimesheet","showTimeOffRequests","setShowTimeOffRequests","showApprovedRequests","setShowApprovedRequests","showDeclinedRequests","setShowDeclinedRequests","showPendingRequests","setShowPendingRequests","allDayEvents","forEach","evt","findIndex","existing","toString","entryHours","diff","hours","selectable","editable","usedTimeEntries","approverId","declinerId","usedTimeOffRequests","display","combinedEvents","rawEvents","timeType","textColor","colorOptions","text","handleEventChange","revert","extendedProps","select","getTime","startStr","eventClick","arg","eventResize","args","eventDrop","window","innerWidth","allDaySlot","allDayContent","nowIndicator","eventContent","item","originalEntry","fixedPlaces","duration","toFixed","timeText","formatTimeEntryTitle","datesSet","viewName","viewMap","Calendar","onEventClick","onDateSelect","defaultView","TimeOff","useParams","isOpenScheduleModal","setIsOpenScheduleModal","scheduleInitialStartDate","setScheduleInitialStartDate","scheduleInitialEndDate","setScheduleInitialEndDate","isOpenEventModal","setIsOpenEventModal","req","Date","badgeLabel","badgeColor","TimeRoutes","url","match","path","component","exact","UnderConstruction","to","formClass","feedback","valid","isTooltipFeedback","labelProps","inputProps","htmlFor","tooltip","styles","classNamePrefix","menu","provided","zIndex","stages","stagesDuck","create","stageInfo","arrDocuments","documents","arrDocumentsPosted","arrPhotosPosted","docType","test","file","uploadDoc","base64toBlob","base64","docData","files","location","thumb","formData","photos","actions","getOne","getStageIdentifiers","createNewTag","createNewType","addStageMember","organizationId","role","addStageOrganization","postNote","addStageDocuments","attachments","attachment","newDoc","document","cancel","addStagePhotos","newPhoto","photo","updateStage","updateObject","activeOnly","dataURI","splitDataURI","split","byteString","indexOf","atob","decodeURI","mimeString","ia","Uint8Array","i","charCodeAt","Blob","typesDuck","entriesDuck","timeOffBanks","timeOffBanksDuck","timeOffRequestsDuck","getTimeTypes","createTimeType","createTimeCode","deleteTimeType","updateTimeType","update","timeEntryId","requestId","approve","declineReason","decline","getLeaveBanks","createTimeBank","hoursPerUnit","policy","accrualPeriod","accrualAmount","accrueWeeks","accrueWeekdays","accrueDates","accrueMonths","accrualMaximum","effectiveDate","autoAccrual","templateTitle","updateTimeBank","configuration","deleteTimeBank","timeBankId","onBlur","autoFillBlank","dateValue","setDateValue","firstRender","setFirstRender","d","addonType","outline","dropLeft","open","onClose","ViewNavigation","onClickPrev","onClickSwitch","onClickNext","switchContent","switchColSpan","switchProps","colSpan","extend","LocalizedFormat","localeData","DEFAULT_RENDER_DAY","props","DEFAULT_VALID_DATE_CHECK","DaysView","renderDay","viewDate","navigate","showView","selectedDate","updateDate","dat","startOfMonth","clone","endOfMonth","endOf","renderDate","key","year","weekdaysMin","r","MonthsView","renderMonth","isDisabledMonth","months","YearsView","renderYear","disabledYears","setDisabledYears","viewYear","selectedYear","isDisabledYear","cache","_updateSelectedYear","years","DEFAULT_CONSTRAINTS","seconds","milliseconds","pad","padValues","str","TimeView","setTime","constraints","setConstraints","timeParts","setTimeParts","prevSelectedDate","appliedConstraints","keys","second","millisecond","ampm","counters","increase","parseInt","decrease","onStartClicking","action","button","intHours","increaseTimer","timer","setTimeout","setInterval","mouseUpListener","clearTimeout","clearInterval","_setTime","removeEventListener","addEventListener","c","onMouseDown","ClickOutBase","container","React","createRef","this","onClickOut","Component","ClickableWrapper","onClickOutside","viewModes","YEARS","MONTHS","DAYS","TIME","nofn","DateTime","initialValue","initialViewMode","onNavigate","onBeforeNavigate","onNavigateBack","onNavigateForward","updateOnView","iso","locale","setOpen","closeOnSelect","closeOnClickOutside","staticDisplay","currentView","setCurrentView","setViewDate","updateView","setUpdateView","setSelectedDate","outputFormat","setOutputFormat","dateForm","timeForm","_showView","nextView","_onChange","_closeCalendar","_viewNavigate","modifier","updatedDate","currentTarget","getAttribute","HOURS","newDate","href","baseString","testValue","isEqual"],"mappings":"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","file":"static/js/15.154ed0c7.chunk.js","sourcesContent":["////// Packages //////////////////\r\nimport React, { FC, useState } from 'react'\r\nimport { Card, CardBody, Col, Row } from 'reactstrap'\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport DisplayHighlight from 'components/DisplayHighlight'\r\nimport FalconCardHeader from 'components/FalconCardHeader'\r\nimport { MPerson } from 'store/types/models/id'\r\nimport useLeaveBanks from 'store/hooks/time/useLeaveBanks'\r\nimport { chunk } from 'lodash'\r\nimport useTimeCodes from 'store/hooks/time/useTimeCodes'\r\nimport { FalconColors } from 'components/falconTypes'\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\n/* const colors = ['info', 'warning', 'primary', 'success', 'dark'] as FalconColors[] */\r\n\r\ninterface Props {\r\n    personId: MPerson['_id'];\r\n    className?: string;\r\n}\r\n\r\nconst DisplayAccrual: FC<Props> = ({personId, className}) => {\r\n    const { value: leaveBanks, ...loader} = useLeaveBanks(personId)\r\n    const { value: timeTypes, ...typesLoader } = useTimeCodes()\r\n\r\n    return (\r\n        <Card className={className}>\r\n            <FalconCardHeader title=\"Accruals\" />\r\n            <CardBody>\r\n                {(!!leaveBanks && leaveBanks.length === 4 ? chunk(leaveBanks, 2) : chunk(leaveBanks, 3)).map( (row, index) => {\r\n                    return (\r\n                        <Row noGutters key={index}>\r\n                            {row.map( (bank, indx) => {\r\n                                const currentAccrual = bank.accruals && bank.accruals.length > 0 && bank.accruals[bank.accruals.length - 1]\r\n                                const timeOff = (currentAccrual && currentAccrual.value || 0) - ( bank.newChargedHours || 0 )\r\n                                const timeCode = timeTypes?.find( type => type.timeCodes.find( code => code._id === bank.timeCodeId ) )\r\n                                return (\r\n                                    <Col sm xl={12} key={indx} >\r\n                                        <DisplayHighlight \r\n                                            info={timeOff}\r\n                                            label={`${bank.title || timeCode?.title || 'No Description'} ${bank.unit.charAt(0).toUpperCase() + bank.unit.slice(1)}${timeOff === 1 ? '': 's'}`} \r\n                                        />\r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                    )\r\n                })}\r\n                    \r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default DisplayAccrual","////// Packages //////////////////\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport { Button, Col, FormGroup, Label, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport FormGroupInput from 'components/FormGroupInput';\r\nimport FormGroupSelect from 'components/FormGroupSelect';\r\nimport DateTimeInputGroup from 'components/datetime/DateTimeInputGroup';\r\n\r\n////// CommonJS Helpers //////////\r\nimport { pluralizeIf } from 'helpers/pluralizeIf';\r\n\r\n////// Custom Hooks //////////////\r\nimport useTimeCodes from 'store/hooks/time/useTimeCodes';\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Thunks ////////////////////\r\nimport { getCondensedTimesheetInfo } from 'store/thunks/workflow/stages';\r\nimport { createTimeEntry } from 'store/thunks/time';\r\nimport { updateTimeEntry } from 'store/thunks/time'\r\n\r\n////// Types /////////////////////\r\nimport { MPerson } from 'store/types/models/id';\r\nimport { MAssignment, MStage, MTask, StageTimeInfo, StageTimeInfoTask } from 'store/types/models/workflow';\r\nimport { MTimeEntry, MTimeType, MTimeCode } from 'store/types/models/time';\r\n\r\ntype BaseOption<T extends Record<string, any> = Record<string, unknown>> = {value: string, label: string} & {[K in keyof T]: T[K]} | null | undefined\r\n\r\ntype AssignmentOption = BaseOption<{taskId?: string, stageId?: string}>\r\ntype CategoryOption = BaseOption<{ color?: string, isWorkflow?: boolean }>\r\ntype CodeOption = BaseOption<{ bankable?: boolean }>\r\n\r\nexport const DT_FORMAT = 'YYYY-MM-DDTHH:mm'\r\n\r\nexport interface TimeEntryModalEvent {\r\n    _id: MTimeEntry['_id'];\r\n    comments?: MTimeEntry['comments']\r\n    timeTypeId: MTimeType['_id'];\r\n    timeCodeId: MTimeCode['_id'];\r\n    taskId?: MTask[\"_id\"];\r\n    taskTitle?: MTask['title'];\r\n    stageId?: MStage['_id'];\r\n    assignment?: {\r\n        _id: MAssignment['_id'];\r\n        description?: MAssignment['description'];\r\n        assignedHours?: MAssignment['assignedHours'];\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    selectedPersonId?: MPerson[\"_id\"];\r\n    startDate?: string;\r\n    endDate?: string;\r\n    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    isOpen: boolean;\r\n    event?: TimeEntryModalEvent\r\n}\r\n\r\nconst TimeEntry: FC<Props> = ({selectedPersonId, startDate, endDate, setIsOpen, isOpen, event}) => {\r\n    const timesheetInfo = useAction( getCondensedTimesheetInfo );\r\n    const newEntryAction = useAction( createTimeEntry );\r\n    const updateEntryAction = useAction( updateTimeEntry );\r\n\r\n    const [selectedStartDate, setSelectedStartDate] = useState<string>()\r\n    const [selectedEndDate, setSelectedEndDate] = useState<string>()\r\n    const [selectedAssignment, setSelectedAssignment] = useState(undefined as AssignmentOption);\r\n    const [assignmentOptions, setAssignmentOptions] = useState([] as AssignmentOption[]);\r\n    const [selectedCategory, setSelectedCategory] = useState(undefined as CategoryOption);\r\n    const [selectedCode, setSelectedCode] = useState(undefined as CodeOption);\r\n    const [selectedTask, setSelectedTask] = useState(undefined as BaseOption);\r\n    const [selectedStage, setSelectedStage] = useState(undefined as BaseOption);\r\n    const [selectedMilestone, setSelectedMilestone] = useState(undefined as BaseOption);\r\n    const [newEntryDescription, setNewEntryDescription] = useState('');\r\n    const [stageData, setStageData] = useState( null as StageTimeInfo[] | null);\r\n\r\n    const { value: timeCodes, ...timeCodesLoader } = useTimeCodes();\r\n\r\n    async function getInfo() {\r\n        const data = await timesheetInfo.post(selectedPersonId, false /* true for active only */)\r\n        if (data?.success) {\r\n            // @ts-ignore\r\n            setStageData(data.records[0].stageData as StageTimeInfo[])\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if (startDate) setSelectedStartDate(startDate)\r\n    }, [startDate])\r\n\r\n    useEffect(()=>{\r\n        if (endDate) setSelectedEndDate(endDate)\r\n    }, [endDate])\r\n\r\n    useEffect(() => {\r\n        if (selectedPersonId) getInfo()\r\n    }, [selectedPersonId])\r\n\r\n    const stage = selectedStage && stageData?.find( stage => stage._id === selectedStage.value );\r\n    const milestone = selectedMilestone && stage?.milestones?.find( m => m._id === selectedMilestone.value )\r\n    const taskOptions = milestone?.tasks.map( taskId => stage?.tasks.find(t => t._id === taskId) ).filter( (s): s is StageTimeInfoTask => !!s ).map(task => ({value: task._id, label: task.title }))\r\n\r\n    function handleSelectAssignment(option: AssignmentOption) {\r\n        const o = option\r\n        setSelectedAssignment( o );\r\n        if (!o) return;\r\n        const stage = stageData?.find( stage => stage._id === o.stageId )\r\n        setSelectedStage( stage ? { value: stage._id, label: `${stage.type}: ${stage.identifier} - ${stage.title}` } : undefined)\r\n        const milestone = stage?.milestones.find( m => m.tasks.includes( o.taskId! ) )\r\n        setSelectedMilestone( milestone ? {value: milestone._id, label: milestone.title} : undefined )\r\n        const task = stage?.tasks.find( task => task._id === o.taskId )\r\n        setSelectedTask( task ? {value: task._id, label: task.title} : undefined )\r\n\r\n    }\r\n\r\n\r\n    function synchronizeDatesFromStart(newStartDate: string) {\r\n        const dayjsStart = dayjs(newStartDate)\r\n        if ( dayjsStart.isValid() ) {\r\n            const dayjsEnd = dayjs(selectedEndDate)\r\n            if (!selectedEndDate || !dayjsEnd.isValid() || dayjsEnd.isBefore(dayjsStart)) {\r\n                setSelectedEndDate( dayjsStart.add(1, 'hour').format(DT_FORMAT) )\r\n            }\r\n        } else {\r\n            console.log('invalid', newStartDate)\r\n        }\r\n    }\r\n\r\n    function synchronizeDatesFromEnd(newEndDate: string) {\r\n        console.log('synchronize from end')\r\n        const dayjsEnd = dayjs(newEndDate)\r\n        if ( dayjsEnd.isValid() ) {\r\n            const dayjsStart = dayjs( selectedStartDate )\r\n            if (!selectedStartDate || !dayjsStart.isValid() || dayjsEnd.isBefore(dayjsStart)) {\r\n                setSelectedStartDate( dayjsEnd.subtract(1, 'hour').format(DT_FORMAT) )\r\n            }\r\n        } else {\r\n            console.log('invalid', newEndDate)\r\n        }\r\n    }\r\n\r\n    const startDateInvalid = !selectedStartDate || !dayjs(selectedStartDate).isValid() || (selectedEndDate && !dayjs(selectedStartDate).isBefore(selectedEndDate))\r\n    const endDateInvalid = !selectedEndDate || !dayjs(selectedEndDate).isValid() || (selectedStartDate && !dayjs(selectedEndDate).isAfter(selectedStartDate))\r\n\r\n    const isValidEntry = selectedPersonId \r\n                            && selectedStartDate \r\n                            && selectedEndDate\r\n                            && selectedCode && selectedCode.value\r\n                            && dayjs(selectedStartDate).isValid()\r\n                            && dayjs(selectedEndDate).isValid()\r\n\r\n    async function handleSubmitNewTimeEntry() {\r\n        if (!isValidEntry) {\r\n            toast.error('Entry is invalid')\r\n            return;\r\n        }\r\n        \r\n        if (event?._id) {\r\n            const entry = {\r\n                startTime: dayjs(selectedStartDate).toISOString(),\r\n                endTime: dayjs(selectedEndDate).toISOString(),\r\n                timeCodeId: selectedCode!.value,\r\n                comments: newEntryDescription || undefined,\r\n                taskId: selectedTask?.value,\r\n                assignmentId: selectedAssignment?.value\r\n            }\r\n            const data = await updateEntryAction.post(event._id, entry)\r\n            if (data?.success) {\r\n                toast.success(\"Added time entry\");\r\n                setIsOpen(false);\r\n                setSelectedStartDate('');\r\n                setSelectedEndDate('');\r\n                setNewEntryDescription('');\r\n            } else {\r\n                toast.error(data?.error || 'Something went wrong')\r\n            }\r\n        } else {\r\n            const entry = {\r\n                personId: selectedPersonId,\r\n                startTime: dayjs(selectedStartDate).toISOString(),\r\n                endTime: dayjs(selectedEndDate).toISOString(),\r\n                timeCodeId: selectedCode!.value,\r\n                comments: newEntryDescription || undefined,\r\n                taskId: selectedTask?.value,\r\n                assignmentId: selectedAssignment?.value\r\n            }\r\n            const data = await newEntryAction.post(entry)\r\n            if (data?.success) {\r\n                toast.success(\"Added time entry\");\r\n                setIsOpen(false);\r\n                setSelectedStartDate('');\r\n                setSelectedEndDate('');\r\n                setNewEntryDescription('');\r\n            } else {\r\n                toast.error(data?.error || 'Something went wrong')\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!stageData) {\r\n            setAssignmentOptions([])\r\n            return\r\n        }\r\n        const assignments = []\r\n        for (const stage of stageData) {\r\n            for (const task of stage.tasks) {\r\n                for (const assignment of task.assignments) {\r\n                    assignments.push({\r\n                        taskId: task._id,\r\n                        stageId: stage._id,\r\n                        value: assignment._id,\r\n                        label: `${task.title} (${assignment.assignedHours} hr${assignment.assignedHours === 1 ? '' : 's'})`\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        setAssignmentOptions( assignments );\r\n        if (event) {\r\n            const eventAssignment = event.assignment ? {\r\n                taskId: event.taskId,\r\n                stageId: event.stageId,\r\n                value: event.assignment._id,\r\n                label: `${event.taskTitle} (${event.assignment.assignedHours} ${pluralizeIf(\"hr\", event.assignment.assignedHours)})`\r\n            } : undefined\r\n    \r\n            setSelectedAssignment( eventAssignment )\r\n\r\n            const stage = stageData?.find( stage => stage._id === event.stageId );\r\n            const milestone = stage?.milestones?.find( m => !!stage?.milestones.find( m => m.tasks.includes(event.taskId) ) )\r\n            const task = stage?.tasks.find(t => t._id === event.taskId)\r\n            const taskOption = task ? {value: task._id, label: task.title } : undefined\r\n            setSelectedStage(stage ? {\r\n                    value: stage._id, \r\n                    label: `${stage.type}: ${stage.identifier} - ${stage.title}` \r\n                } : undefined\r\n            )\r\n            setSelectedMilestone(milestone ? {\r\n                    value: milestone._id, \r\n                    label: milestone.title\r\n                } : undefined\r\n            )\r\n            setSelectedTask(taskOption)\r\n        }\r\n    }, [stageData, event])\r\n    \r\n    useEffect(()=> {\r\n        if (timeCodes && event) {\r\n            const category = timeCodes.find( type => type._id === event.timeTypeId)\r\n            setSelectedCategory(category ? {\r\n                value: category._id,\r\n                label: category.title,\r\n                isWorkflow: category.isWorkflow,\r\n                color: category.eventColor\r\n            } : undefined)\r\n            const timeCode = category?.timeCodes.find( tc => tc._id === event.timeCodeId )\r\n            setSelectedCode(timeCode ? {\r\n                value: timeCode._id,\r\n                label: timeCode.title,\r\n                bankable: timeCode.bankable\r\n            } : undefined)\r\n            setNewEntryDescription( event?.comments || '')\r\n        }\r\n    }, [event, ...(timeCodes || [])])\r\n    \r\n    return (\r\n        <Modal size=\"lg\" isOpen={isOpen} toggle={()=>setIsOpen(o=>!o)}>\r\n                <ModalHeader className=\"bg-light border-bottom-0\">\r\n                    New Time Entry\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                   <Row>\r\n                        <Col lg>\r\n                            <FormGroup>\r\n                                <Label for='new-time-entry-start-time'>Start Time</Label>\r\n                                <DateTimeInputGroup \r\n                                    buttonColor=\"info\" \r\n                                    onChange={ val => {\r\n                                        setSelectedStartDate(val);\r\n                                        synchronizeDatesFromStart(val);\r\n                                    }} \r\n                                    value={selectedStartDate}\r\n                                    invalid={startDateInvalid}\r\n                                    pickerProps={{\r\n                                        isValidDate: date => !selectedEndDate || !!date?.isBefore(selectedEndDate),\r\n                                        timeConstraints: {\r\n                                            minutes: {\r\n                                                step: 5\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg>\r\n                            <FormGroup>\r\n                                <Label for='new-time-entry-end-time'>End Time</Label>\r\n                                <DateTimeInputGroup \r\n                                    buttonColor=\"info\" \r\n                                    onChange={ val => {\r\n                                        setSelectedEndDate(val);\r\n                                        synchronizeDatesFromEnd(val);\r\n                                    }} \r\n                                    value={selectedEndDate}\r\n                                    invalid={endDateInvalid}\r\n                                    pickerProps={{\r\n                                        isValidDate: date => !selectedStartDate || !!date?.isAfter(selectedStartDate),\r\n                                        timeConstraints: {\r\n                                            minutes: {\r\n                                                step: 5\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg>\r\n                            <FormGroupSelect \r\n                                id=\"new-time-type\"\r\n                                label=\"Category\"\r\n                                placeholder=\"Select time category...\"\r\n                                value={ selectedCategory }\r\n                                options={ timeCodes?.map( tc => ({value: tc._id, label: tc.title, color: tc.eventColor, isWorkflow: tc.isWorkflow })) }\r\n                                formatOptionLabel={ option => <div className={`badge-${option.color} p-2 rounded w-100`}>{option.label}</div>}\r\n                                onChange={ option=>{ \r\n                                    setSelectedCategory(option); \r\n                                    setSelectedCode(null); \r\n                                } }\r\n                                isLoading={ timeCodesLoader.loading }\r\n                                isClearable\r\n                                // select from timeCodes\r\n                            />\r\n                        </Col>\r\n                        <Col lg>\r\n                            <FormGroupSelect \r\n                                id=\"new-time-code\"\r\n                                label=\"Time Code\"\r\n                                placeholder=\"Select time code...\"\r\n                                value={ selectedCode }\r\n                                options={ timeCodes?.find( tc => tc._id === selectedCategory?.value )?.timeCodes.map( tc => ({value: tc._id, label: tc.title, bankable: tc.bankable })) }\r\n                                formatOptionLabel={ option => <>{option.bankable && <FontAwesomeIcon icon=\"archive\" className=\"text-success\"/>}{option.label}</> }\r\n                                onChange={ setSelectedCode }\r\n                                isLoading={ timeCodesLoader.loading }\r\n                                isClearable\r\n                                // select from timeCodes.timeCodes\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    { selectedCategory?.isWorkflow &&\r\n                        <div className=\"mx-2 px-3 border border-top-0 border-bottom-0\">\r\n                            <FormGroupSelect \r\n                                id=\"new-time-entry-assignment\"\r\n                                label=\"Assignment\"\r\n                                placeholder=\"Select from assignments...\"\r\n                                value={ selectedAssignment }\r\n                                options={ assignmentOptions }\r\n                                onChange={ handleSelectAssignment }\r\n                                isLoading={ timesheetInfo.loading }\r\n                                isClearable\r\n                                // select from assignments\r\n                            />\r\n                            <FormGroupSelect \r\n                                id=\"new-time-entry-stage\"\r\n                                label=\"Stage\"\r\n                                placeholder=\"Select workflow stage...\"\r\n                                value={ selectedStage }\r\n                                options={ stageData?.map( stage => ({value: stage._id, label: `${stage.type}: ${stage.identifier} - ${stage.title}` })) }\r\n                                onChange={ option => {\r\n                                    setSelectedStage(option) \r\n                                    setSelectedMilestone(undefined)\r\n                                    setSelectedTask(undefined)\r\n                                    setSelectedAssignment(undefined)\r\n                                }}\r\n                                isLoading={ timesheetInfo.loading }\r\n                                isClearable\r\n                                // select from assignments\r\n                            />\r\n                            <FormGroupSelect \r\n                                id=\"new-time-entry-milestone\"\r\n                                label=\"Milestone\"\r\n                                placeholder=\"Select milestone...\"\r\n                                value={ selectedMilestone }\r\n                                options={ stage?.milestones.map( milestone => ({value: milestone._id, label: milestone.title })) }\r\n                                onChange={ option => {\r\n                                    setSelectedMilestone(option)\r\n                                    setSelectedTask(undefined)\r\n                                    setSelectedAssignment(undefined)\r\n                                }}\r\n                                isLoading={ timesheetInfo.loading }\r\n                                isClearable\r\n                                // select from assignments\r\n                            />\r\n                            <FormGroupSelect \r\n                                id=\"new-time-entry-task\"\r\n                                label=\"Task\"\r\n                                placeholder=\"Select task...\"\r\n                                value={ selectedTask }\r\n                                options={ taskOptions }\r\n                                onChange={ option => {\r\n                                    setSelectedTask(option) \r\n                                    setSelectedAssignment(undefined)\r\n                                }}\r\n                                isLoading={ timesheetInfo.loading }\r\n                                isClearable\r\n                                // select from assignments\r\n                            />\r\n                        </div>\r\n                    }\r\n                    <FormGroupInput\r\n                        id=\"new-entry-comments\"\r\n                        label=\"Comments\"\r\n                        type=\"textarea\"\r\n                        rows={3}\r\n                        value={newEntryDescription}\r\n                        onChange={e=>setNewEntryDescription(e.target.value)}\r\n                    />\r\n                    <Row>\r\n                        <Col xs=\"auto\" className=\"ml-auto\">\r\n                            <Button color=\"primary\" disabled={!isValidEntry} onClick={handleSubmitNewTimeEntry}>Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n    )\r\n}\r\n\r\nexport default TimeEntry","////// Packages //////////////////\r\nimport React, { useState, useEffect, FC } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from 'components/Flex';\r\nimport FormGroupInput from 'components/FormGroupInput';\r\nimport FormGroupSelect from 'components/FormGroupSelect';\r\nimport DateTimeInputGroup from 'components/datetime/DateTimeInputGroup';\r\nimport useAction from 'store/hooks/useAction';\r\nimport { toast } from 'react-toastify';\r\nimport { createTimeOffRequest, updateTimeOffRequest } from 'store/thunks/time';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\nimport { MTimeOffRequest, MTimeCode } from 'store/types/models/time'\r\nimport useTimeCodes from 'store/hooks/time/useTimeCodes';\r\n\r\nconst labelOptions = [\r\n  {value: 'none', label: \"None\"},\r\n  {value: 'business', className: \"bg-soft-info\", label: 'Business'},\r\n  {value: 'important', className: \"bg-soft-danger\", label: 'Important'},\r\n  {value: 'personal', className: \"bg-soft-warning\", label: 'Personal'},\r\n  {value: 'mustattend', className: \"bg-soft-success\", label: 'Must Attend'}\r\n]\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  initialStartDate?: string;\r\n  initialEndDate?: string;\r\n  event?: {\r\n    _id: MTimeOffRequest['_id'];\r\n    title: string;\r\n    allDay?: boolean;\r\n    description?: string;\r\n    absentHours?: number;\r\n    timeCodeId?: string;\r\n  }\r\n}\r\n\r\nconst AddScheduleModal: FC<Props> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  initialStartDate=\"\",\r\n  initialEndDate=\"\",\r\n  event\r\n}) => {\r\n\r\n  const addTimeOffAction = useAction( createTimeOffRequest );\r\n  const updateTimeOffAction = useAction( updateTimeOffRequest );\r\n  const {value: timeTypes} = useTimeCodes()\r\n\r\n  const [endDate, setEndDate] = useState<string>();\r\n  const [startDate, setStartDate] = useState<string>();\r\n  const [title, setTitle] = useState<string>();\r\n  const [allDay, setAllDay] = useState(false);\r\n  const [description, setDescription] = useState<string>();\r\n  const [absentHours, setAbsentHours] = useState<number>();\r\n  const [code, setCode] = useState<string>();\r\n\r\n  const closeBtn = (\r\n    <button className=\"close font-weight-normal\" onClick={handleClose}>\r\n      &times;\r\n    </button>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (event) {\r\n      setTitle(event.title);\r\n      setAllDay(!!event.allDay);\r\n      setDescription(event.description);\r\n      setAbsentHours(event.absentHours);\r\n      setCode(event.timeCodeId)\r\n    }\r\n  }, [event])\r\n\r\n  useEffect(() => { setStartDate(initialStartDate) }, [initialStartDate]);\r\n  useEffect(() => { setEndDate(initialEndDate) }, [initialEndDate]);\r\n\r\n  function handleClose() {\r\n    setIsOpen(false);\r\n    setStartDate(undefined);\r\n    setEndDate(undefined);\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    if (event?._id) {\r\n      const data = await updateTimeOffAction.post(event._id, {startDate, endDate, title, allDay, description, absentHours, timeCodeId: code})\r\n      if (data?.success) {\r\n        toast.success('Updated time off request')\r\n        handleClose()\r\n      } else {\r\n        toast.error(data?.error || 'Something went wrong')\r\n      }\r\n    } else {\r\n      const data = await addTimeOffAction.post({startDate, endDate, title, allDay, description, timeCodeId: code, absentHours})\r\n      if (data?.success) {\r\n        toast.success('Submitted time off request')\r\n        handleClose()\r\n      } else {\r\n        toast.error(data?.error || 'Something went wrong')\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const bankableCodes = timeTypes\r\n                          ?.map( type => ({\r\n                              ...type,\r\n                              label: type.title,\r\n                              options: type.timeCodes\r\n                                              .filter( code => code.bankable )\r\n                                              .map( code => ({\r\n                                                  ...code,\r\n                                                  label: code.title,\r\n                                                  value: code._id\r\n                                              }))\r\n                          }))\r\n                          .filter( type => type.options.length > 0 )\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={handleClose} modalClassName=\"theme-modal\" contentClassName=\"border\">\r\n      <ModalHeader toggle={handleClose} className=\"bg-light d-flex flex-between-center border-bottom-0\" close={closeBtn}>\r\n        New Leave Request\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <FormGroupInput\r\n          id=\"new-time-off-title\"\r\n          label=\"Title\"\r\n          placeholder=\"Title...\"\r\n          name=\"title\"\r\n          required\r\n          value={title}\r\n          onChange={e=>setTitle(e.target.value)}\r\n        />\r\n        <FormGroup>\r\n          <Label className=\"fs-0\" for=\"new-time-off-start\">\r\n            Start Date\r\n          </Label>\r\n          <DateTimeInputGroup\r\n            id=\"new-time-off-start\"\r\n            value={startDate}\r\n            onChange={dateTime => setStartDate(dateTime)}\r\n            dateFormat=\"MM/DD/YYYY\"\r\n            timeFormat={allDay ? false : undefined}\r\n            pickerProps={{\r\n              isValidDate: endDate ? (date => !!date?.isBefore(endDate)) : undefined\r\n            }}\r\n            placeholder={allDay ? 'MM/DD/YYYY' : 'MM/DD/YYYY h:mm AM/PM'}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label className=\"fs-0\" for=\"new-time-off-end\">\r\n            End Date\r\n          </Label>\r\n          <DateTimeInputGroup\r\n            id=\"new-time-off-end\"\r\n            value={endDate}\r\n            onChange={dateTime => setEndDate(dateTime)}\r\n            dateFormat=\"MM/DD/YYYY\"\r\n            timeFormat={allDay ? false : undefined}\r\n            pickerProps={{\r\n              isValidDate: startDate ? (date => !!date?.isAfter(startDate)) : undefined\r\n            }}\r\n            placeholder={allDay ? 'MM/DD/YYYY' : 'MM/DD/YYYY h:mm AM/PM'}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <CustomInput\r\n            name=\"new-time-off-all-day\"\r\n            type=\"checkbox\"\r\n            id=\"allDay\"\r\n            label=\"All Day\"\r\n            checked={allDay}\r\n            onChange={e => setAllDay(!!e.target.checked)}\r\n          />\r\n        </FormGroup>\r\n        \r\n        <FormGroupInput\r\n          id=\"new-time-off-description\"\r\n          label=\"Description\"\r\n          type=\"textarea\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={e => setDescription(e.target.value)}\r\n        />\r\n        <Row>\r\n          <Col md>\r\n            <FormGroupInput\r\n              id=\"new-time-off-hours\"\r\n              type=\"number\"\r\n              label=\"Absent Hours\"\r\n              name=\"hours\"\r\n              value={absentHours}\r\n              onChange={e => {\r\n                if (!isNaN(+e.target.value) )\r\n                  return setAbsentHours(+e.target.value)\r\n\r\n                if (!e.target.value && +e.target.value !== 0) \r\n                  setAbsentHours(undefined)\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md>\r\n            <FormGroupSelect\r\n              id=\"new-time-off-label\"\r\n              label=\"Type\"\r\n              name=\"type\"\r\n              value={ bankableCodes?.find( type => type.options.find( option => option.value === code ) )?.options.find( option => option.value === code )}\r\n              formatGroupLabel={ group => <div className={`p-2 badge-${group.eventColor} rounded`}>{group.label}</div>}\r\n              options={ bankableCodes }\r\n              onChange={option => setCode(option?.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n      <ModalFooter tag={Flex} justify=\"end\" align=\"center\" className=\"bg-light border-top-0\">\r\n        <Button color=\"primary\" onClick={handleSubmit} className=\"px-4\">\r\n          Save\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddScheduleModal;\r\n","////// Packages //////////////////\r\nimport React, { FC, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Badge, Button, Col, Media, Modal, ModalBody, ModalFooter, ModalHeader, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport dayjs from 'dayjs';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport confirm from 'reactstrap-confirm';\r\nimport { toast } from 'react-toastify';\r\n\r\n////// Local Components //////////\r\nimport TimeEntry from '../timesheet/TimeEntry';\r\nimport AddScheduleModal from '../timeoff/AddScheduleModal';\r\n\r\n////// Global Components /////////\r\nimport Flex from 'components/Flex';\r\nimport FormGroupInput from 'components/FormGroupInput';\r\n\r\n////// CommonJS Helpers //////////\r\nimport { FalconColors } from 'components/falconTypes';\r\nimport { pluralizeIf } from 'helpers/pluralizeIf';\r\n\r\n////// Custom Hooks //////////////\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Thunks ////////////////////\r\nimport {timeOffRequests, deleteTimeEntry, deleteTimeOffRequest} from 'store/thunks/time'\r\nimport { approveTimeOffRequest, reviewTimeEntry, timeEntries } from 'store/thunks/time';\r\n\r\n/////// Types ////////////////////\r\nimport { MPerson } from 'store/types/models/id';\r\nimport { MTimeCode, MTimeEntry, MTimeOffRequest, MTimeType } from 'store/types/models/time';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface CircleStackIconProps {\r\n  icon: IconProp;\r\n  transform?: React.CSSProperties['transform']\r\n}\r\nconst CircleStackIcon: FC<CircleStackIconProps> = ({icon, transform}) => (\r\n  <span className=\"fa-stack ml-n1 mr-3\">\r\n    <FontAwesomeIcon icon=\"circle\" className=\"text-200 fa-stack-2x\" />\r\n    <FontAwesomeIcon icon={icon} transform={transform ?? ''} className=\"text-primary fa-stack-1x\" inverse />\r\n  </span>\r\n);\r\n\r\ninterface EventModalMediaContentProps {\r\n  icon: IconProp;\r\n  heading: string;\r\n  content?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n}\r\nconst EventModalMediaContent: FC<EventModalMediaContentProps> = ({ icon, heading, content, children }) => (\r\n  <Media className=\"mt-3\">\r\n    <CircleStackIcon icon={icon} />\r\n    <Media body>\r\n      <>\r\n        <h6>{heading}</h6>\r\n        {children || <p className=\"mb-0 text-justify\">{content}</p>}\r\n      </>\r\n    </Media>\r\n  </Media>\r\n);\r\n\r\nexport interface CalendarEventModalEvent {\r\n  _id: MTimeEntry['_id'] | MTimeOffRequest['_id'];\r\n  title: string;\r\n  end: Date | null;\r\n  start: Date | null;\r\n  allDay?: boolean;\r\n  description?: string;\r\n  comments?: string; \r\n  stageIdentifier?: string;\r\n  stageTitle?: string;\r\n  milestoneTitle?: string;\r\n  timeTypeId?: MTimeType['_id'];\r\n  timeCodeId?: MTimeCode['_id'];\r\n  taskId?: MTimeEntry['taskId'];\r\n  stageId?: MTimeEntry['stageId'];\r\n  taskTitle?: string;\r\n  badge?: {\r\n    color: FalconColors;\r\n    label: string;\r\n  },\r\n  assignment?: {\r\n    _id: string;\r\n    description: string;\r\n    dueDate: string;\r\n    assignedHours: number;\r\n    assignedBy: MPerson['_id'];\r\n    assignerName: string;\r\n  };\r\n  approved?: boolean;\r\n  declined?: boolean;\r\n  declinedReason?: string;\r\n  entryType: 'time' | 'timeOff'\r\n}\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  event: CalendarEventModalEvent;\r\n  personId: MPerson['_id']\r\n}\r\n\r\nconst CalendarEventModal: FC<Props> = ({ isOpen, setIsOpen, event, personId }) => {\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const dispatch = useDispatch();\r\n  const deleteTimeEntryAction = useAction( deleteTimeEntry );\r\n  const deleteTimeOffRequestAction = useAction ( deleteTimeOffRequest )\r\n  const respondTimeOffRequest = useAction(approveTimeOffRequest);\r\n  const acceptTimeEntry = useAction( reviewTimeEntry )\r\n  const [isOpenDeclineReasonModal, setIsOpenDeclineReasonModal] = useState(false);\r\n  const [declineActionReason, setDeclineActionReason] = useState('');\r\n  const [isOpenEditModal, setIsOpenEditModal] = useState(false);\r\n  const declineResolver = useRef<(value: string | PromiseLike<string>) => void>()\r\n  //dummy data!\r\n  // const assignment = {\r\n  //   assignedBy: 'Nicholas Dennspood',\r\n  //   dueDate: '11/12/21',\r\n  //   description: 'please complete all buttons and lil thangs on the user page. Also make sure to do your laundry and wipe your cheekz!',\r\n  //   assignedHours: 45\r\n  // }\r\n  // const stageIdentifier = 'M17632'\r\n  // const stageTitle = 'Develop Product'\r\n  // const milestoneTitle='Finish user interface'\r\n  // const taskTitle='Complete Admin pages'\r\n  // const badge = {\r\n  //   label: '6 hrs',\r\n  //   color: 'soft-dark'\r\n  // }\r\n  // const approved = false;\r\n  // const declined = true;\r\n  // const declinedReason = 'you didnt even wipe your cheekz'\r\n\r\n  const { \r\n    _id,\r\n    title, \r\n    end, \r\n    start,\r\n    allDay,\r\n    description,\r\n    comments,\r\n    stageIdentifier,\r\n    stageTitle,\r\n    milestoneTitle,\r\n    taskTitle, \r\n    badge,\r\n    assignment,\r\n    approved,\r\n    declined,\r\n    declinedReason,\r\n    entryType\r\n  } = event;\r\n\r\n  const closeBtn = (\r\n    <button className=\"close font-weight-normal\" onClick={toggle}>\r\n      &times;\r\n    </button>\r\n  );\r\n\r\n  const handleDeclineRequest = async () => {\r\n    const declinedReason = await new Promise<string>((res, rej)=>{\r\n      setIsOpenDeclineReasonModal( true );\r\n      declineResolver.current = res;\r\n    })\r\n    switch (entryType) {\r\n      case 'time': {\r\n        const data = await acceptTimeEntry.post(_id, false, declinedReason)\r\n        if (data?.success) {\r\n          setIsOpen(false);\r\n          toast.success('Timesheet request declined')\r\n        }\r\n        if (!data?.success) toast.error(data?.error || 'something went wrong')\r\n        break;\r\n      } \r\n      case 'timeOff': {\r\n        const data = await respondTimeOffRequest.post(_id, false, declinedReason)\r\n        if (data?.success) {\r\n          setIsOpen(false);\r\n          toast.success('Time Off request declined')\r\n        }\r\n        if (!data?.success) toast.error(data?.error || 'something went wrong')\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAcceptRequest = async () => {\r\n    switch (entryType) {\r\n      case 'time': {\r\n        const data = await acceptTimeEntry.post(_id, true)\r\n        if (data?.success) {\r\n          setIsOpen(false);\r\n          toast.success('Timesheet request accepted')\r\n        }\r\n        if (!data?.success) toast.error(data?.error || 'something went wrong')\r\n        break;\r\n      }\r\n      case 'timeOff': {\r\n        const data = await respondTimeOffRequest.post(_id, true)\r\n        if (data?.success) {\r\n          setIsOpen(false);\r\n          toast.success('Time off request accepted')\r\n        }\r\n        if (!data?.success) toast.error(data?.error || 'something went wrong')\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleEditRequest = () => {\r\n    setIsOpenEditModal(true)\r\n  }\r\n\r\n  const handleDeleteRequest = async () => {\r\n    const shouldDelete = await confirm({\r\n      message: 'Are you sure you want to delete this entry?',\r\n      confirmColor: 'danger',\r\n      confirmText: 'Delete',\r\n      cancelColor: 'secondary',\r\n      cancelText: 'Keep'\r\n    })\r\n    if ( shouldDelete ) {\r\n      switch(entryType) {\r\n        case 'time': {\r\n            const data = await deleteTimeEntryAction.post(_id)\r\n            if (data?.success) {\r\n              dispatch( timeEntries.remove(_id) )\r\n              toast.success('Deleted request')\r\n              setIsOpen(false)\r\n            } else {\r\n              toast.error(data?.error || 'Something went wrong')\r\n            }\r\n            break;\r\n        }\r\n        case 'timeOff': {\r\n          const data = await deleteTimeOffRequestAction.post(_id)\r\n          if (data?.success) {\r\n            dispatch( timeOffRequests.remove(_id) )\r\n            toast.success('Deleted request')\r\n            setIsOpen(false)\r\n          } else {\r\n            toast.error(data?.error || 'Something went wrong')\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const canApprove = true;\r\n  const canEdit = true;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} size=\"md\" toggle={toggle} modalClassName=\"theme-modal\" contentClassName=\"border\" centered>\r\n      <ModalHeader toggle={toggle} tag=\"div\" className=\"px-card bg-light border-0 flex-between-center\" close={closeBtn}>\r\n        <h5 className=\"mb-1\">{title}</h5>\r\n        <Flex align=\"center\">\r\n          {badge && \r\n            <h5 className=\"mb-0\">\r\n              <Badge color={badge.color}>{badge.label}</Badge>\r\n            </h5>\r\n          }\r\n          {approved \r\n              ? <h6 className=\"mb-0\">\r\n                  <FontAwesomeIcon className=\"text-success ml-3 mr-1\" icon=\"check-circle\" /> \r\n                  Approved\r\n                </h6>\r\n              : declined\r\n                ? <h6 className=\"mb-0\" style={{cursor: 'default'}} id='declined-request'>\r\n                    <FontAwesomeIcon className=\"text-danger ml-3 mr-1\" icon=\"times-circle\" /> \r\n                    Declined\r\n                    <UncontrolledTooltip placement='bottom' target='declined-request'>\r\n                        {declinedReason}\r\n                    </UncontrolledTooltip>\r\n                  </h6>\r\n\r\n                : <h6 className=\"mb-0\">\r\n                    <FontAwesomeIcon className=\"text-info ml-3 mr-1\" icon=\"user-clock\" /> \r\n                      Pending\r\n                  </h6>\r\n                  \r\n            }\r\n            </Flex>\r\n      </ModalHeader>\r\n      <ModalBody className=\"px-card pb-card pt-1 fs--1\">\r\n        { description && <EventModalMediaContent icon=\"align-left\" heading=\"Description\" content={description} /> }\r\n        { comments && <EventModalMediaContent icon=\"align-left\" heading=\"Comments\" content={comments} /> }\r\n        {(start) && (\r\n          <EventModalMediaContent icon=\"calendar-check\" heading=\"Time and Date\">\r\n            <p className=\"mb-2\">\r\n              {\r\n                allDay \r\n                  ? (\r\n                    (!end || dayjs(start).isSame(end, 'day'))\r\n                      ? dayjs(start).format('MMMM D, YYYY')\r\n                      : dayjs(start).isSame(end, 'year')\r\n                        ? (\r\n                          dayjs(start).isSame(end, 'month')\r\n                            ? dayjs(start).format('MMMM D') + ' - ' + dayjs(end).format('D, YYYY')\r\n                            : dayjs(start).format('MMMM D') + ' - ' + dayjs(end).format('MMMM D, YYYY')\r\n                        )\r\n                        : dayjs(start).format('MMMM D, YYYY') + ' - ' + dayjs(end).format('MMMM D, YYYY')\r\n                  )\r\n                  : (\r\n                    end \r\n                      ? dayjs(start).isSame(end, 'day')\r\n                        ? `${dayjs(start).format('MMMM D, YYYY h:mm A')} - ${dayjs(end).format('h:mm A')}`\r\n                        : dayjs(start).format('MMMM D, YYYY h:mm A') + ' - ' + dayjs(end).format('MMMM D, YYYY h:mm A')\r\n                      : `${dayjs(start).format('MMMM D, YYYY h:mm A')}`\r\n                  )\r\n              }\r\n            </p>\r\n          </EventModalMediaContent>\r\n        )}\r\n        <hr/>\r\n        {(taskTitle || stageTitle) &&\r\n          <>\r\n            <Flex column justify=\"center\">\r\n              <h4 className='font-weight-bold my-1 mr-1 text-center'>\r\n                <Badge color='soft-info'>\r\n                  {stageIdentifier}: {stageTitle} \r\n                </Badge>\r\n              </h4>\r\n              <h4 className=\"text-center my-1 text-600\"><FontAwesomeIcon icon='arrow-circle-down' /></h4>\r\n              <h5 className='font-weight-bold my-1 mr-1 text-center'>\r\n                <Badge color='soft-primary'>\r\n                  {milestoneTitle}\r\n                </Badge>\r\n              </h5>\r\n              <h5 className='text-center my-1 text-600'><FontAwesomeIcon icon='arrow-circle-down' /></h5>\r\n              <h5 className='font-weight-bold my-1 mr-1 text-center fs-0'> \r\n                <Badge color='soft-success'>\r\n                  {taskTitle} \r\n                </Badge>\r\n              </h5>\r\n            </Flex>\r\n            \r\n            <hr/>\r\n          </>\r\n        }\r\n        {(assignment) && (\r\n          <EventModalMediaContent icon=\"info\" heading=\"Assignment Info\">\r\n              <Flex>\r\n                <p className='font-weight-bold my-1 mr-1'>Assigned By: </p>\r\n                <p className='my-1 ml-1'>{assignment?.assignerName}</p>\r\n              </Flex>\r\n              <Flex>\r\n                <p className='font-weight-bold my-1 mr-1'>Due Date: </p>\r\n                <p className='my-1 ml-1'>\r\n                  {assignment && dayjs(assignment.dueDate).format(\"MM/DD/YYYY\")} \r\n                  {(assignment.assignedHours) && `- ${assignment.assignedHours} estimated ${pluralizeIf('hour', assignment.assignedHours)}`}\r\n                </p>\r\n              </Flex>\r\n              <Flex>\r\n                <p className='font-weight-bold my-1 mr-1'>Description: </p>\r\n                <p className='my-1 ml-1'>{assignment?.description}</p>\r\n              </Flex>\r\n          </EventModalMediaContent>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter className=\"px-card d-block bg-light border-top-0\">\r\n        <Row noGutters>\r\n          {canEdit && \r\n            <Col xs='auto'>\r\n              <UncontrolledTooltip placement='right' target='delete-time-entry-modal'>\r\n                  Delete Time Entry\r\n              </UncontrolledTooltip>\r\n              <Button color='falcon-default' size='sm' id='delete-time-entry-modal' onClick={handleDeleteRequest}>\r\n                <FontAwesomeIcon icon='trash-alt' className='text-danger'/>\r\n              </Button>\r\n            </Col>\r\n          }\r\n          \r\n          {canApprove && !(approved || declined) &&\r\n            <>\r\n              <Col xs='auto' className='ml-auto mr-2'>\r\n                <Button color='falcon-default' size='sm' onClick={handleAcceptRequest}>\r\n                  <FontAwesomeIcon icon='check' className='mr-1 text-success'/>\r\n                  Approve\r\n                </Button>\r\n              </Col>\r\n              <Col xs='auto' className='mr-2'>\r\n                <Button color='falcon-default' size='sm' onClick={handleDeclineRequest}>\r\n                  <FontAwesomeIcon icon='times' className='mr-1 text-danger' />\r\n                  Decline\r\n                </Button>\r\n                <Modal \r\n                  isOpen={isOpenDeclineReasonModal} \r\n                  toggle={()=>{\r\n                    setIsOpenDeclineReasonModal(false)\r\n                    setDeclineActionReason('')\r\n                  }}\r\n                >\r\n                  <ModalHeader>\r\n                    Decline Reason\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <FormGroupInput\r\n                      id=\"decline-reason\"\r\n                      label=\"Enter Reason\"\r\n                      value={declineActionReason}\r\n                      onChange={e=>setDeclineActionReason(e.target.value)}\r\n                    />\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color='primary' size='sm' onClick={()=>{\r\n                      if (declineResolver.current) declineResolver.current(declineActionReason)\r\n                      setIsOpenDeclineReasonModal(false)\r\n                      setDeclineActionReason('')\r\n                    }}>\r\n                      Submit\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </Col>\r\n            </>\r\n          }\r\n          {canEdit && \r\n            <Col xs='auto' className={(approved || declined) ? 'ml-auto' : ''}>\r\n              <Button tag=\"a\" color=\"falcon-default\" size=\"sm\" onClick={handleEditRequest}>\r\n                <FontAwesomeIcon icon=\"pencil-alt\" className=\"fs--2 mr-2 text-primary\" />\r\n                <span>Edit</span>\r\n              </Button>\r\n              {entryType === 'time' && \r\n                <TimeEntry\r\n                  event={{\r\n                    ...event,\r\n                    timeTypeId: event.timeTypeId!,\r\n                    timeCodeId: event.timeCodeId!\r\n                  }}\r\n                  startDate={start?.toISOString()}\r\n                  endDate={end?.toISOString()}\r\n                  isOpen={isOpenEditModal}\r\n                  setIsOpen={setIsOpenEditModal}\r\n                  selectedPersonId={personId}\r\n                />\r\n              }\r\n              {entryType === 'timeOff' && \r\n                <AddScheduleModal\r\n                  event={{\r\n                    ...event\r\n                  }}\r\n                  initialStartDate={start?.toISOString()}\r\n                  initialEndDate={end?.toISOString()}\r\n                  isOpen={isOpenEditModal}\r\n                  setIsOpen={setIsOpenEditModal}\r\n                />\r\n              }\r\n            </Col> \r\n          }\r\n          \r\n        </Row>\r\n        \r\n        \r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CalendarEventModal;\r\n","import React, { FC } from 'react';\r\nimport { DropdownItem, DropdownItemProps } from 'reactstrap';\r\nimport Flex from 'components/Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\r\nimport classNames from 'classnames';\r\n\r\ninterface Props extends DropdownItemProps {\r\n  filter: string;\r\n  currentFilter: string;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\nconst DropdownItemFilter: FC<Props> = ({ filter, currentFilter, className, children, ...rest }) => (\r\n  <DropdownItem tag={Flex} justify=\"between\" className={classNames('cursor-pointer', className)} {...rest}>\r\n    {children}\r\n    {filter === currentFilter && <FontAwesomeIcon icon=\"check\" transform=\"down-4 shrink-4\" />}\r\n  </DropdownItem>\r\n)\r\n\r\nexport default DropdownItemFilter;\r\n","import React, {FC} from 'react';\r\nimport { DropdownMenu, DropdownToggle, DropdownToggleProps, UncontrolledDropdown } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { isIterableArray } from 'helpers/utils';\r\nimport DropdownItemFilter from './DropdownItemFilter';\r\n\r\n\r\ninterface Props<T> extends DropdownToggleProps {\r\n  filters: T[];\r\n  handleFilter: (filter: T) => void;\r\n  currentFilter: string;\r\n  icon: IconProp;\r\n  right?: boolean;\r\n\r\n}\r\nconst DropdownFilter: FC<Props> = ({ filters, handleFilter, currentFilter, icon, right, ...rest }) => (\r\n  <UncontrolledDropdown>\r\n    <DropdownToggle size=\"sm\" color=\"falcon-default\" {...rest}>\r\n      {currentFilter && <span className=\"mr-2\">{currentFilter}</span>}\r\n      <FontAwesomeIcon icon={icon} />\r\n    </DropdownToggle>\r\n    <DropdownMenu className=\"border py-2\" right={right}>\r\n      {isIterableArray(filters) &&\r\n        filters.map((filter, index) => (\r\n          <DropdownItemFilter\r\n            currentFilter={currentFilter}\r\n            onClick={() => {\r\n              handleFilter(filter);\r\n            }}\r\n            filter={filter}\r\n            className=\"text-capitalize\"\r\n            key={index}\r\n          >\r\n            {filter}\r\n          </DropdownItemFilter>\r\n        ))}\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n\r\nexport default DropdownFilter;\r\n","////// Packages //////////////////\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, Col, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport FullCalendar, { CalendarApi, CalendarOptions } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport DropdownFilter from 'components/DropdownFilter';\r\nimport Flex from 'components/Flex';\r\nimport { isIterableArray } from 'helpers/utils';\r\nimport dayjs from 'dayjs';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n interface Props extends Omit<CalendarOptions, 'plugins' | 'ref' | 'headerToolbar' | 'themeSystem' | 'selectMirror'> {\r\n   apiRef?: React.MutableRefObject<CalendarApi | undefined>;\r\n   onAddEventClick?: ()=>void;\r\n   addEventText?: string;\r\n }\r\n\r\n const DEFAULT_EVENT_TIME_FORMAT = {\r\n  hour: 'numeric',\r\n  minute: '2-digit',\r\n  omitZeroMinute: true,\r\n  meridiem: true\r\n} as const;\r\n\r\nconst DEFAULT_BUTTON_TEXT = {\r\n  today: 'Today',\r\n  month: 'Month view',\r\n  week: 'week',\r\n  day: 'day',\r\n  listWeek: 'list view',\r\n  listYear: 'year'\r\n};\r\n\r\ntype ViewName = 'Month View' | 'Week View' | 'Day View' | 'List View' | 'Year View';\r\ntype ViewOption = 'dayGridMonth' | 'timeGridWeek' | 'timeGridDay' | 'listWeek' | 'listYear'\r\n\r\nconst views: [ViewName, ViewOption][] = [\r\n  ['Month View', 'dayGridMonth'],\r\n  ['Week View', 'timeGridWeek'],\r\n  ['Day View', 'timeGridDay'],\r\n  ['List View', 'listWeek'],\r\n  ['Year View', 'listYear']\r\n]\r\n\r\nconst FalconCalendar: FC<Props> = ({\r\n  apiRef,\r\n  onAddEventClick,\r\n  addEventText=\"Add Event\",\r\n  initialView=\"dayGridMonth\", \r\n  dayMaxEvents=2, \r\n  height=800, \r\n  stickyHeaderDates=false, \r\n  eventTimeFormat=DEFAULT_EVENT_TIME_FORMAT, \r\n  buttonText=DEFAULT_BUTTON_TEXT,\r\n  events,\r\n  ...calendarProps\r\n}) => {\r\n  const calendarRef = useRef<FullCalendar>(null);\r\n  const [calendarApi, setCalendarApi] = useState(undefined as CalendarApi | undefined);\r\n  const [title, setTitle] = useState('');\r\n  const [currentFilter, setCurrentFilter] = useState(views.find( view => view[1] === initialView)?.[0] || 'Month View' as ViewName);\r\n  const [viewAllTime, setViewAllTime] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCalendarApi(calendarRef.current?.getApi());\r\n    if (apiRef && calendarRef?.current) apiRef.current = calendarRef.current.getApi()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const t = apiRef?.current?.getCurrentData().viewApi.type;\r\n    if (t) {\r\n      const newView = views.find( view => view[1] === t )?.[0]\r\n      if (newView) \r\n        handleFilter( newView )\r\n    }\r\n  }, [apiRef?.current?.getCurrentData().viewApi.type])\r\n\r\n  const handleFilter = (filter: ViewName) => {\r\n    setCurrentFilter(filter);\r\n    const newView = views.find( view => view[0] === filter)?.[1]\r\n    if (newView) calendarApi?.changeView(newView);\r\n    setTitle(calendarApi?.getCurrentData().viewTitle || '');\r\n  };\r\n\r\n  const minHour = Math.min(dayjs().hour(), 7)\r\n  const maxHour = Math.max(dayjs().hour(), 18)\r\n\r\n  const countOutOfRange = isIterableArray(events) && events.reduce( (total, event) => {\r\n      if(!(event.start && event.end)) return total\r\n      const start = dayjs(event.start)\r\n      const end = dayjs(event.end)\r\n      if (start.add(1, 'day').isBefore(end)) return total\r\n      if (start.hour() > minHour && start.hour() < maxHour) return total\r\n      if (end.hour() > minHour && end.hour() < maxHour) return total\r\n      return total + 1\r\n  }, 0)\r\n  \r\n  const viewsConfig = {\r\n      week: {\r\n        eventLimit: 5,\r\n        slotMinTime: viewAllTime ? \"00:00:00\" : dayjs().hour(minHour).minute(0).format('HH:mm:ss'),\r\n        slotMaxTime: viewAllTime ? \"24:00:00\" : dayjs().hour(maxHour).minute(60).format('HH:mm:ss')\r\n      },\r\n      day: {\r\n        eventLimit: 5,\r\n        slotMinTime: viewAllTime ? \"00:00:00\" : dayjs().hour(minHour).minute(0).format('HH:mm:ss'),\r\n        slotMaxTime: viewAllTime ? \"24:00:00\" : dayjs().hour(maxHour).minute(60).format('HH:mm:ss')\r\n      }\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"mb-3\">\r\n        <CardHeader>\r\n          <Row noGutters className=\"align-items-center\">\r\n            <Col xs=\"auto\" className=\"d-flex justify-content-end order-md-1\">\r\n              <UncontrolledTooltip placement=\"bottom\" target=\"previous\">\r\n                Previous\r\n              </UncontrolledTooltip>\r\n              <UncontrolledTooltip placement=\"bottom\" target=\"next\">\r\n                Next\r\n              </UncontrolledTooltip>\r\n              <Button\r\n                onClick={() => {\r\n                  calendarApi?.prev();\r\n                  setTitle(calendarApi?.getCurrentData().viewTitle || '');\r\n                }}\r\n                color=\"link\"\r\n                className=\"icon-item icon-item-sm icon-item-hover shadow-none p-0 mr-1 ml-md-2\"\r\n                id=\"previous\"\r\n              >\r\n                <FontAwesomeIcon icon=\"arrow-left\" />\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  calendarApi?.next();\r\n                  setTitle(calendarApi?.getCurrentData().viewTitle || '');\r\n                }}\r\n                color=\"link\"\r\n                className=\"icon-item icon-item-sm icon-item-hover shadow-none p-0 mr-1\"\r\n                id=\"next\"\r\n              >\r\n                <FontAwesomeIcon icon=\"arrow-right\" />\r\n              </Button>\r\n            </Col>\r\n            <Col xs=\"auto\" md=\"auto\" className=\"order-md-2\">\r\n              <h4 className=\"mb-0 fs-0 fs-sm-1 fs-lg-2 calendar-title\">\r\n                {title || `${calendarApi?.getCurrentData().viewTitle}`}\r\n              </h4>\r\n            </Col>\r\n            <Col xs md=\"auto\" tag={Flex} justify=\"end\" className=\"order-md-3\">\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"falcon-primary\"\r\n                onClick={() => {\r\n                  calendarApi?.today();\r\n                  setTitle(calendarApi?.getCurrentData().viewTitle || '');\r\n                }}\r\n              >\r\n                Today\r\n              </Button>\r\n            </Col>\r\n            <Col md=\"auto\" className=\"d-md-none\">\r\n              <hr />\r\n            </Col>\r\n            <Col xs=\"auto\" className=\"d-flex order-md-0\">\r\n              {\r\n                onAddEventClick && \r\n                <Button color=\"primary\" size=\"sm\" onClick={onAddEventClick}>\r\n                  <FontAwesomeIcon icon=\"plus\" className=\"mr-1\" /> {addEventText}\r\n                </Button>\r\n              }\r\n            </Col>\r\n            <Col className=\"d-flex justify-content-end order-md-2\">\r\n              <DropdownFilter\r\n                className=\"mr-2\"\r\n                filters={views.map(view=>view[0])}\r\n                currentFilter={currentFilter}\r\n                handleFilter={handleFilter}\r\n                icon=\"sort\"\r\n                right\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody className=\"p-0\">\r\n          <FullCalendar\r\n            ref={calendarRef}\r\n            headerToolbar={false}\r\n            plugins={[dayGridPlugin, bootstrapPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\r\n            initialView={initialView}\r\n            themeSystem=\"bootstrap\"\r\n            dayMaxEvents={dayMaxEvents}\r\n            height={height}\r\n            stickyHeaderDates={stickyHeaderDates}\r\n            selectMirror\r\n            eventTimeFormat={eventTimeFormat}\r\n            buttonText={buttonText}\r\n            events={events}\r\n            views={viewsConfig}\r\n            {...calendarProps}\r\n          />\r\n          {\r\n            (currentFilter === 'Day View' || currentFilter === 'Week View') && \r\n            <>\r\n              {\r\n                !!countOutOfRange && !viewAllTime &&\r\n                  <Flex align=\"center\" justify=\"center\">\r\n                    <h5 className=\"my-2\">{`+ ${countOutOfRange} hidden`}</h5>\r\n                  </Flex>\r\n              }\r\n              <Flex column>\r\n                <Button color=\"falcon-primary\" id=\"calendar-expand\" onClick={()=>setViewAllTime(v=>!v)}>\r\n                  <FontAwesomeIcon icon=\"angle-down\"  transform={viewAllTime ? \"rotate-180\" : ''}/>\r\n                </Button>\r\n                <UncontrolledTooltip target=\"calendar-expand\">{viewAllTime ? \"Collapse Time\" : \"Show All Time\"}</UncontrolledTooltip>\r\n              </Flex>\r\n            </>\r\n          }\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FalconCalendar;\r\n","import { getTimeEntries } from \"store/thunks/time\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nexport const useTimeEntries =  (personId: MPerson['_id'], startDate: string, endDate: string) => {\r\n    return useLoadAndSelect({\r\n        actionCreator: getTimeEntries,\r\n        postParams: [personId, startDate, endDate],\r\n        selector: state => Object.values( state.time.timeEntries )\r\n                        .filter( timeEntry => (timeEntry.personId === personId) \r\n                                                && (timeEntry.endTime > startDate) \r\n                                                && (timeEntry.startTime < endDate)\r\n                        ),\r\n        deduplicate: ['timeEntries', personId, startDate, endDate]\r\n    })\r\n}\r\n\r\nexport default useTimeEntries;","import dayjs from \"dayjs\";\r\nimport { shallowEqual } from \"react-redux\";\r\nimport { getTimeOffRequests } from \"store/thunks/time\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { MTimeOffRequest } from \"store/types/models/time\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useTimeOffRequests(personId?: MPerson['_id'], startDate?: string, endDate?: string) {\r\n    return useLoadAndSelect<MTimeOffRequest[]>({\r\n        actionCreator: personId ? getTimeOffRequests : undefined,\r\n        postParams: personId,\r\n        selector: state => Object.values(state.time.timeOffRequests).filter( request => \r\n                                                                                request.personId === personId \r\n                                                                                && (!startDate || dayjs(request.endDate || request.startDate ).isAfter(startDate))\r\n                                                                                && (!endDate || dayjs( request.startDate ).isBefore(endDate))\r\n                                                                            ),\r\n        equality: shallowEqual,\r\n        deduplicate: ['getTimeOffRequests', personId, startDate || 'nostart', endDate || 'noend']\r\n    })\r\n}\r\n\r\nexport default useTimeOffRequests;","////// Packages //////////////////\r\nimport React, { FC, useEffect, useRef, useState } from 'react'\r\nimport { Card, CardBody, CustomInput, Row, Col } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport {  CalendarApi, EventContentArg, EventSourceInput } from '@fullcalendar/common';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { EventResizeDoneArg } from '@fullcalendar/interaction';\r\nimport { toast } from 'react-toastify';\r\n\r\n////// Local Components //////////\r\nimport DisplayAccrual from '../components/DisplayAccrual';\r\nimport CalendarEventModal, { CalendarEventModalEvent } from '../components/CalendarEventModal';\r\n\r\n////// Global Components /////////\r\nimport FalconCalendar from 'compositions/FalconCalendar';\r\n\r\nimport FalconCardHeader from 'components/FalconCardHeader';\r\nimport Flex from 'components/Flex';\r\n\r\n////// CommonJS Helpers //////////\r\nimport TimeEntry, { DT_FORMAT } from './TimeEntry';\r\nimport { pluralizeIf } from 'helpers/pluralizeIf';\r\nimport { colorOptions } from 'components/falconTypes';\r\n\r\n////// Custom Hooks //////////////\r\nimport useTimeCodes from 'store/hooks/time/useTimeCodes';\r\nimport useAction from 'store/hooks/useAction';\r\nimport useTimeEntries from 'store/hooks/time/useTimeEntries';\r\nimport useTimeOffRequests from 'store/hooks/time/useTimeOffRequests';\r\n\r\n////// Thunks ////////////////////\r\nimport { updateTimeEntry, updateTimeOffRequest } from 'store/thunks/time';\r\nimport { MPerson } from 'store/types/models/id';\r\n\r\n////// Types /////////////////////\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Timesheet: FC<Props> = () => {\r\n    const apiRef = useRef<CalendarApi>();\r\n    const updateTimeOffAction = useAction( updateTimeOffRequest );\r\n    const updateTimeEntryAction = useAction( updateTimeEntry );\r\n    const [eventModalEventData, setEventModalEventData] = useState<CalendarEventModalEvent>();\r\n\r\n    \r\n    const { value: timeCodes, ...timeCodesLoader } = useTimeCodes();\r\n    const myPersonId = useSelector( state => state.app.login.personId );\r\n\r\n    const [ startDate, setStartDate ] = useState( dayjs().startOf('week').toISOString() );\r\n    const [ endDate, setEndDate ] = useState( dayjs().startOf('week').add(7, 'day').toISOString() );\r\n\r\n    ///FORM STATE\r\n    const [selectedPersonId, setSelectedPersonId] = useState<MPerson['_id']>();\r\n\r\n    const [selectedStartDate, setSelectedStartDate] = useState('');\r\n    const [selectedEndDate, setSelectedEndDate] = useState('');\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    \r\n    useEffect(()=> {\r\n        if (myPersonId) \r\n            setSelectedPersonId(myPersonId)\r\n    }, [myPersonId])\r\n\r\n    const [showTimesheet, setShowTimesheet] = useState(true);\r\n    const [showTimeOffRequests, setShowTimeOffRequests] = useState(true);\r\n    const [showApprovedRequests, setShowApprovedRequests] = useState(true);\r\n    const [showDeclinedRequests, setShowDeclinedRequests] = useState(true);\r\n    const [showPendingRequests, setShowPendingRequests] = useState(true);\r\n\r\n    const { value: timeEntries, ...timeEntriesLoader } = useTimeEntries(selectedPersonId || '', startDate, endDate)\r\n    const {value: timeOffRequests, ...timeOffRequestLoader } = useTimeOffRequests(selectedPersonId, startDate, endDate)\r\n    \r\n    const allDayEvents: EventSourceInput = []\r\n\r\n    timeEntries?.forEach( entry => {\r\n        const evt = allDayEvents.findIndex( existing => dayjs(existing.start?.toString()).isSame(entry.startTime, 'day') );\r\n        const entryHours = dayjs(entry.endTime).diff(entry.startTime, 'minute') / 60\r\n        if (evt !== -1) {\r\n            allDayEvents[evt].hours += entryHours\r\n            allDayEvents[evt].classNames = [allDayEvents[evt].hours < 8 ? \"bg-500 text-800\" : allDayEvents[evt].hours === 8 ? \"badge-success\" : \"badge-warning\"]\r\n            allDayEvents[evt].title = `Total hours: ${allDayEvents[evt].hours}`\r\n        } else {\r\n            allDayEvents.push({\r\n                id: dayjs(entry.startTime).format(\"MMDDYY\"),\r\n                start: entry.startTime,\r\n                allDay: true,\r\n                selectable: false,\r\n                hours: entryHours,\r\n                editable: false,\r\n                classNames: [entryHours === 8 ? \"badge-success\" : \"badge-secondary\"],\r\n                title: `Total hours: ${entryHours}`\r\n            })\r\n        }\r\n    })\r\n\r\n    const usedTimeEntries = showTimesheet \r\n                                ? (timeEntries?.map(e => (\r\n                                        {\r\n                                            ...e, \r\n                                            start: e.startTime, \r\n                                            end: e.endTime, \r\n                                            title: e.taskTitle,\r\n                                            entryType: 'time',\r\n                                            approved: !!e.approverId,\r\n                                            declined: !!e.declinerId\r\n                                        }\r\n                                    )) || [])\r\n                                :[]\r\n\r\n    const usedTimeOffRequests = showTimeOffRequests\r\n                                    ? (timeOffRequests?.map(e=>(\r\n                                            {\r\n                                                ...e, \r\n                                                start: e.startDate, \r\n                                                end: e.endDate || (e.allDay && e.startDate),\r\n                                                className: e.approved ? \"bg-stripes-info\"\r\n                                                            : e.declined ? \"bg-stripes-danger\"\r\n                                                            :\"bg-stripes-warning\",\r\n                                                entryType: 'timeOff',\r\n                                                hours: e.absentHours,\r\n                                                display: 'background'\r\n                                            }\r\n                                        )) || [])\r\n                                    : []\r\n\r\n    const combinedEvents = [\r\n        ...usedTimeEntries, \r\n        ...usedTimeOffRequests\r\n    ].filter( e => \r\n        (showApprovedRequests && e.approved) \r\n        || (showDeclinedRequests && e.declined) \r\n        || ( showPendingRequests && (!e.approved && !e.declined) ) \r\n    )\r\n\r\n    const rawEvents: EventSourceInput = combinedEvents?.map( timeEntry => {\r\n        const color = timeCodes?.find( timeType => timeType.timeCodes.find( timeCode => timeEntry.timeCode._id === timeCode._id ) )?.eventColor\r\n        return {\r\n            ...timeEntry,\r\n            id: timeEntry._id,\r\n            title: `${timeEntry.timeCode.title}: ${timeEntry.title || ''}`,\r\n            textColor: 'inherit',\r\n            badge: timeEntry.hours ? {\r\n                label: timeEntry.hours + ' ' + pluralizeIf('hr', timeEntry.hours),\r\n                color: color || 'soft-dark'\r\n            }: undefined,\r\n            classNames: color ? [`bg-${color}`, `text-${colorOptions.find( option => option.value === color )?.text}`, 'overflow-hidden'] : ['overflow-hidden']\r\n        }\r\n    }) || []\r\n\r\n    const events = [...rawEvents, ...allDayEvents];\r\n\r\n\r\n\r\n    function formatTimeEntryTitle(timeEntry: EventContentArg) {\r\n        if (timeEntry.event.allDay) return timeEntry.event.title\r\n        const originalEntry = timeEntry.event.extendedProps;\r\n        const taskTitle = originalEntry?.taskTitle; // Program Timesheet Interface --- pri 1\r\n        const timeCode = originalEntry?.timeCode?.title; // Development Projects -- pri 2  ?\r\n        const hours = (timeEntry.event.end && timeEntry.event.start) ? dayjs(timeEntry.event.end?.toISOString()).diff(timeEntry.event.start?.toISOString(), 'minute') / 60 : 0\r\n        let fixedPlaces = 0;\r\n        if (hours && hours % 1) {\r\n            fixedPlaces = 1\r\n        }\r\n        const hoursDisplay = hours ? hours.toFixed(fixedPlaces) : 'unknown'\r\n        const duration = hoursDisplay + ' hr' + (hours === 1 ? '' : 's'); // \r\n        return (\r\n            <div className=\"text-truncate w-100\">\r\n                <Flex justify=\"between\">\r\n                    <h6 className=\"mb-0\">{`${timeEntry.timeText} (${duration})`}</h6>\r\n                    {originalEntry.approved && <FontAwesomeIcon icon=\"check-circle\" className=\"mr-1\" />}\r\n                    {originalEntry.declined && <FontAwesomeIcon icon=\"times-circle\" className=\"mr-1\" />}\r\n                </Flex>\r\n                <p className=\"my-1 font-weight-bold\"><i>{timeCode}</i></p>\r\n                {taskTitle && <p className=\"my-1 fs--1\"><i>{taskTitle}</i></p>}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    async function handleEventChange({event, revert}: EventResizeDoneArg) {\r\n        if (event.extendedProps.entryType === \"time\") {\r\n            const data = await updateTimeEntryAction.post(event.id, {startTime: event.start?.toISOString(), endTime: event.end?.toISOString()})\r\n            if (!data?.success) {\r\n                toast.error(data?.error || \"something went wrong\")\r\n                revert()\r\n            }\r\n        } else if (event.extendedProps.entryType === \"timeOff\") {\r\n            const data = await updateTimeOffAction.post(event.id, {startDate: event.start?.toISOString(), endDate: event.end?.toISOString()})\r\n            if (!data?.success) {\r\n                toast.error(data?.error || \"something went wrong\")\r\n                revert()\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Row>\r\n                <Col xl={10} className=\"order-1 order-xl-0\">\r\n                    <FalconCalendar\r\n                        apiRef={apiRef}\r\n                        editable \r\n                        selectable \r\n                        onAddEventClick={()=>setIsOpen(true)} \r\n                        addEventText=\"Add Time Entry\"\r\n                        select={info=>{\r\n                            console.log(info)\r\n                            if (info.view.type === \"dayGridMonth\") {\r\n                                const s = info.start.getTime()\r\n                                const e = info.end.getTime()\r\n                                if ( e - s !== (1000 * 3600 * 24) ) {\r\n                                   apiRef.current?.changeView('timeGridWeek', info.startStr)\r\n                                } else {\r\n                                    apiRef.current?.changeView('timeGridDay', info.start)\r\n                                }\r\n                            } else {\r\n                                setIsOpen(true);\r\n                                setSelectedStartDate(dayjs(info.start).format(DT_FORMAT))\r\n                                setSelectedEndDate(dayjs(info.end).format(DT_FORMAT))\r\n                            }\r\n                            \r\n                        }}\r\n                        eventClick={ arg => {\r\n                            setEventModalEventData({\r\n                                ...(arg.event.extendedProps as any),\r\n                                timeCodeId: arg.event.extendedProps?.timeCode?._id,\r\n                                title: arg.event.title,\r\n                                start: arg.event.start,\r\n                                end: arg.event.end,\r\n                                allDay: arg.event.allDay\r\n                            })\r\n                        } }\r\n                        eventResize={ args => {handleEventChange(args); return true} }\r\n                        eventDrop={ args => {handleEventChange(args as any); return true} }\r\n                        events={events}\r\n                        initialView={window.innerWidth < 750 ? \"timeGridDay\" : \"timeGridWeek\"}\r\n                        allDaySlot\r\n                        allDayContent=\"Total Hours\"\r\n                        nowIndicator\r\n                        eventContent={ item => formatTimeEntryTitle(item)}\r\n                        height=\"auto\"\r\n                        dayMaxEvents={4}\r\n                        datesSet={ info => {\r\n                            setStartDate(info.start.toISOString())\r\n                            setEndDate(info.end.toISOString())\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col xl={2} className=\"order-0 order-xl-1\">\r\n                    <Row>\r\n                        <Col xs={12} lg=\"auto\" xl={12} className=\"d-block d-lg-flex d-xl-block\">\r\n                            <Card className=\"mb-3\">\r\n                                <FalconCardHeader title='Filters' />\r\n                                <CardBody>\r\n                                    <Row>\r\n                                        <Col xs={6} xl={12}>\r\n                                            <CustomInput\r\n                                                id=\"show-timesheets\"\r\n                                                label=\"Timesheet\"\r\n                                                onChange={() => setShowTimesheet(!showTimesheet)}\r\n                                                checked={showTimesheet}\r\n                                                type=\"switch\"\r\n                                            />\r\n                                            <CustomInput\r\n                                                id=\"show-timeOff\"\r\n                                                className=\"mt-3\"\r\n                                                label=\"Time Off\"\r\n                                                onChange={() => setShowTimeOffRequests(!showTimeOffRequests)}\r\n                                                checked={showTimeOffRequests}\r\n                                                type=\"switch\"\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={6} xl={12}>\r\n                                            <hr className=\"d-none d-xl-block\" />\r\n                                            <h6 className=\"d-none d-xl-block\" >Requests:</h6>\r\n                                            <CustomInput\r\n                                                id=\"show-approved-requests\"\r\n                                                className=\"mt-xl-3\"\r\n                                                label=\"Approved\"\r\n                                                onChange={() => setShowApprovedRequests(!showApprovedRequests)}\r\n                                                checked={showApprovedRequests}\r\n                                                type=\"switch\"\r\n                                            />\r\n                                            <CustomInput\r\n                                                id=\"show-declined-requests\"\r\n                                                className=\"mt-3\"\r\n                                                label=\"Declined\"\r\n                                                onChange={() => setShowDeclinedRequests(!showDeclinedRequests)}\r\n                                                checked={showDeclinedRequests}\r\n                                                type=\"switch\"\r\n                                            />\r\n                                            <CustomInput\r\n                                                id=\"show-pending-requests\"\r\n                                                className=\"mt-3\"\r\n                                                label=\"Pending\"\r\n                                                onChange={() => setShowPendingRequests(!showPendingRequests)}\r\n                                                checked={showPendingRequests}\r\n                                                type=\"switch\"\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            {selectedPersonId && <DisplayAccrual personId={selectedPersonId}  className=\"mb-3\" />}    \r\n                        </Col> \r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n           <TimeEntry\r\n                startDate={selectedStartDate}\r\n                endDate={selectedEndDate}\r\n                setIsOpen={setIsOpen}\r\n                isOpen={isOpen}\r\n                selectedPersonId={selectedPersonId}\r\n           />\r\n            \r\n            {\r\n                eventModalEventData && selectedPersonId &&\r\n                    <CalendarEventModal\r\n                        isOpen={!!eventModalEventData}\r\n                        setIsOpen={()=>setEventModalEventData(undefined)}\r\n                        event={eventModalEventData}\r\n                        personId={selectedPersonId}\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Timesheet;\r\n\r\n{/* <Modal isOpen={!!viewEvent} toggle={()=>setViewEvent(undefined)}>\r\n                    <ModalHeader className=\"bg-light border-bottom-0\">\r\n                        Time Entry Details\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <h5>{`${viewEvent.timeTypeTitle} -- ${viewEvent?.timeCode?.title}`}</h5>\r\n                        {viewEvent?.taskTitle && <h6>{viewEvent.taskTitle}</h6>}\r\n                        <hr />\r\n                        <h6>\r\n                            <i>\r\n                                {\r\n                                    `${\r\n                                        dayjs(viewEvent?.startTime).format(\"MMM D h:mm A\")\r\n                                    } - ${\r\n                                        dayjs(viewEvent?.endTime).format(dayjs(viewEvent?.startTime).isSame(viewEvent.endTime, 'date') ? \"h:mm A\" : \"MMM D h:mm A\")\r\n                                    } (${\r\n                                        viewEvent?.hours\r\n                                    } hr${\r\n                                        viewEvent?.hours === 1 ? '' : 's'\r\n                                    })`\r\n                                }\r\n                            </i>\r\n                        </h6>\r\n                        <hr />\r\n                        {viewEvent?.comments?.split(\"\\n\").map( (str, i) => <p key={i}>{str}</p>)}\r\n                    </ModalBody>\r\n                </Modal> */}","////// Packages //////////////////\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, Col, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport FullCalendar, { CalendarApi, DateSelectArg, EventClickArg, EventInput, EventSource } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport DropdownFilter from 'components/DropdownFilter';\r\nimport Flex from 'components/Flex';\r\nimport dayjs from 'dayjs';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n\r\n//// SETTINGS ////\r\nconst buttonText = {\r\n  today: 'Today',\r\n  month: 'Month view',\r\n  week: 'week',\r\n  day: 'day',\r\n  listWeek: 'list view',\r\n  listYear: 'year'\r\n};\r\n\r\nconst eventTimeFormat = {\r\n  hour: 'numeric',\r\n  minute: '2-digit',\r\n  omitZeroMinute: true,\r\n  meridiem: true\r\n} as const;\r\n\r\nconst viewName = [\r\n  'Month View', \r\n  'Week View', \r\n  'Day View', \r\n  'List View', \r\n  'Year View'\r\n];\r\n\r\ntype ViewOption = 'Month View' | \r\n                  'Week View' | \r\n                  'Day View' | \r\n                  'List View' | \r\n                  'Year View'\r\n\r\nconst viewMap = {\r\n  'Month View': 'dayGridMonth', \r\n  'Week View': 'timeGridWeek', \r\n  'Day View': 'timeGridDay', \r\n  'List View': 'listWeek', \r\n  'Year View': 'listYear'\r\n} as const;\r\n\r\ninterface Props {\r\n  events?: EventInput[];\r\n  addEventText?: string;\r\n  onEventClick?: (e: EventClickArg)=>void;\r\n  onDateSelect?: (info: DateSelectArg | null)=>void;\r\n  defaultView?: ViewOption\r\n}\r\n\r\nconst Calendar: FC<Props> = ({events=[], addEventText, onEventClick, onDateSelect, defaultView='Month View'}) => {\r\n  const calendarRef = useRef<FullCalendar>(null);\r\n  const [calendarApi, setCalendarApi] = useState<CalendarApi>();\r\n  const [title, setTitle] = useState<string>();\r\n  const [currentFilter, setCurrentFilter] = useState(defaultView as string);\r\n  const [viewAllTime, setViewAllTime] = useState(false);\r\n\r\n  const views = {\r\n    week: {\r\n      eventLimit: 5,\r\n      slotMinTime: viewAllTime ? \"00:00:00\" : \"07:00:00\",\r\n      slotMaxTime: viewAllTime ? \"24:00:00\" : \"19:00:00\"\r\n    },\r\n    day: {\r\n      eventLimit: 5,\r\n      slotMinTime: viewAllTime ? \"00:00:00\" : \"07:00:00\",\r\n      slotMaxTime: viewAllTime ? \"24:00:00\" : \"19:00:00\"\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCalendarApi(calendarRef.current?.getApi());\r\n  }, []);\r\n\r\n  const handleFilter = (filter: ViewOption) => {\r\n    setCurrentFilter(filter);\r\n    if (!calendarApi) return\r\n    calendarApi.changeView(viewMap[filter] || 'listYear');\r\n    setTitle(calendarApi?.getCurrentData().viewTitle);\r\n  };\r\n\r\n  const countOutOfRange = events.reduce( (total, event) => {\r\n                                              if(!(event.start && event.end)) return total\r\n                                              const start = dayjs(event.start)\r\n                                              const end = dayjs(event.end)\r\n                                              if (start.add(1, 'day').isBefore(end)) return total\r\n                                              if (start.hour() > 7 && start.hour() < 18) return total\r\n                                              if (end.hour() > 7 && end.hour() < 18) return total\r\n                                              return total + 1\r\n                                          }, 0)\r\n  // const displayEvents = !(currentFilter === 'Day View' || currentFilter === 'WeekView') || viewAllTime ? events : events.slice(0)\r\n  //                               .sort((a, b) => new Date(a.start as Date).getTime() - new Date(b.start as Date).getTime())\r\n  //                               .reduce( (display, event) => {\r\n  //                                 const start = dayjs(event.start)\r\n  //                                 const end = dayjs(event.end)\r\n  //                                 console.log(start.hour(), end.hour())\r\n  //                                 if (!(start.hour() < 7 || start.hour() > 18) || !(end.hour() < 7 || end.hour() > 18) || start.add(1, 'day').isBefore(end)) {\r\n  //                                   return [...display, event]\r\n  //                                 }\r\n  //                                 const lastEvent = display[display.length - 1]\r\n  //                                 const lastEnd = lastEvent && dayjs(lastEvent.end)\r\n  //                                 if (lastEvent?.endDay) {\r\n  //                                   if (start.hour() < 7) {\r\n  //                                     return [...display, {\r\n  //                                       ...event,\r\n  //                                       start: start.hour(7).minute(0).toDate(),\r\n  //                                       end: end.hour(7).minute(30).toDate(),\r\n  //                                       startDay: true,\r\n  //                                       count: 1\r\n  //                                     }]\r\n  //                                   }\r\n  //                                   if (lastEnd?.add(1, 'day').isAfter(end)) {\r\n  //                                     return [...display.slice(0, -1), {...lastEvent, count: lastEvent.count + 1}]\r\n  //                                   }\r\n  //                                   return [...display, {\r\n  //                                     ...event,\r\n  //                                     start: start.hour(18).minute(30).toDate(),\r\n  //                                     end: end.hour(19).minute(0).toDate(),\r\n  //                                     endDay: true,\r\n  //                                     count: 1,\r\n  //                                     title: '+ 1 more'\r\n  //                                   }]\r\n  //                                 } else if (lastEvent?.startDay && lastEnd?.isAfter(end)) {\r\n                                      \r\n  //                                     return [...display.slice(0, -1), {...lastEvent, count: lastEvent.count + 1}]\r\n  //                                 } else {\r\n  //                                   if (start.hour() > 19) {\r\n  //                                     return [...display, {\r\n  //                                       ...event,\r\n  //                                       start: start.hour(18).minute(30).toDate(),\r\n  //                                       end: end.hour(19).minute(0).toDate(),\r\n  //                                       endDay: true,\r\n  //                                       count: 1,\r\n  //                                       title: '+ 1 more'\r\n  //                                     }]\r\n  //                                   }\r\n  //                                   return [...display, {\r\n  //                                     ...event,\r\n  //                                     start: start.hour(7).minute(0).toDate(),\r\n  //                                     end: end.hour(7).minute(30).toDate(),\r\n  //                                     startDay: true,\r\n  //                                     count: 1\r\n  //                                   }]\r\n  //                                 }\r\n  //                               }, [] as EventInput[])\r\n\r\n  // console.log(displayEvents)\r\n  return (\r\n    <>\r\n      <Card className=\"mb-3\">\r\n        <CardHeader>\r\n          <Row noGutters className=\"align-items-center\">\r\n            <Col xs=\"auto\" className=\"d-flex justify-content-end order-md-1\">\r\n              <UncontrolledTooltip placement=\"bottom\" target=\"previous\">\r\n                Previous\r\n              </UncontrolledTooltip>\r\n              <UncontrolledTooltip placement=\"bottom\" target=\"next\">\r\n                Next\r\n              </UncontrolledTooltip>\r\n              <Button\r\n                onClick={() => {\r\n                  calendarApi?.prev();\r\n                  setTitle(calendarApi?.getCurrentData().viewTitle);\r\n                }}\r\n                color=\"link\"\r\n                className=\"icon-item icon-item-sm icon-item-hover shadow-none p-0 mr-1 ml-md-2\"\r\n                id=\"previous\"\r\n              >\r\n                <FontAwesomeIcon icon=\"arrow-left\" />\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  calendarApi?.next();\r\n                  setTitle(calendarApi?.getCurrentData().viewTitle);\r\n                }}\r\n                color=\"link\"\r\n                className=\"icon-item icon-item-sm icon-item-hover shadow-none p-0 mr-1\"\r\n                id=\"next\"\r\n              >\r\n                <FontAwesomeIcon icon=\"arrow-right\" />\r\n              </Button>\r\n            </Col>\r\n            <Col xs=\"auto\" md=\"auto\" className=\"order-md-2\">\r\n              <h4 className=\"mb-0 fs-0 fs-sm-1 fs-lg-2 calendar-title\">\r\n                {title || `${calendarApi?.getCurrentData().viewTitle}`}\r\n              </h4>\r\n            </Col>\r\n            <Col xs md=\"auto\" tag={Flex} justify=\"end\" className=\"order-md-3\">\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"falcon-primary\"\r\n                onClick={() => {\r\n                  calendarApi?.today();\r\n                  setTitle(calendarApi?.getCurrentData().viewTitle);\r\n                }}\r\n              >\r\n                Today\r\n              </Button>\r\n            </Col>\r\n            <Col md=\"auto\" className=\"d-md-none\">\r\n              <hr />\r\n            </Col>\r\n            {\r\n              onDateSelect && addEventText && \r\n                <Col xs=\"auto\" className=\"d-flex order-md-0\">\r\n                  <Button color=\"primary\" size=\"sm\" onClick={() => onDateSelect(null)}>\r\n                    <FontAwesomeIcon icon=\"plus\" className=\"mr-1\" />{addEventText}\r\n                  </Button>\r\n                </Col>\r\n            }\r\n            \r\n            <Col className=\"d-flex justify-content-end order-md-2\">\r\n              <DropdownFilter\r\n                className=\"mr-2\"\r\n                filters={viewName}\r\n                currentFilter={currentFilter}\r\n                handleFilter={handleFilter}\r\n                icon=\"sort\"\r\n                right\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody className=\"p-0\">\r\n          <FullCalendar\r\n            ref={calendarRef}\r\n            headerToolbar={false}\r\n            plugins={[dayGridPlugin, bootstrapPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\r\n            initialView={viewMap[defaultView]}\r\n            themeSystem=\"bootstrap\"\r\n            dayMaxEvents={2}\r\n            height={'auto'}\r\n            stickyHeaderDates={false}\r\n            editable\r\n            selectable\r\n            selectMirror\r\n            select={onDateSelect}\r\n            views={views}\r\n            eventTimeFormat={eventTimeFormat}\r\n            eventClick={onEventClick}\r\n            events={events}\r\n            buttonText={buttonText}\r\n          />\r\n          {\r\n            (currentFilter === 'Day View' || currentFilter === 'Week View') && \r\n            <>\r\n              {\r\n                countOutOfRange && !viewAllTime &&\r\n                  <Flex align=\"center\" justify=\"center\">\r\n                    <h5 className=\"my-2\">{`+ ${countOutOfRange} hidden`}</h5>\r\n                  </Flex>\r\n              }\r\n              <Flex column>\r\n                <Button color=\"falcon-primary\" id=\"calendar-expand\" onClick={()=>setViewAllTime(v=>!v)}>\r\n                  <FontAwesomeIcon icon=\"angle-down\"  transform={viewAllTime ? \"rotate-180\" : ''}/>\r\n                </Button>\r\n                <UncontrolledTooltip target=\"calendar-expand\">{viewAllTime ? \"Collapse Time\" : \"Show All Time\"}</UncontrolledTooltip>\r\n              </Flex>\r\n            </>\r\n          }\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","////// Packages //////////////////\r\nimport { DateSelectArg, EventClickArg } from '@fullcalendar/common';\r\nimport React, { FC, useState } from 'react'\r\nimport { Col, Row } from 'reactstrap';\r\nimport useTimeCodes from 'store/hooks/time/useTimeCodes';\r\n\r\n\r\n\r\n\r\n\r\n////// Local Components //////////\r\nimport AddScheduleModal from './AddScheduleModal';\r\nimport CalendarEventModal, { CalendarEventModalEvent } from '../components/CalendarEventModal';\r\n\r\n////// Global Components /////////\r\nimport DisplayAccrual from '../components/DisplayAccrual';\r\nimport Calendar from '../Calendar';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport useTimeOffRequests from 'store/hooks/time/useTimeOffRequests';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst TimeOff: FC<Props> = () => {\r\n    const {personId} = useParams<{personId?: string}>()\r\n    const myPersonId = useSelector( state => state.app.login.personId )\r\n    const selectedPersonId = personId || myPersonId\r\n    const {value: timeOffRequests, ...timeOffRequestLoader } = useTimeOffRequests(selectedPersonId)\r\n\r\n    const [isOpenScheduleModal, setIsOpenScheduleModal] = useState(false);\r\n    const [scheduleInitialStartDate, setScheduleInitialStartDate] = useState('');\r\n    const [scheduleInitialEndDate, setScheduleInitialEndDate] = useState('');\r\n    const [isOpenEventModal, setIsOpenEventModal] = useState(false);\r\n    const [eventModalEventData, setEventModalEventData] = useState<CalendarEventModalEvent>();\r\n\r\n    function onDateSelect(arg: DateSelectArg | null) {\r\n        setIsOpenScheduleModal(true)\r\n        setScheduleInitialStartDate(arg?.start?.toISOString() || '')\r\n        setScheduleInitialEndDate(arg?.end?.toISOString() || '')\r\n    }\r\n\r\n    function onEventClick(arg: EventClickArg) {\r\n        setIsOpenEventModal(true)\r\n        if (arg.event) {\r\n            const {\r\n                _id,\r\n                description,\r\n                badgeLabel,\r\n                badgeColor,\r\n            } = arg.event.extendedProps\r\n            setEventModalEventData({\r\n                ...arg.event.extendedProps,\r\n                _id,\r\n                title: arg.event.title,\r\n                start: arg.event.start,\r\n                end: arg.event.end,\r\n                allDay: arg.event.allDay,\r\n                description: description,\r\n                badge: {\r\n                    label: badgeLabel,\r\n                    color: badgeColor\r\n                },\r\n                entryType: 'timeOff'\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const events = timeOffRequests?.map( req => ({\r\n        ...req,\r\n        start: new Date(req.startDate),\r\n        end: new Date(req.endDate)\r\n    }))\r\n    return (\r\n        <>\r\n            <Row className=\"mt-3\">\r\n                <Col xl={3} className=\"order-0 order-xl-1\">\r\n                    {selectedPersonId && <DisplayAccrual personId={selectedPersonId}/>}\r\n                </Col>\r\n                <Col xl={9} className=\"order-1 order-xl-0\">\r\n                    <Calendar \r\n                        events={events}\r\n                        onDateSelect={onDateSelect}\r\n                        onEventClick={onEventClick}\r\n                        addEventText=\"New Time Off Request\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <AddScheduleModal\r\n                initialStartDate={scheduleInitialStartDate}\r\n                initialEndDate={scheduleInitialEndDate}\r\n                isOpen={isOpenScheduleModal}\r\n                setIsOpen={setIsOpenScheduleModal}\r\n            />\r\n            {\r\n                eventModalEventData && \r\n                    <CalendarEventModal\r\n                        isOpen={isOpenEventModal}\r\n                        setIsOpen={setIsOpenEventModal}\r\n                        event={eventModalEventData}\r\n                        personId={selectedPersonId!}\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TimeOff;","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport UnderConstruction from 'layouts/errors/UnderConstruction';\r\nimport Timesheet from 'layouts/time/timesheet/Timesheet';\r\nimport TimeOff from 'layouts/time/timeoff/TimeOff';\r\n\r\ninterface Props extends RouteComponentProps {\r\n\r\n}\r\n\r\nconst TimeRoutes: FC<Props> = ({ match: { url } }) => (\r\n  <Switch>\r\n    <Route path={`${url}/timesheet`} component={Timesheet} />\r\n    <Route path={`${url}/timeoff`} exact component={TimeOff} />\r\n    <Route path={`${url}/approvals`} exact component={UnderConstruction} /> \r\n\r\n    {/*Redirect*/}\r\n    <Redirect to=\"/errors/404\" />\r\n  </Switch>\r\n);\r\n\r\nexport default TimeRoutes;\r\n","import React, { FC } from 'react';\r\nimport { FormGroup, Input, InputProps, Label, LabelProps, FormFeedback } from 'reactstrap';\r\n\r\ninterface Props extends InputProps {\r\n  label?: string;\r\n  formClass?: string;\r\n  feedback?: React.ReactNode;\r\n  isTooltipFeedback?: boolean;\r\n  labelProps?: LabelProps;\r\n}\r\nconst FormGroupInput: FC<Props> = ({ label, formClass='', feedback, valid, invalid, isTooltipFeedback, labelProps, ...rest }) => {\r\n  const {id, ...inputProps} = rest;\r\n  return (\r\n    <FormGroup className={formClass}>\r\n      {label && <Label htmlFor={id} {...labelProps} >{label}</Label>}\r\n      <Input id={id} valid={valid} invalid={invalid} {...inputProps} />\r\n      {feedback && <FormFeedback valid={valid} invalid={invalid} tooltip={isTooltipFeedback}>{feedback}</FormFeedback>}\r\n    </FormGroup>\r\n  )\r\n};\r\n\r\nexport default FormGroupInput;","import React, {FC} from 'react';\r\nimport {  FormGroup, Label, LabelProps } from 'reactstrap';\r\nimport Select, {Props as SelectProps } from 'react-select';\r\n\r\nexport type FormGroupSelectOptions = { value: (string | number | readonly string[] | undefined), label: React.ReactNode }[]\r\n\r\ninterface Props extends SelectProps<any, false> {\r\n  id: string;\r\n  label: string;\r\n  labelProps?: LabelProps\r\n}\r\n\r\nconst FormGroupSelect: FC<Props> = ({ id, label, styles, labelProps, ...inputProps }) => (\r\n  <FormGroup>\r\n    {label && <Label for={id} {...labelProps}>{label}</Label>}\r\n      <Select \r\n        classNamePrefix=\"react-select\" \r\n        id={id} \r\n        styles={{\r\n          ...styles,\r\n          menu: provided => ({...provided, zIndex: 999})\r\n        }}\r\n        {...inputProps} />\r\n      {/* //   {options && isIterableArray(options) &&\r\n      //     options.map(({ value, label }, index) => (\r\n      //       <option value={value} key={index} dangerouslySetInnerHTML={createMarkup(label)} />\r\n      //     ))}\r\n      // </Select> */}\r\n  </FormGroup>\r\n);\r\n\r\nexport default FormGroupSelect;\r\n","////// Packages ////////////////\r\n\r\n////// Ducks ///////////////////\r\nimport { BaseDuck } from \"store/ducks/BaseDuck\";\r\nimport { \r\n    stages as stagesDuck\r\n} from \"store/ducks/workflow\";\r\nimport { FormState as StageForm } from \"store/ducks/forms/addStage\";\r\n\r\n///// Helpers //////////////////////\r\nimport uploadDoc from 'helpers/uploadDoc';\r\nimport base64toBlob from \"helpers/base64toBlob\";\r\n\r\n////// Thunk ///////////////////////\r\n\r\n////// Types ///////////////////////\r\nimport { MStage } from \"store/types/models/workflow\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MOrganization, MPerson } from \"store/types/models/id\";\r\nimport { DropzoneFile } from \"store/store\";\r\nimport { DateType } from \"store/typedef\";\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n//\r\n//  extends the workflows duck to include thunk actions. workflows should be imported from here\r\n//\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\ninterface StageController extends BaseDuck<MStage> {\r\n    create: ActionCreator<['createStage']>;\r\n    getStageIdentifiers: ActionCreator<['getStageIdentifiers']>;\r\n    createNewTag: ActionCreator<['createStageTag']>;\r\n    createNewType: ActionCreator<['createStageType']>;\r\n    getOne: ActionCreator<['getStageDetails']>;\r\n    addStageMember: ActionCreator<['addStageMember']>;\r\n    addStageOrganization: ActionCreator<['addStageOrganization']>;\r\n    postNote: ActionCreator<['createNote']>;\r\n    addStageDocuments: ActionCreator<['addStageDocuments']>;\r\n    addStagePhotos: ActionCreator<['addStagePhotos']>;\r\n    updateStage: ActionCreator<['updateStage']>;\r\n    getCondensedTimesheetInfo: ActionCreator<['timesheetCondensedData']>;\r\n}\r\n\r\nexport const stages = stagesDuck as StageController\r\n\r\nexport const create: ActionCreator<['createStage']> = async (stageInfo: StageForm) => {\r\n\r\n        const arrDocuments = Object.values(stageInfo.documents);\r\n        const arrDocumentsPosted = [] as {location: string; thumb?: {location: string}; title: string}[]\r\n        const arrPhotosPosted = [] as {location: string, title: string, tags?: string[]}[]\r\n\r\n        for await (const file of arrDocuments) {\r\n            let docType: 'document' | 'photo' = 'document'\r\n            if (/\\.png$|\\.jpg$|\\.gif$|\\.tiff$|\\.jpeg/i.test(file.path)) {\r\n                docType = 'photo'\r\n            }\r\n            const docData = await uploadDoc(base64toBlob(file.base64), docType, file.path)\r\n            if (docData?.success && docData.files?.[docType]) {\r\n                if (docType === 'photo') {\r\n                    arrPhotosPosted.push({location: docData.files?.[docType], title: file.path })\r\n                } else if (docType == 'document') {\r\n                    arrDocumentsPosted.push({location: docData.files?.[docType].name, thumb: (docData.files?.[docType].thumb ? {location: docData.files?.[docType].thumb} : undefined), title: file.path })\r\n                }\r\n            }\r\n        }\r\n        const formData = {\r\n            ...stageInfo,\r\n            documents: arrDocumentsPosted,\r\n            photos: arrPhotosPosted\r\n        }\r\n        const actions = [\r\n            {\r\n                name: 'createStage',\r\n                data: formData\r\n            }\r\n        ] as const;\r\n        return {actions}\r\n    }\r\nstages.create = create;\r\n\r\nexport const getOne: ActionCreator<['getStageDetails']> = (stageId: string) => {\r\n    const actions = [{\r\n        name: 'getStageDetails',\r\n        data: {\r\n            stageId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.getOne = getOne;\r\n\r\nexport const getStageIdentifiers: ActionCreator<['getStageIdentifiers']> = (identifier: string) => {\r\n    const actions = [\r\n        {\r\n            name: 'getStageIdentifiers',\r\n            data: {\r\n                identifier\r\n            }\r\n        }\r\n    ] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.getStageIdentifiers = getStageIdentifiers;\r\n\r\nexport const createNewTag: ActionCreator<['createStageTag']> = (tag: string) => {\r\n    const actions = [{\r\n        name: 'createStageTag',\r\n        data: {\r\n            tag\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.createNewTag = createNewTag;\r\n\r\nexport const createNewType: ActionCreator<['createStageType']> = (title: string) => {\r\n    const actions = [{\r\n        name: 'createStageType',\r\n        data: {\r\n            title\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.createNewType = createNewType;\r\n\r\n\r\nexport const addStageMember: ActionCreator<['addStageMember']> = (stageId: MStage['_id'], organizationId: MOrganization['_id'], personId: MPerson['_id'], role: string) => {\r\n    const actions = [{\r\n        name: 'addStageMember',\r\n        data: {\r\n            stageId,\r\n            organizationId,\r\n            personId,\r\n            role\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\nstages.addStageMember = addStageMember;\r\n\r\nexport const addStageOrganization: ActionCreator<['addStageOrganization']> = (stageId: MStage['_id'], organizationId: MOrganization['_id'], role: string) => {\r\n    const actions = [{\r\n        name: 'addStageOrganization',\r\n        data: {\r\n            stageId,\r\n            organizationId,\r\n            role\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\nstages.addStageOrganization = addStageOrganization;\r\n\r\nexport const postNote: ActionCreator<['createNote']> = (body: string, stageId: MStage['_id']) => {\r\n    const actions = [{\r\n        name: 'createNote',\r\n        data: {\r\n            body,\r\n            stageId\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nstages.postNote = postNote;\r\n\r\nexport const addStageDocuments: ActionCreator<['addStageDocuments']> = async ( attachments: DropzoneFile[], stageId: MStage['_id']) => {\r\n\r\n    const arrDocumentsPosted = [] as {location: string, thumb?: {location: string}, title: string}[]\r\n\r\n    for ( const attachment of attachments ) {        \r\n        const newDoc = await uploadDoc(base64toBlob(attachment.base64), 'document', attachment.path)\r\n        if (newDoc?.success && newDoc.files?.document) {\r\n            arrDocumentsPosted.push(\r\n                {\r\n                    location: newDoc.files?.document.name, \r\n                    thumb: newDoc.files?.document.thumb \r\n                                ? {location: newDoc.files?.document.thumb} \r\n                                : undefined, \r\n                    title: attachment.path\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!attachments || !attachments.length) return { cancel: true }\r\n  \r\n    const actions = [{\r\n        name: 'addStageDocuments',\r\n        data: {\r\n            documents: arrDocumentsPosted,\r\n            stageId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\nstages.addStageDocuments = addStageDocuments;\r\n\r\nexport const addStagePhotos: ActionCreator<['addStagePhotos']> = async ( attachments: DropzoneFile[], stageId: MStage['_id'] ) => {\r\n\r\n    const arrPhotosPosted = [] as {location: string, title: string}[]\r\n\r\n    for ( const attachment of attachments ) {\r\n        const newPhoto = await uploadDoc(base64toBlob(attachment.base64), 'photo', attachment.path)\r\n        if (newPhoto?.success && newPhoto.files?.photo) {\r\n            arrPhotosPosted.push(\r\n                {\r\n                    location: newPhoto.files?.photo, \r\n                    title: attachment.path\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!attachments || !attachments.length) return { cancel: true }\r\n\r\n    const actions = [{\r\n        name: 'addStagePhotos',\r\n        data: {\r\n            photos: arrPhotosPosted,\r\n            stageId\r\n        }\r\n    }] as const;\r\n    return {actions};\r\n}\r\n\r\nstages.addStagePhotos = addStagePhotos;\r\n\r\ninterface StageUpdate {\r\n    metaData?: {\r\n        identifier?: string,\r\n        title?: string,\r\n        description?: string,\r\n        type?: string,\r\n        internalBudget?: number,\r\n        externalBudget?: number,\r\n        ownerId?: string,\r\n        estCompletionDate?: DateType\r\n    },\r\n    location?: {\r\n        coordinates?: [number, number],\r\n        properties?: {\r\n            description?: string;\r\n            city?: string;\r\n            state?: string;\r\n            zip?: string;\r\n        }\r\n    },\r\n    tags?: string[]\r\n}\r\nexport const updateStage: ActionCreator<['updateStage']> = (stageId: MStage['_id'], updateObject: StageUpdate) => {\r\n    const actions = [{\r\n        name: 'updateStage',\r\n        data: {stageId, ...updateObject}\r\n    }] as const;\r\n    return {actions};\r\n}\r\n\r\nstages.updateStage = updateStage\r\n\r\nexport const getCondensedTimesheetInfo: ActionCreator<['timesheetCondensedData']> = (personId: MPerson['_id'], activeOnly?: boolean) => {\r\n    const actions = [{\r\n        name: 'timesheetCondensedData',\r\n        data: {\r\n            personId,\r\n            activeOnly\r\n        }\r\n    }] as const;\r\n    return { actions };\r\n}\r\n\r\nstages.getCondensedTimesheetInfo = getCondensedTimesheetInfo","const base64toBlob = (dataURI: string): Blob => {\r\n    const splitDataURI = dataURI.split(',')\r\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\r\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\r\n\r\n    const ia = new Uint8Array(byteString.length)\r\n    for (let i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i)\r\n    }\r\n    return new Blob([ia], { type: mimeString })\r\n}\r\n\r\nexport default base64toBlob;","import { BaseDuck } from \"store/ducks/BaseDuck\";\r\nimport { ConfigurationBank } from \"store/ducks/forms/configureBanks\";\r\nimport { timeTypes as typesDuck, timeEntries as entriesDuck, timeOffBanks as timeOffBanksDuck, timeOffRequests as timeOffRequestsDuck } from \"store/ducks/time\";\r\nimport { DateType } from \"store/typedef\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { MTimeBank, MTimeCode, MTimeEntry, MTimeType, MTimeOffRequest } from \"store/types/models/time\";\r\nimport { MAssignment, MTask } from \"store/types/models/workflow\";\r\n\r\ninterface TimeTypeController extends BaseDuck<MTimeType> {\r\n    getTimeTypes: ActionCreator<['getTimeTypes']>;\r\n    createTimeType: ActionCreator<['createTimeType']>;\r\n    createTimeCode: ActionCreator<['createTimeCode']>;\r\n    deleteTimeType: ActionCreator<['deleteTimeType']>;\r\n    updateTimeType: ActionCreator<['updateTimeType']>;\r\n}\r\n\r\ninterface TimeEntryController extends BaseDuck<MTimeEntry> {\r\n    getTimeEntries: ActionCreator<['getTimeEntries']>;\r\n    createTimeEntry: ActionCreator<['createTimeEntry']>;\r\n    updateTimeEntry: ActionCreator<['updateTimeEntry']>;\r\n    reviewTimeEntry: ActionCreator<['reviewTimeEntry']>;\r\n    deleteTimeEntry: ActionCreator<['deleteTimeEntry']>;\r\n}\r\n\r\ninterface TimeOffRequestsController extends BaseDuck<MTimeOffRequest> {\r\n    createTimeOffRequest: ActionCreator<['createTimeOffRequest']>;\r\n    getTimeOffRequests: ActionCreator<['getTimeOffRequests']>;\r\n    approveTimeOffRequest: ActionCreator<['approveTimeOffRequest']>;\r\n    updateTimeOffRequest: ActionCreator<['updateTimeOffRequest']>;\r\n    deleteTimeOffRequest: ActionCreator<['deleteTimeOffRequest']>;\r\n}\r\n\r\ninterface TimeOffBanksController extends BaseDuck<MTimeBank> {\r\n    createTimeBank: ActionCreator<['createTimeBank']>\r\n    updateTimeBank: ActionCreator<['updateTimeBank']>\r\n    deleteTimeBank: ActionCreator<['deleteTimeBank']>\r\n    getLeaveBanks: ActionCreator<['getTimeBanks']>\r\n}\r\n\r\nexport const timeTypes = typesDuck as TimeTypeController\r\nexport const timeEntries = entriesDuck as TimeEntryController\r\nexport const timeOffBanks = timeOffBanksDuck as TimeOffBanksController\r\nexport const timeOffRequests = timeOffRequestsDuck as TimeOffRequestsController\r\n\r\n// TIME TYPES AND CODES\r\n\r\nexport const getTimeTypes: ActionCreator<['getTimeTypes']> = () => {\r\n    const actions = [{\r\n        name: 'getTimeTypes',\r\n        data: {\r\n\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeTypes.getTimeTypes = getTimeTypes;\r\n\r\nexport const createTimeType: ActionCreator<['createTimeType']> = (title: string, eventColor: MTimeType['eventColor'], isWorkflow?: boolean) => {\r\n    const actions = [{\r\n        name: 'createTimeType',\r\n        data: {\r\n            title,\r\n            eventColor,\r\n            isWorkflow\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\ntimeTypes.createTimeType = createTimeType\r\n\r\nexport const createTimeCode: ActionCreator<['createTimeCode']> = (title: string, timeTypeId: MTimeType['_id'], bankable?: boolean) => {\r\n    const actions = [{\r\n        name: 'createTimeCode',\r\n        data: {\r\n            title,\r\n            bankable: !!bankable,\r\n            timeTypeId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\ntimeTypes.createTimeCode = createTimeCode\r\n\r\nexport const deleteTimeType: ActionCreator<['deleteTimeType']> = (timeTypeId: MTimeType['_id']) => {\r\n    const actions = [{\r\n        name: 'deleteTimeType',\r\n        data: {\r\n            timeTypeId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\ntimeTypes.deleteTimeType = deleteTimeType\r\n\r\ninterface TimeTypeUpdate {\r\n    title: MTimeType['title'], \r\n    eventColor: MTimeType['eventColor'], \r\n    isWorkflow: MTimeType['isWorkflow']\r\n}\r\n\r\nexport const updateTimeType: ActionCreator<['updateTimeType']> = (timeTypeId: MTimeType['_id'], update: TimeTypeUpdate) => {\r\n    const actions = [{\r\n        name: 'updateTimeType',\r\n        data: {\r\n            timeTypeId,\r\n            ...update\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\ntimeTypes.updateTimeType = updateTimeType\r\n\r\n\r\n//ENTRIES\r\n\r\nexport const getTimeEntries: ActionCreator<['getTimeEntries']> = (personId: MPerson['_id'], startDate: string, endDate: string) => {\r\n    const actions = [{\r\n        name: 'getTimeEntries',\r\n        data: {\r\n            personId,\r\n            startDate,\r\n            endDate\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\ntimeEntries.getTimeEntries = getTimeEntries;\r\n\r\ninterface NewTimeEntryProps {\r\n    personId: MPerson['_id'],\r\n    startTime: string,\r\n    endTime: string,\r\n    timeCodeId: MTimeCode['_id'],\r\n    comments?: string,\r\n    taskId?: MTask['_id'],\r\n    assignmentId?: MAssignment['_id']\r\n}\r\n\r\nexport const createTimeEntry: ActionCreator<['createTimeEntry']> = (timeEntry: NewTimeEntryProps) => {\r\n    const actions = [{\r\n        name: 'createTimeEntry',\r\n        data: timeEntry\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\ntimeEntries.createTimeEntry = createTimeEntry;\r\n\r\ninterface TimeEntryUpdate {\r\n    timeCodeId?: MTimeCode['_id'];\r\n    startTime?: string;\r\n    endTime?: string;\r\n    comments?: string;\r\n    taskId?: MTask['_id'];\r\n    assignmentId?: MAssignment['_id']\r\n}\r\n\r\nexport const updateTimeEntry: ActionCreator<['updateTimeEntry']> = (timeEntryId: MTimeEntry['_id'], update: TimeEntryUpdate) => {\r\n    const actions = [{\r\n        name: 'updateTimeEntry',\r\n        data: {\r\n            timeEntryId,\r\n            ...update\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\ntimeEntries.updateTimeEntry = updateTimeEntry\r\n\r\nexport const deleteTimeEntry: ActionCreator<['deleteTimeEntry']> = (timeEntryId: MTimeEntry['_id']) => {\r\n    const actions = [{\r\n        name: 'deleteTimeEntry',\r\n        data: {\r\n            timeEntryId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\ntimeEntries.deleteTimeEntry = deleteTimeEntry\r\n\r\nexport const reviewTimeEntry: ActionCreator<['reviewTimeEntry']> = (timeEntryId: MTimeEntry['_id'], approved: boolean, declinedReason?: string) => {\r\n    const actions = [{\r\n        name: 'reviewTimeEntry',\r\n        data: {\r\n            timeEntryId,\r\n            approved,\r\n            declinedReason\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\ntimeEntries.reviewTimeEntry = reviewTimeEntry\r\n\r\n// TIME OFF\r\n\r\ninterface TimeOffRequestOptions {\r\n    startDate: string;\r\n    endDate: string;\r\n    title: string;\r\n    allDay?: boolean;\r\n    description?: string;\r\n    timeCodeId?: MTimeCode['_id'];\r\n    absentHours?: number;\r\n}\r\n\r\nexport const createTimeOffRequest: ActionCreator<['createTimeOffRequest']> = (request: TimeOffRequestOptions) => {\r\n    const actions = [{\r\n        name: 'createTimeOffRequest',\r\n        data: request\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffRequests.createTimeOffRequest = createTimeOffRequest\r\n\r\n\r\n\r\nexport const updateTimeOffRequest: ActionCreator<['updateTimeOffRequest']> = (requestId: MTimeOffRequest['_id'], update: Partial<TimeOffRequestOptions>) => {\r\n    const actions = [{\r\n        name: 'updateTimeOffRequest',\r\n        data: {\r\n            ...update,\r\n            requestId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffRequests.updateTimeOffRequest = updateTimeOffRequest\r\n\r\n\r\nexport const deleteTimeOffRequest: ActionCreator<['deleteTimeOffRequest']> = (requestId: MTimeOffRequest['_id']) => {\r\n    const actions = [{\r\n        name: 'deleteTimeOffRequest',\r\n        data: {\r\n            requestId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffRequests.deleteTimeOffRequest = deleteTimeOffRequest\r\n\r\n\r\nexport const getTimeOffRequests: ActionCreator<['getTimeOffRequests']> = (personId?: MPerson['_id'], startDate?: DateType, endDate?: DateType) => {\r\n    const actions = [{\r\n        name: 'getTimeOffRequests',\r\n        data: {\r\n            personId,\r\n            startDate,\r\n            endDate\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffRequests.getTimeOffRequests = getTimeOffRequests\r\n\r\n// Can both approve of decline, depending on value of the \"approve\" parameter\r\nexport const approveTimeOffRequest: ActionCreator<['approveTimeOffRequest']> = (requestId: MTimeOffRequest['_id'], approve: boolean, declineReason?: string) => {\r\n    const actions = [{\r\n        name: 'approveTimeOffRequest',\r\n        data: {\r\n            requestId,\r\n            approve: approve || undefined,\r\n            decline: !approve || undefined,\r\n            declineReason\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffRequests.approveTimeOffRequest = approveTimeOffRequest\r\n\r\n\r\nexport const getLeaveBanks: ActionCreator<['getTimeBanks']> = (personId: MPerson['_id']) => {\r\n    const actions = [{\r\n        name: 'getTimeBanks',\r\n        data: {\r\n            personId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffBanks.getLeaveBanks = getLeaveBanks\r\n\r\nexport const createTimeBank: ActionCreator<['createTimeBank']> = (bank: ConfigurationBank) => {\r\n    const actions = [{\r\n        name: 'createTimeBank',\r\n        data: {\r\n            title: bank.title,\r\n            personId: bank.personId,\r\n            timeCodeId: bank.timeCodeId,\r\n            unit: bank.unit,\r\n            hoursPerUnit: +bank.hoursPerUnit,\r\n            policy: {\r\n                accrualPeriod: bank.policy.accrualPeriod,\r\n                accrualAmount: +bank.policy.accrualAmount,\r\n                accrueWeeks: bank.policy.accrueWeeks,\r\n                accrueWeekdays: bank.policy.accrueWeekdays,\r\n                accrueDates: bank.policy.accrueDates,\r\n                accrueMonths: bank.policy.accrueMonths,\r\n                accrualMaximum: bank.policy.accrualMaximum ? +bank.policy.accrualMaximum : undefined,\r\n                effectiveDate: bank.policy.effectiveDate,\r\n                autoAccrual: bank.policy.autoAccrual\r\n            },\r\n            templateTitle: bank.templateTitle\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffBanks.createTimeBank = createTimeBank\r\n\r\nexport const updateTimeBank: ActionCreator<['updateTimeBank']> = (configuration: Partial<ConfigurationBank> & {timeBankId: MTimeBank['_id']}) => {\r\n    const actions = [{\r\n        name: 'updateTimeBank',\r\n        data: {\r\n            ...configuration\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffBanks.updateTimeBank = updateTimeBank\r\n\r\nexport const deleteTimeBank: ActionCreator<['deleteTimeBank']> = (timeBankId: MTimeBank['_id']) => {\r\n    const actions = [{\r\n        name: 'deleteTimeBank',\r\n        data: {\r\n            timeBankId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\ntimeOffBanks.deleteTimeBank = deleteTimeBank\r\n\r\n","////// Packages //////////////////\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FalconColors } from 'components/falconTypes';\r\nimport dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputProps } from 'reactstrap'\r\nimport HappinDateTime, {DateTimeProps} from './HappinDateTime';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends Omit<InputProps, 'onChange'> {\r\n    onChange?: (date: string)=>void;\r\n    pickerProps?: Omit<DateTimeProps, 'setter' | 'value'>;\r\n    buttonColor?: FalconColors;\r\n    autoFillBlank?: boolean\r\n}\r\n\r\nconst DateTimeInputGroup: FC<Props> = ({dateFormat=\"MM/DD/YY\", timeFormat=\"hh:mm A\", value, onChange, onBlur, pickerProps, size, autoFillBlank, buttonColor=\"primary\", ...inputProps}) => {\r\n    const [dateValue, setDateValue] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [firstRender, setFirstRender] = useState(true)\r\n    const format = (dateFormat && timeFormat) ? (dateFormat + ' ' + timeFormat) : ( dateFormat || timeFormat )\r\n\r\n    useEffect(()=> {\r\n        if (firstRender) {\r\n            setFirstRender(false);\r\n            if (!value && !autoFillBlank) return;\r\n        }\r\n        \r\n        const d = dayjs(value)\r\n        if ( d.isValid() ) {\r\n            setDateValue( d.format( format ) )\r\n        } else {\r\n            setDateValue( value )\r\n        }\r\n        \r\n    }, [value])\r\n\r\n    function handleInputBlur() {\r\n        const d = dayjs(dateValue);\r\n        if ( d.isValid() ) {\r\n            if (onChange) onChange( d.format( format ) )\r\n        } else {\r\n            if (onChange) onChange( dateValue )\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup>\r\n                <Input \r\n                    onChange={e=>setDateValue(e.target.value)} \r\n                    onBlur={ handleInputBlur } \r\n                    value={dateValue}\r\n                    size={size}\r\n                    {...inputProps} \r\n                />\r\n                <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                        outline\r\n                        color={buttonColor}\r\n                        onClick={()=>setIsOpen(o=>!o)}\r\n                        size={size}\r\n                    >\r\n                        <FontAwesomeIcon icon='calendar' />\r\n                    </Button>\r\n                </InputGroupAddon>\r\n                \r\n            </InputGroup>\r\n            <HappinDateTime\r\n                        dateFormat={dateFormat}\r\n                        timeFormat={timeFormat}\r\n                        onChange={date => {\r\n                            const d = dayjs(date)\r\n                            if ( d.isValid() ) {\r\n                                setDateValue( d.format(format) )\r\n                                if (onChange) onChange( d.format(format) )\r\n                            }\r\n                        }}\r\n                        value={dateValue}\r\n                        dropLeft\r\n                        open={isOpen}\r\n                        onClose={(date)=>{\r\n                            setIsOpen(false);\r\n                            if(pickerProps?.onClose) pickerProps.onClose(date);\r\n                        }}\r\n                        {...pickerProps}\r\n                    />\r\n                \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DateTimeInputGroup\r\n\r\n//  <DateTimePicker \r\n//                         setter={date => {\r\n//                             const d = dayjs(date)\r\n//                             if ( d.isValid() ) {\r\n//                                 setDateValue( d.format(format) )\r\n//                                 if (onChange) onChange( d.format(format) )\r\n//                             }\r\n//                         }} \r\n//                         value={dateValue}\r\n//                         dropLeft\r\n//                         dateFormat={dateFormat}\r\n//                         timeFormat={timeFormat}\r\n//                         {...pickerProps}\r\n//                     /> ","import React, { FC } from 'react';\r\n\r\ninterface Props {\r\n    onClickPrev: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    onClickSwitch: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    onClickNext: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    switchContent: React.ReactNode;\r\n    switchColSpan?: number;\r\n    switchProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement> & {[extendedProp: string]: any};\r\n}\r\n\r\nconst ViewNavigation: FC<Props> = ( { onClickPrev, onClickSwitch, onClickNext, switchContent, switchColSpan, switchProps } ) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<th className=\"rdtPrev\" onClick={ onClickPrev }>\r\n\t\t\t\t<span>‹</span>\r\n\t\t\t</th>\r\n\t\t\t<th className=\"rdtSwitch\" colSpan={ switchColSpan } onClick={ onClickSwitch } {...switchProps}>\r\n\t\t\t\t{ switchContent }\r\n\t\t\t</th>\r\n\t\t\t<th className=\"rdtNext\" onClick={ onClickNext }>\r\n\t\t\t\t<span>›</span>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default ViewNavigation;","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit, FlexibleDateType, RenderDateFunction } from '../types/HappinDateTime';\r\n\r\nimport dayjs from 'dayjs';\r\nimport localeData from 'dayjs/plugin/localeData';\r\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\r\ndayjs.extend(LocalizedFormat);\r\ndayjs.extend(localeData);\r\n\r\n\r\nconst DEFAULT_RENDER_DAY: RenderDateFunction = ( props, date ) => <td { ...props }>{ date.date() }</td>\r\nconst DEFAULT_VALID_DATE_CHECK = () => true;\r\n\r\ninterface Props {\r\n    renderDay?: RenderDateFunction;\r\n    isValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n    viewDate: dayjs.Dayjs;\r\n    navigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n    showView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n    timeFormat?: string | boolean;\r\n    selectedDate: dayjs.Dayjs;\r\n    updateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n    // setSelectedDate: (date: dayjs.Dayjs | ((date: FlexibleDateType)=>dayjs.Dayjs) )=>void\r\n}\r\n\r\nconst DaysView: FC<Props> = ({\r\n    renderDay=DEFAULT_RENDER_DAY, \r\n    isValidDate=DEFAULT_VALID_DATE_CHECK,\r\n    viewDate,\r\n    navigate,\r\n    showView,\r\n    timeFormat,\r\n    selectedDate,\r\n    updateDate\r\n}) => {\r\n\r\n    const date = viewDate;\r\n    const dat = dayjs(viewDate.toISOString())\r\n\t\t\r\n    const startOfMonth = date.clone().startOf('month');\r\n    const endOfMonth = date.clone().endOf('month');\r\n    \r\n    // We need 42 days in 6 rows\r\n    // starting in the last week of the previous month\r\n    const rows: React.ReactNode[][] = [\r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7],\r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7]\r\n    ];\r\n\r\n    const startDate = dat.startOf('month').startOf('week');\r\n\r\n    // const setDate = (renderDate: dayjs.Dayjs) => {\r\n    //     setSelectedDate( date => dayjs.isDayjs(date) \r\n    //                                 ? date.year(renderDate.year())\r\n    //                                         .month(renderDate.month())\r\n    //                                         .date(renderDate.date())\r\n    //                                 : renderDate \r\n    //     )\r\n    // }\r\n    const endDate = startDate.add( 42, 'd' );\r\n    let renderDate = startDate\r\n    for (const row of rows) {\r\n        for (const i in row) {\r\n            const valid = isValidDate(renderDate.startOf('day')) || isValidDate( renderDate.endOf('day') )\r\n            row[i] = renderDay(\r\n                {\r\n                    key: renderDate.format('MMDDYYhh'),\r\n                    'data-value': renderDate.date(),\r\n                    'data-month': renderDate.month(),\r\n                    'data-year': renderDate.year(),\r\n                    className: classNames('rdtDay', {\r\n                        'rdtOld': renderDate.isBefore( startOfMonth ),\r\n                        'rdtNew': renderDate.isAfter( endOfMonth ),\r\n                        'rdtActive': selectedDate && renderDate.isSame( selectedDate, 'day' ),\r\n                        'rdtToday': renderDate.isSame( dayjs(), 'day' ),\r\n                        'rdtDisabled': !valid\r\n                    }),\r\n                    onClick: valid ? updateDate : undefined\r\n                }, \r\n                renderDate, \r\n                selectedDate\r\n            )\r\n            renderDate = renderDate.add(1, 'day')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"rdtDays\">\r\n            <table>\r\n                <thead>\r\n                    <ViewNavigation\r\n                        onClickPrev={ () => navigate( -1, 'month' ) }\r\n                        onClickSwitch={ () => showView( 'months', viewDate ) }\r\n                        onClickNext={ () => navigate( 1, 'month' ) }\r\n                        switchContent={ dat.format('MMM YYYY') }\r\n                        switchColSpan={5}\r\n                        switchProps={ { 'data-value': viewDate.month() } }\r\n                    />\r\n                    <tr>\r\n                        { dayjs.weekdaysMin().map( (day, index) => (\r\n                            <th key={ day + index } className=\"dow\">{ day }</th>\r\n                        )) }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { rows.map( (r, i) => (\r\n                        <tr key={ `${endDate.month()}_${i}` }>{ r }</tr>\r\n                    )) }\r\n                </tbody>\r\n                { timeFormat &&\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td onClick={ () => showView('time', viewDate) }\r\n                                colSpan={7}\r\n                                className=\"rdtTimeToggle\">\r\n                                { date.format( timeFormat === true ? 'LT' : timeFormat) }\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                 }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DaysView","import dayjs from 'dayjs';\r\nimport React, { FC } from 'react';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit, FlexibleDateType, RenderMonthFunction } from '../types/HappinDateTime';\r\nimport classNames from 'classnames';\r\n\r\ninterface Props {\r\n\trenderMonth?: RenderMonthFunction;\r\n\tisValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n\tviewDate: dayjs.Dayjs;\r\n\tnavigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n\tshowView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n\tselectedDate: dayjs.Dayjs;\r\n\tupdateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n}\r\n\r\n\r\nconst MonthsView: FC<Props> = ({\r\n\tviewDate,\r\n\trenderMonth=(props, month, year)=><td {...props}>{dayjs().year(year).month(month).format('MMM')}</td>,\r\n\tisValidDate,\r\n\tnavigate,\r\n\tshowView,\r\n\tselectedDate,\r\n\tupdateDate\r\n}) => {\r\n\tconst year = viewDate?.year();\r\n\r\n\tfunction isDisabledMonth( month: number ) {\r\n\r\n\t\tif ( !isValidDate ) {\r\n\t\t\t// If no validator is set, all days are valid\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If one day in the month is valid, the month should be clickable\r\n\t\tconst startDate = viewDate?.month(month).date(1);\r\n\t\tlet day = startDate?.endOf( 'month' );\r\n\r\n\t\twhile ( day.isAfter(startDate) ) {\r\n\t\t\tif ( isValidDate( day ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tday = day.subtract(1, 'day');\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst rows: React.ReactNode[][] = [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ];\r\n\tlet month = 0;\r\n\tfor ( const row of rows ) {\r\n\t\tfor (const index in row) {\r\n\t\t\trow[index] = renderMonth(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: month, \r\n\t\t\t\t\tclassName: classNames('rdtMonth', {\r\n\t\t\t\t\t\t'rdtDisabled': isDisabledMonth( month ),\r\n\t\t\t\t\t\t'rdtActive': selectedDate.year() === viewDate.year() && selectedDate.month() === month\r\n\t\t\t\t\t}), \r\n\t\t\t\t\t'data-year': viewDate.year(),\r\n\t\t\t\t\t'data-value': month,\r\n\t\t\t\t\tonClick: isDisabledMonth( month ) ? undefined : updateDate\r\n\t\t\t\t},\r\n\t\t\t\tmonth,\r\n\t\t\t\tviewDate?.year(),\r\n\t\t\t\tselectedDate\r\n\t\t\t);\r\n\t\t\tmonth++\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\t\r\n\treturn (\r\n\t\t<div className=\"rdtMonths\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<ViewNavigation\r\n\t\t\t\t\t\tonClickPrev={ () => navigate( -1, 'year' ) }\r\n\t\t\t\t\t\tonClickSwitch={ () => showView( 'years', viewDate ) }\r\n\t\t\t\t\t\tonClickNext={ () => navigate( 1, 'year' ) }\r\n\t\t\t\t\t\tswitchContent={ year }\r\n\t\t\t\t\t\tswitchColSpan={2}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ rows.map( (months, i) => (\r\n\t\t\t\t\t\t<tr key={i}>{ months }</tr>\r\n\t\t\t\t\t)) }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MonthsView;","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit,  FlexibleDateType,  RenderYearFunction } from '../types/HappinDateTime';\r\n\r\ninterface Props {\r\n\trenderYear?: RenderYearFunction;\r\n\tisValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n\tviewDate: dayjs.Dayjs;\r\n\tnavigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n\tshowView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n\tselectedDate: dayjs.Dayjs;\r\n\tupdateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n}\r\n\r\nconst YearsView: FC<Props> = ({\r\n\trenderYear=( props, year ) => <td { ...props }>{ year }</td>,\r\n\tisValidDate,\r\n\tviewDate,\r\n\tnavigate,\r\n\tshowView,\r\n\tselectedDate,\r\n\tupdateDate\r\n}) => {\r\n\tconst [disabledYears, setDisabledYears] = useState({} as Record<number, boolean>);\r\n\r\n\tconst viewYear = viewDate?.year();\r\n\tconst selectedYear = selectedDate?.year();\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetDisabledYears({})\r\n\t}, [isValidDate])\r\n\r\n\t// 12 years in 3 rows for every view\r\n\r\n\tfunction isDisabledYear( year: number ) {\r\n\t\tif ( disabledYears[year] !== undefined ) {\r\n\t\t\treturn disabledYears[year];\r\n\t\t}\r\n\r\n\t\tif ( !isValidDate ) {\r\n\t\t\t// If no validator is set, all days are valid\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If one day in the year is valid, the year should be clickable\r\n\t\tconst startDate = dayjs().year(year).month(0).date(1);\r\n\r\n\t\tlet day = startDate.endOf( 'year' );\r\n\r\n\t\twhile ( day.isAfter(startDate) ) {\r\n\t\t\tif ( isValidDate( day ) ) {\r\n\t\t\t\tsetDisabledYears( cache => ({...cache, [year]: false}) );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tday = day.subtract(1, 'day');\r\n\t\t}\r\n\r\n\t\tsetDisabledYears( cache => ({...cache, [year]: true}) );\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst _updateSelectedYear = (event: React.MouseEvent<HTMLTableDataCellElement>) => {\r\n\t\tupdateDate( event );\r\n\t}\r\n\r\n\tconst rows: React.ReactNode[][] = [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ];\r\n\tlet year = viewYear - 1;\r\n\tfor ( const row of rows ) {\r\n\t\tfor (const index in row) {\r\n\t\t\trow[index] = renderYear(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: year, \r\n\t\t\t\t\tclassName: classNames('rdtYear', {\r\n\t\t\t\t\t\t'rdtDisabled': isDisabledYear( year ),\r\n\t\t\t\t\t\t'rdtActive': selectedYear === year\r\n\t\t\t\t\t}), \r\n\t\t\t\t\t'data-value': year, \r\n\t\t\t\t\tonClick: isDisabledYear( year ) ? undefined : _updateSelectedYear\r\n\t\t\t\t},\r\n\t\t\t\tyear,\r\n\t\t\t\tselectedDate\r\n\t\t\t);\r\n\t\t\tyear++;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"rdtYears\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<ViewNavigation\r\n\t\t\t\t\t\tonClickPrev={ () => navigate( -10, 'year' ) }\r\n\t\t\t\t\t\tonClickSwitch={ () => showView( 'years', viewDate ) }\r\n\t\t\t\t\t\tonClickNext={ () => navigate( 10, 'year' ) }\r\n\t\t\t\t\t\tswitchContent={ `${viewYear}-${viewYear + 9}` }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ rows.map( (years, i) => (\r\n\t\t\t\t\t\t<tr key={i}>{ years }</tr> \r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default YearsView;","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { CalendarViewOption, FlexibleDateType, TimeConstraintConfig, TimePartExtended, TimePart } from '../types/HappinDateTime';\r\n\r\nconst DEFAULT_CONSTRAINTS: TimeConstraintConfig = {\r\n\thours: {\r\n\t\tmin: 0,\r\n\t\tmax: 23,\r\n\t\tstep: 1\r\n\t},\r\n\tminutes: {\r\n\t\tmin: 0,\r\n\t\tmax: 59,\r\n\t\tstep: 1\r\n\t},\r\n\tseconds: {\r\n\t\tmin: 0,\r\n\t\tmax: 59,\r\n\t\tstep: 1\r\n\t},\r\n\tmilliseconds: {\r\n\t\tmin: 0,\r\n\t\tmax: 999,\r\n\t\tstep: 1\r\n\t}\r\n};\r\n\r\nfunction pad( type: keyof TimeConstraintConfig, value: number ) {\r\n\tconst padValues = {\r\n\t\thours: 1,\r\n\t\tminutes: 2,\r\n\t\tseconds: 2,\r\n\t\tmilliseconds: 3\r\n\t};\r\n\r\n\tlet str = value.toString();\r\n\twhile ( str.length < padValues[ type ] )\r\n\t\tstr = '0' + str;\r\n\treturn str;\r\n}\r\n\r\ninterface Props {\r\n    viewDate: dayjs.Dayjs;\r\n    showView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n    timeFormat: string | true;\r\n    selectedDate: dayjs.Dayjs;\r\n\tdateFormat?: string | false;\r\n\tsetTime: (type: TimePart, value: number)=>void;\r\n\ttimeConstraints: TimeConstraintConfig;\r\n}\r\n\r\nconst TimeView: FC<Props> = ({\r\n\tviewDate,\r\n\tshowView,\r\n\ttimeFormat,\r\n\tdateFormat,\r\n\tselectedDate,\r\n\tsetTime,\r\n\ttimeConstraints\r\n}) => {\r\n\tconst [constraints, setConstraints] = useState(DEFAULT_CONSTRAINTS);\r\n\r\n\tconst [timeParts, setTimeParts] = useState({} as Record<TimePartExtended, string>);\r\n\r\n\tconst prevSelectedDate = useRef<dayjs.Dayjs>();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst appliedConstraints = {} as typeof DEFAULT_CONSTRAINTS;\r\n\r\n\t\t(Object.keys( DEFAULT_CONSTRAINTS ) as (keyof TimeConstraintConfig)[]).forEach( type => {\r\n\t\t\tappliedConstraints[ type ] = { ...DEFAULT_CONSTRAINTS[type], ...(timeConstraints[type] || {}) };\r\n\t\t});\r\n\r\n\t\tsetConstraints(appliedConstraints);\r\n\t}, [timeConstraints])\r\n\r\n\tuseEffect(()=>{\r\n\t\tif ( prevSelectedDate.current && selectedDate?.isSame(prevSelectedDate.current) ) return;\r\n\t\tconst date = (selectedDate || viewDate)\r\n\t\tsetTimeParts({\r\n\t\t\thours: pad( 'hours', date.hour() ),\r\n\t\t\tminutes: pad( 'minutes', date.minute() ),\r\n\t\t\tseconds: pad( 'seconds', date.second() ),\r\n\t\t\tmilliseconds: pad('milliseconds', date.millisecond() ),\r\n\t\t\tampm: date.hour() < 12 ? 'AM' : 'PM'\r\n\t\t})\r\n\t\tprevSelectedDate.current = selectedDate\r\n\t}, [selectedDate?.toISOString(), viewDate?.toISOString()])\r\n\r\n\tconst counters = [] as TimePartExtended[];\r\n\tconst format = timeFormat === true ? 'hh:mm A' : timeFormat\r\n\r\n\tif ( /h/i.test(format) ) {\r\n\t\tcounters.push('hours');\r\n\t\tif ( /m/.test(format) ) {\r\n\t\t\tcounters.push('minutes');\r\n\t\t\tif ( /s/.test(format) ) {\r\n\t\t\t\tcounters.push('seconds');\r\n\t\t\t\tif ( /S/.test(format) ) {\r\n\t\t\t\t\tcounters.push('milliseconds');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( /a/i.test(format) ) {\r\n\t\t\tcounters.push('ampm');\r\n\t\t}\r\n\t}\r\n\r\n\tconst items: React.ReactNode[] = [];\r\n\r\n\t\r\n\tfunction increase( type: TimePart ) {\r\n\t\t\r\n\t\tsetTimeParts( t => {\r\n\r\n\t\t\tconst tc = constraints[ type ];\r\n\r\n\t\t\tlet value = parseInt( t[ type ], 10) + tc.step!;\r\n\r\n\t\t\tif ( value > tc.max! )\r\n\r\n\t\t\tvalue = tc.min! + ( value - ( tc.max! + 1 ) );\r\n\t\t\treturn {\r\n\t\t\t\t...t,\r\n\t\t\t\t[type]: pad( type, value )\r\n\t\t\t}\r\n\t\t}) ;\r\n\t}\r\n\r\n\tfunction decrease( type: TimePart ) {\r\n\t\tsetTimeParts( t => {\r\n\t\t\tconst tc = constraints[ type ];\r\n\t\t\tlet value = parseInt( timeParts[ type ], 10) - tc.step!;\r\n\t\t\tif ( value < tc.min! )\r\n\t\t\t\tvalue = tc.max! + 1 - ( tc.min! - value );\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...t,\r\n\t\t\t\t[type]: pad( type, value )\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction _setTime(type: TimePart) {\r\n\t\tsetTimeParts( t => {\r\n\t\t\tsetTime( type, +t[ type ] );\r\n\t\t\treturn t\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tfunction onStartClicking( e: React.MouseEvent<HTMLSpanElement>, action: (type: TimePart)=>void, type: TimePartExtended ) {\r\n\t\tif ( e && e.button && e.button !== 0 ) {\r\n\t\t\t// Only left clicks, thanks\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif ( type === 'ampm' ) {\r\n\t\t\tlet intHours = +timeParts.hours!;\r\n\t\t\r\n\t\t\tif ( intHours >= 12 ) {\r\n\t\t\t\tintHours -= 12;\r\n\t\t\t} else {\r\n\t\t\t\tintHours += 12;\r\n\t\t\t}\r\n\r\n\t\t\tsetTime( 'hours', intHours );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taction( type ) \r\n\r\n\t\tlet increaseTimer: NodeJS.Timeout\r\n\r\n\t\tconst timer = setTimeout( () => {\r\n\t\t\tincreaseTimer = setInterval( () => {\r\n\t\t\t\taction( type )\r\n\t\t\t}, 70);\r\n\t\t}, 500);\r\n\r\n\t\tconst mouseUpListener = () => {\r\n\t\t\tclearTimeout( timer );\r\n\t\t\tclearInterval( increaseTimer );\r\n\t\t\t_setTime( type );\r\n\t\t\tdocument.removeEventListener( 'mouseup', mouseUpListener );\r\n\t\t\tdocument.removeEventListener( 'touchend', mouseUpListener );\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener( 'mouseup', mouseUpListener );\r\n\t\tdocument.addEventListener( 'touchend', mouseUpListener );\r\n\t}\r\n\r\n\t// function renderCounter( type: TimePartExtended, value: string | number ) {\r\n\t// \tif ( type === 'hours' && /a/i.test(format) ) {\r\n\t// \t\tvalue = ( +value - 1 ) % 12 + 1;\r\n\r\n\t// \t\tif ( +value === 0 ) {\r\n\t// \t\t\tvalue = 12;\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \tif ( type === 'ampm' ) {\r\n\t// \t\tif ( /A/.test(format) ) {\r\n\t// \t\t\tvalue = viewDate.format('A');\r\n\t// \t\t}\r\n\t// \t\telse {\r\n\t// \t\t\tvalue = viewDate.format('a');\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \treturn (\r\n\t\t\t\r\n\t// \t);\r\n\t// }\r\n\r\n\t// counters.forEach( (c, i) => {\r\n\t\t\r\n\t// });\r\n\r\n\treturn (\r\n\t\t<div className=\"rdtTime\">\r\n\t\t\t<table>\r\n\t\t\t\t{ dateFormat && \r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td className=\"rdtSwitch\" colSpan={4} onClick={ () => showView('days', viewDate) }>\r\n\t\t\t\t\t\t\t\t{ (selectedDate || viewDate).format( dateFormat ) }\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t}\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div className=\"rdtCounters\">\r\n\t\t\t\t\t\t\t\t{ counters.map( (c, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{ !!i && (c !== 'ampm') && <div key={ `sep${i}` } className=\"rdtCounterSeparator\">:</div>}\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={ c } className=\"rdtCounter\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rdtBtn\" onMouseDown={ e => onStartClicking( e, increase, c)}>▲</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"rdtCount\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ( c === 'hours' && /a/i.test(format) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? (( +timeParts[c] - 1 ) % 12 + 1) || 12 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: c === \"ampm\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? dayjs().hour(+timeParts.hours).format(/A/.test(format) ? ' A' : ' a') \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: timeParts[c] \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rdtBtn\" onMouseDown={ e => onStartClicking( e, decrease, c)}>▼</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default TimeView\r\n\r\n","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport DaysView from './views/DaysView';\r\nimport MonthsView from './views/MonthsView';\r\nimport YearsView from './views/YearsView';\r\nimport TimeView from './views/TimeView';\r\nimport { CalendarViewOption, FlexibleDateType, RenderDateFunction, RenderMonthFunction, RenderYearFunction, TimeConstraintConfig } from './types/HappinDateTime';\r\nimport classNames from 'classnames';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\ninterface ClickOutProps extends React.HTMLProps<HTMLDivElement> {\r\n\tclassName: string;\r\n\tchildren: React.ReactNode;\r\n\tonClickOut: ( e: MouseEvent )=>void\r\n}\r\n\r\n\r\n// const ClickableWrapper: FC<ClickOutProps> = ({className, children, onClickOut, ...props}) => {\r\n// \tconst wrapperId = useRef(v4());\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconsole.log('adding')\r\n// \t\tfunction handleClickOutside(e: MouseEvent) {\r\n\t\t\t\r\n// \t\t\tconst wrapperEl = document.getElementById('rdtPickerWrapper');\r\n// \t\t\tconsole.log('clicked')\r\n// \t\t\tif (!wrapperEl) return\r\n// \t\t\tif ( !wrapperEl?.contains( e.target ) ) onClickOut(e)\r\n// \t\t}\r\n\r\n// \t\tdocument.addEventListener('click', handleClickOutside);\r\n\r\n// \t\treturn ()=>document.removeEventListener('click', handleClickOutside);\r\n\r\n// \t}, [wrapperId.current])\r\n\r\n// \treturn (\r\n// \t\t<div id={wrapperId.current} className={ className } {...props} >\r\n// \t\t\t{ children }\r\n// \t\t</div>\r\n// \t);\r\n\r\n// }\r\n\r\nclass ClickOutBase extends React.Component<ClickOutProps> {\r\n\tcontainer = React.createRef<HTMLDivElement>();\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={ this.props.className } ref={ this.container }>\r\n\t\t\t\t{ this.props.children }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\thandleClickOutside(e: MouseEvent) {\r\n\t\tthis.props.onClickOut( e );\r\n\t}\r\n\r\n\tsetClickOutsideRef() {\r\n\t\treturn this.container.current;\r\n\t}\r\n}\r\n\r\nconst ClickableWrapper = onClickOutside( ClickOutBase );\r\n\r\n\r\nconst viewModes: Record<string, CalendarViewOption> = {\r\n\tYEARS: 'years',\r\n\tMONTHS: 'months',\r\n\tDAYS: 'days',\r\n\tTIME: 'time',\r\n} as const;\r\n\r\nconst nofn = function () {};\r\n\r\nexport interface DateTimeProps {\r\n\tid?: string,\r\n\tvalue?: FlexibleDateType,\r\n\tinitialValue?: FlexibleDateType,\r\n\tinitialViewMode?: CalendarViewOption,\r\n\tonClose?: (date?: FlexibleDateType)=>void,\r\n\tonChange?: (date?: string)=>void,\r\n\tonNavigate?: (view: CalendarViewOption)=>void,\r\n\tonBeforeNavigate?: (view: CalendarViewOption, currentView: CalendarViewOption, date: FlexibleDateType)=>CalendarViewOption,\r\n\tonNavigateBack?: ( modifier: number, unit: dayjs.OpUnitType )=>void,\r\n\tonNavigateForward?: ( modifier: number, unit: dayjs.OpUnitType )=>void,\r\n\tupdateOnView?: CalendarViewOption,\r\n\tlocale?: string,\r\n\tiso?: boolean,\r\n\tdateFormat?: string | boolean,\r\n\ttimeFormat?: string | boolean,\r\n\ttimeConstraints?: TimeConstraintConfig,\r\n\tisValidDate?: (date?: dayjs.Dayjs | undefined) => boolean,\r\n\topen?: boolean,\r\n\tsetOpen?: (open: boolean)=>void;\r\n\tcloseOnSelect?: boolean,\r\n\trenderDay?: RenderDateFunction,\r\n\trenderMonth?: RenderMonthFunction,\r\n\trenderYear?: RenderYearFunction,\r\n\tclassName?: string,\r\n\tcloseOnClickOutside?: boolean;\r\n\tstaticDisplay?: boolean;\r\n\tdropLeft?: boolean;\r\n}\r\n\r\nconst DateTime: FC<DateTimeProps> = ({\r\n\tid,\r\n\tvalue,\r\n\tinitialValue,\r\n\tinitialViewMode,\r\n\tonClose=nofn,\r\n\tonChange=nofn,\r\n\tonNavigate=nofn,\r\n\tonBeforeNavigate=(e:any)=>e,\r\n\tonNavigateBack=nofn,\r\n\tonNavigateForward=nofn,\r\n\tupdateOnView,\r\n\tlocale,\r\n\tiso,\r\n\tdateFormat,\r\n\ttimeFormat,\r\n\ttimeConstraints={},\r\n\tisValidDate=()=>true,\r\n\topen,\r\n\tsetOpen,\r\n\tcloseOnSelect,\r\n\tcloseOnClickOutside=true,\r\n\trenderDay,\r\n\trenderMonth,\r\n\trenderYear,\r\n\tclassName='',\r\n\tstaticDisplay,\r\n\tdropLeft\r\n}) => {\r\n\r\n\tconst [currentView, setCurrentView] = useState( initialViewMode || ( dateFormat ? 'days' : timeFormat ? 'time' : 'years' ) );\r\n\tconst [viewDate, setViewDate] = useState( dayjs(value || initialValue) );\r\n\tconst [updateView, setUpdateView] = useState('time' as CalendarViewOption)\r\n\tconst [selectedDate, setSelectedDate] = useState( dayjs(value || initialValue) );\r\n\r\n\tconst [outputFormat, setOutputFormat] = useState('');\r\n\r\n\tuseEffect( () => {\r\n\t\tif (!value) return\r\n\t\tconst d = dayjs(value)\r\n\t\tif (d.isValid()) setViewDate(d)\r\n\t}, [value] )\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dateForm = dateFormat === true ? 'L' : dateFormat;\r\n\t\tconst timeForm = timeFormat === true ? 'LT' : timeFormat;\r\n\r\n\t\tsetOutputFormat( dateForm ? (timeForm ? dateForm + ' ' + timeForm : dateForm) : (timeForm ? timeForm : ''))\r\n\r\n\t}, [timeFormat, dateFormat]);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst d = dateFormat ? (dateFormat === true ? 'L' : dateFormat) : ''\r\n\r\n\t\tif ( updateOnView ) {\r\n\t\t\tsetUpdateView(updateOnView)\r\n\r\n\t\t} else if ( d.match(/[lLD]/) ) {\r\n\t\t\tsetUpdateView(viewModes.DAYS)\r\n\r\n\t\t} else if ( d.indexOf('M') !== -1 ) {\r\n\t\t\tsetUpdateView(viewModes.MONTHS)\r\n\r\n\t\t} else if ( d.indexOf('Y') !== -1 ) {\r\n\t\t\tsetUpdateView(viewModes.YEARS)\r\n\r\n\t\t} else { \r\n\t\t\tsetUpdateView(viewModes.TIME) \r\n\r\n\t\t}\r\n\r\n\t}, [dateFormat]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst d = dayjs(value);\r\n\t\tif ( d.isValid() ) {\r\n\t\t\tsetSelectedDate( d )\r\n\t\t} else {\r\n\t\t\tsetSelectedDate( dayjs() )\r\n\t\t}\r\n\t\t\r\n\t}, [value])\r\n\r\n\tconst _showView = ( view: CalendarViewOption, date: FlexibleDateType ) => {\r\n\t\tconst d = date || viewDate;\r\n\t\tconst nextView = onBeforeNavigate( view, currentView, d );\r\n\t\tif ( nextView && currentView !== nextView ) {\r\n\t\t\tonNavigate( nextView );\r\n\t\t\tsetCurrentView( nextView );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _onChange(value?: dayjs.Dayjs) {\r\n\t\tif (closeOnSelect) _closeCalendar();\r\n\t\tif (iso) {\r\n\t\t\tonChange( value?.toISOString() )\r\n\t\t} else {\r\n\t\t\tonChange( value?.format( outputFormat ) )\r\n\t\t}\r\n\t}\r\n\r\n\tconst _viewNavigate = ( modifier: number, unit: dayjs.OpUnitType ) => {\r\n\r\n\t\t// Subtracting is just adding negative time\r\n\t\tsetViewDate(viewDate => viewDate.add( modifier, unit ) );\r\n\r\n\t\tif ( modifier > 0 ) {\r\n\t\t\tonNavigateForward( modifier, unit );\r\n\t\t} else {\r\n\t\t\tonNavigateBack( -(modifier), unit );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _setTime = ( type: 'hours' | 'minutes' | 'seconds' | 'milliseconds', value: number ) => {\r\n\t\tconst date = selectedDate || viewDate;\r\n\t\tlet newDate: dayjs.Dayjs;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'hours':\r\n\t\t\t\tnewDate = date.hour( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'minutes':\r\n\t\t\t\tnewDate = date.minute( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'seconds':\r\n\t\t\t\tnewDate = date.second( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'milliseconds':\r\n\t\t\t\tnewDate = date.millisecond( value )\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tsetSelectedDate(newDate)\r\n\t\tsetViewDate(newDate)\r\n\t\t_onChange( newDate )\r\n\r\n\t}\r\n\r\n\tconst _closeCalendar = () => { \r\n\t\tif (setOpen) setOpen(false) \r\n\t\tonClose(selectedDate)\r\n\t}\r\n\t\r\n\tconst _handleClickOutside = () => {\r\n\t\tif ( open && closeOnClickOutside ) {\r\n\t\t\t_closeCalendar();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ClickableWrapper \r\n\t\t\tclassName={classNames('rdt', className, {\r\n\t\t\t\t'rdtStatic': !!staticDisplay,\r\n\t\t\t\t'rdtOpen': !!open\r\n\t\t\t})} \r\n\t\t\tonClickOut={ _handleClickOutside }\r\n\t\t>\r\n\t\t\t{/* { input && \r\n\t\t\t\trenderInput \r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<div> \r\n\t\t\t\t\t\t\t{ renderInput( inputProps, _openCalendar, _closeCalendar ) }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: <input { ...inputProps } />\r\n\t\t\t} */}\r\n\t\t\t<div id={id} className=\"rdtPicker rounded bg-light\" style={dropLeft ? {right: 0} : undefined}>\r\n\t\t\t\t{ currentView === 'years' && \r\n\t\t\t\t\t<YearsView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\trenderYear={ renderYear }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.YEARS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.MONTHS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}  }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'months' && \r\n\t\t\t\t\t<MonthsView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\trenderMonth={ renderMonth }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-year')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.month(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.MONTHS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.DAYS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'days' && \r\n\t\t\t\t\t<DaysView \r\n\t\t\t\t\t\trenderDay={ renderDay }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\ttimeFormat={ timeFormat }\r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-year')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.month(+e.currentTarget.getAttribute('data-month')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.date(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.DAYS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else if ( timeFormat ) {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.HOURS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'time' && timeFormat && \r\n\t\t\t\t\t<TimeView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\ttimeFormat={ timeFormat }\r\n\t\t\t\t\t\tdateFormat={ dateFormat === true ? 'L' : dateFormat }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tsetTime={ _setTime }\r\n\t\t\t\t\t\ttimeConstraints={ timeConstraints }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ClickableWrapper>\r\n\t)\r\n}\r\n\r\nexport default DateTime\r\n\r\n\r\n// export  class Datetime1 extends React.Component {\r\n\r\n\t// getUpdateOn( dateFormat ) {\r\n\t// \tif ( this.props.updateOnView ) {\r\n\t// \t\treturn this.props.updateOnView;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.match(/[lLD]/) ) {\r\n\t// \t\treturn viewModes.DAYS;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.indexOf('M') !== -1 ) {\r\n\t// \t\treturn viewModes.MONTHS;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.indexOf('Y') !== -1 ) {\r\n\t// \t\treturn viewModes.YEARS;\r\n\t// \t}\r\n\r\n\t// \treturn viewModes.DAYS;\r\n\t// }\r\n\r\n\t// viewToMethod = {days: 'date', months: 'month', years: 'year'};\r\n\t// nextView = { days: 'time', months: 'days', years: 'months'};\r\n\r\n\r\n\r\n\t// localMoment( date, format, props ) {\r\n\t// \tprops = props || this.props;\r\n\t// \tlet m = null;\r\n\r\n\t// \tif (props.utc) {\r\n\t// \t\tm = moment.utc(date, format, props.strictParsing);\r\n\t// \t} else if (props.displayTimeZone) {\r\n\t// \t\tm = moment.tz(date, format, props.displayTimeZone);\r\n\t// \t} else {\r\n\t// \t\tm = moment(date, format, props.strictParsing);\r\n\t// \t}\r\n\r\n\t// \tif ( props.locale )\r\n\t// \t\tm.locale( props.locale );\r\n\t// \treturn m;\r\n\t// }\r\n\r\n\t// componentDidUpdate( prevProps ) {\r\n\t// \tif ( prevProps === this.props ) return;\r\n\r\n\t// \tlet needsUpdate = false;\r\n\t// \tlet thisProps = this.props;\r\n\r\n\t// \t['locale', 'utc', 'displayZone', 'dateFormat', 'timeFormat'].forEach( function(p) {\r\n\t// \t\tprevProps[p] !== thisProps[p] && (needsUpdate = true);\r\n\t// \t});\r\n\r\n\t// \tif ( needsUpdate ) {\r\n\t// \t\tthis.regenerateDates();\r\n\t// \t}\r\n\r\n\t// \tif ( thisProps.value && thisProps.value !== prevProps.value ) {\r\n\t// \t\tthis.setViewDate( thisProps.value );\r\n\t// \t}\r\n\r\n\t// \tthis.checkTZ();\r\n\t// }\r\n\r\n\t// regenerateDates() {\r\n\t// \tconst props = this.props;\r\n\t// \tlet viewDate = this.state.viewDate.clone();\r\n\t// \tlet selectedDate = this.state.selectedDate && this.state.selectedDate.clone();\r\n\r\n\t// \tif ( props.locale ) {\r\n\t// \t\tviewDate.locale( props.locale );\r\n\t// \t\tselectedDate &&\tselectedDate.locale( props.locale );\r\n\t// \t}\r\n\t// \tif ( props.utc ) {\r\n\t// \t\tviewDate.utc();\r\n\t// \t\tselectedDate &&\tselectedDate.utc();\r\n\t// \t}\r\n\t// \telse if ( props.displayTimeZone ) {\r\n\t// \t\tviewDate.tz( props.displayTimeZone );\r\n\t// \t\tselectedDate &&\tselectedDate.tz( props.displayTimeZone );\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tviewDate.locale();\r\n\t// \t\tselectedDate &&\tselectedDate.locale();\r\n\t// \t}\r\n\r\n\t// \tlet update = { viewDate: viewDate, selectedDate: selectedDate};\r\n\t// \tif ( selectedDate && selectedDate.isValid() ) {\r\n\t// \t\tupdate.inputValue = selectedDate.format( this.getFormat('datetime') );\r\n\t// \t}\r\n\t\t\r\n\t// \tthis.setState( update );\r\n\t// }\r\n\r\n\t// getSelectedDate() {\r\n\t// \tif ( this.props.value === undefined ) return this.state.selectedDate;\r\n\t// \tlet selectedDate = this.parseDate( this.props.value, this.getFormat('datetime') );\r\n\t// \treturn selectedDate && selectedDate.isValid() ? selectedDate : false;\r\n\t// }\r\n\r\n\t// getInitialInputValue( selectedDate ) {\r\n\t// \tconst props = this.props;\r\n\t// \tif ( props.inputProps.value )\r\n\t// \t\treturn props.inputProps.value;\r\n\t\t\r\n\t// \tif ( selectedDate && selectedDate.isValid() )\r\n\t// \t\treturn selectedDate.format( this.getFormat('datetime') );\r\n\t\t\r\n\t// \tif ( props.value && typeof props.value === 'string' )\r\n\t// \t\treturn props.value;\r\n\t\t\r\n\t// \tif ( props.initialValue && typeof props.initialValue === 'string' )\r\n\t// \t\treturn props.initialValue;\r\n\t\t\r\n\t// \treturn '';\r\n\t// }\r\n\r\n\t// getInputValue() {\r\n\t// \tlet selectedDate = this.getSelectedDate();\r\n\t// \treturn selectedDate ? selectedDate.format( this.getFormat('datetime') ) : this.state.inputValue;\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Set the date that is currently shown in the calendar.\r\n\t//  * This is independent from the selected date and it's the one used to navigate through months or days in the calendar.\r\n\t//  * @param dateType date\r\n\t//  * @public\r\n\t//  */\r\n\t// setViewDate( date ) {\r\n\t// \tlet me = this;\r\n\t// \tlet logError = function() {\r\n\t// \t\treturn me.log( 'Invalid date passed to the `setViewDate` method: ' + date );\r\n\t// \t};\r\n\r\n\t// \tif ( !date ) return logError();\r\n\t\t\r\n\t// \tlet viewDate;\r\n\t// \tif ( typeof date === 'string' ) {\r\n\t// \t\tviewDate = this.localMoment(date, this.getFormat('datetime') );\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tviewDate = this.localMoment( date );\r\n\t// \t}\r\n\r\n\t// \tif ( !viewDate || !viewDate.isValid() ) return logError();\r\n\t// \tthis.setState({ viewDate: viewDate });\r\n\t// }\r\n\r\n// \t/**\r\n// \t * Set the view currently shown by the calendar. View modes shipped with react-datetime are 'years', 'months', 'days' and 'time'.\r\n// \t * @param TYPES.string mode \r\n// \t */\r\n// \tnavigate( mode ) {\r\n// \t\tthis._showView( mode );\r\n// \t}\r\n\r\n// \t_onInputFocus = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onFocus, e ) ) return;\r\n// \t\tthis._openCalendar();\r\n// \t}\r\n\r\n// \t_onInputChange = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onChange, e ) ) return;\r\n\r\n// \t\tconst value = e.target ? e.target.value : e;\r\n// \t\tconst localMoment = this.localMoment( value, this.getFormat('datetime') );\r\n// \t\tlet update = { inputValue: value };\r\n\r\n// \t\tif ( localMoment.isValid() ) {\r\n// \t\t\tupdate.selectedDate = localMoment;\r\n// \t\t\tupdate.viewDate = localMoment.clone().startOf('month');\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tupdate.selectedDate = null;\r\n// \t\t}\r\n\r\n// \t\tthis.setState( update, () => {\r\n// \t\t\tthis.props.onChange( localMoment.isValid() ? localMoment : this.state.inputValue );\r\n// \t\t});\r\n// \t}\r\n\r\n// \t_onInputKeyDown = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onKeyDown, e ) ) return;\r\n\r\n// \t\tif ( e.which === 9 && this.props.closeOnTab ) {\r\n// \t\t\tthis._closeCalendar();\r\n// \t\t}\r\n// \t}\r\n\r\n// \t_onInputClick = e => {\r\n// \t\t// Focus event should open the calendar, but there is some case where\r\n// \t\t// the input is already focused and the picker is closed, so clicking the input\r\n// \t\t// should open it again see https://github.com/arqex/react-datetime/issues/717\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onClick, e ) ) return;\r\n// \t\tthis._openCalendar();\r\n// \t}\r\n\r\n// \tcallHandler( method, e ) {\r\n// \t\tif ( !method ) return true;\r\n// \t\treturn method(e) !== false;\r\n// \t}\r\n// }\r\n\r\n// function log( message, method ) {\r\n// \tlet con = typeof window !== 'undefined' && window.console;\r\n// \tif ( !con ) return;\r\n\r\n// \tif ( !method ) {\r\n// \t\tmethod = 'warn';\r\n// \t}\r\n// \tcon[ method ]( '***react-datetime:' + message );\r\n// }\r\n\r\n\t// const inputProps = {\r\n\t// \ttype: 'text',\r\n\t// \tclassName: 'form-control',\r\n\t// \tvalue: getInputValue(),\r\n\t// \t...inputProps,\r\n\t// \tonFocus: _onInputFocus,\r\n\t// \tonChange: _onInputChange,\r\n\t// \tonKeyDown: _onInputKeyDown,\r\n\t// \tonClick: _onInputClick\r\n\t// }","////// Packages //////////////////\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n\r\nconst UnderConstruction = () => (\r\n  <Card className=\"text-center\">\r\n    <CardBody className=\"p-5\">\r\n      <div className=\"display-1 text-200 fs-error\">Working On It</div>\r\n      <p className=\"lead mt-4 text-800 text-sans-serif font-weight-semi-bold\">\r\n        {`The page you're looking for is under construction.`}\r\n      </p>\r\n      <hr />\r\n      <p>\r\n        {`We are hard at work building the most intuitive business management app on the web`}\r\n        <a href=\"mailto:info@happin.design\" className=\"ml-1\">\r\n          We would love to hear from you. Contact Us\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link className=\"btn btn-primary btn-sm mt-3\" to=\"/\">\r\n        <FontAwesomeIcon icon=\"home\" className=\"mr-2\" />\r\n        Take me home\r\n      </Link>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default UnderConstruction;\r\n","import { shallowEqual } from \"react-redux\";\r\nimport { getTimeTypes } from \"store/thunks/time\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nconst useTimeCodes = () => {\r\n    return useLoadAndSelect({\r\n        actionCreator: getTimeTypes,\r\n        selector: state => Object.values(state.time.timeTypes),\r\n        equality: shallowEqual,\r\n        deduplicate: ['TimeCodes']\r\n    })\r\n}\r\n\r\nexport default useTimeCodes;","export function pluralizeIf(baseString: string, testValue: any) {\r\n    return baseString + (testValue === 1 ? '' : 's')\r\n}","////// Packages //////////////////\r\nimport React, { FC } from 'react'\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport { FalconColors } from './falconTypes'\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    info: React.ReactNode;\r\n    color?: FalconColors;\r\n    label: React.ReactNode;\r\n    className?: string;\r\n}\r\n\r\nconst DisplayHighlight: FC<Props> = ({info, color='black', label, className}) => {\r\n    \r\n    \r\n    return (\r\n        <div className={className}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <h1 className={\"text-\" + color + \" text-center\"}>\r\n                    {info}\r\n                </h1>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <h6 className=\"text-center\">{label}</h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayHighlight;","import { isEqual } from \"lodash\";\r\nimport { shallowEqual } from \"react-redux\";\r\nimport { getLeaveBanks } from \"store/thunks/time\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { MTimeBankWithCharged } from \"store/types/models/time\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useLeaveBanks(personId: MPerson['_id']) {\r\n    return useLoadAndSelect<MTimeBankWithCharged[]>({\r\n        actionCreator: getLeaveBanks,\r\n        postParams: personId,\r\n        selector: state => Object.values(state.time.timeOffBanks).filter( bank => bank.personId === personId ),\r\n        equality: isEqual,\r\n        deduplicate: ['getLeaveBanks', personId]\r\n    })\r\n}\r\n\r\nexport default useLeaveBanks;","export type FalconColors =\r\n  | \"primary\"\r\n  | \"secondary\"\r\n  | \"warning\"\r\n  | \"success\"\r\n  | \"danger\"\r\n  | \"info\"\r\n  | \"light\"\r\n  | \"dark\";\r\n\r\n  export type BgColors = \r\n   FalconColors\r\n   | \"white\"\r\n\r\n   export const colorOptions = [\r\n     {value: 'danger', label: 'Red', text: 'white'},\r\n     {value: 'warning', label: 'Orange', text: 'white'},\r\n     {value: 'success', label: 'Green', text: 'white'},\r\n     {value: 'info', label: 'Sky Blue', text: '100'},\r\n     {value: 'primary', label: 'Blue', text: 'white'},\r\n     {value: 'secondary', label: 'Gray', text: 'white'}, \r\n     {value: 'dark', label: 'Dark', text: 'white'},\r\n     {value: 'soft-danger', label: 'Light Red', text: '800'},\r\n     {value: 'soft-warning', label: 'Light Orange', text: '800'},\r\n     {value: 'soft-success', label: 'Light Green', text: '700'},\r\n     {value: 'soft-info', label: 'Baby Blue', text: '700'},\r\n     {value: 'soft-primary', label: 'Light Blue', text: '800'}, \r\n    {value: 'soft-dark', label: 'Dark Gray', text: '100'}, \r\n    {value: 'soft-secondary', label: 'Light Gray', text: '800'}, \r\n    {value: 'light', label: 'Off White', text: '800'}, \r\n    {value: 'soft-light', label: 'Snow White', text: '700'}, \r\n     {value: 'white' , label: 'White', text: '700'}\r\n]"],"sourceRoot":""}
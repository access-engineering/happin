{"version":3,"sources":["layouts/management/assignments/ColorPicker.tsx","compositions/SubmitButton.tsx","layouts/management/assignments/KanbanColumnHeader.tsx","store/thunks/management.ts","layouts/management/assignments/AddToDo.tsx","layouts/management/assignments/helpers.ts","layouts/management/assignments/AssignmentCard.tsx","layouts/management/assignments/EditToDo.tsx","layouts/management/assignments/ToDoCard.tsx","layouts/management/assignments/KanbanColumn.tsx","layouts/management/assignments/KanbanHeader.tsx","store/hooks/management/useKanbanCategories.ts","store/hooks/management/useToDos.ts","layouts/management/assignments/Assignments.tsx","components/gantt/Const.ts","components/gantt/helpers/config/Config.ts","components/gantt/components/taskList/VerticalSplitter.tsx","components/gantt/helpers/DateHelper.ts","components/gantt/components/header/HeaderItem.tsx","components/gantt/components/header/Headers.tsx","components/gantt/components/viewport/DataTask.tsx","components/gantt/components/viewport/DataRow.tsx","components/gantt/components/viewport/DataViewPort.tsx","components/gantt/components/links/Link.tsx","components/gantt/components/links/CreateLink.tsx","components/gantt/components/links/LinkViewPort.tsx","components/gantt/components/taskList/TaskRow.tsx","components/gantt/components/taskList/TaskList.tsx","components/gantt/helpers/registry/Registry.ts","components/gantt/controller/DataController.ts","components/gantt/helpers/physics/Vector.ts","components/gantt/helpers/physics/NewtonObject.ts","components/gantt/helpers/physics/RubberBand.ts","components/gantt/TimeLine.tsx","layouts/management/timelines/TimelineTest.tsx","routes/management/ManagementRoutes.tsx","components/FormGroupInput.tsx","components/LoadingGateway.tsx","components/ButtonIcon.tsx","store/thunks/workflow/stages.ts","helpers/base64toBlob.ts","components/datetime/DateTimeInputGroup.tsx","components/Loader.tsx","store/hooks/workflow/useStage.ts","store/thunks/workflow/tasks.ts","components/datetime/parts/ViewNavigation.tsx","components/datetime/views/DaysView.tsx","components/datetime/views/MonthsView.tsx","components/datetime/views/YearsView.tsx","components/datetime/views/TimeView.tsx","components/datetime/HappinDateTime.tsx","store/thunks/settings.ts","layouts/errors/UnderConstruction.tsx","components/BounceSpinner.tsx","store/hooks/settings/useSettings.ts","helpers/statusColorsMap.tsx","components/AvatarGroup.tsx","store/hooks/workflow/useAssignments.ts","store/hooks/workflow/useMyAssignments.ts"],"names":["NAVY_COLOR_PALATTE","DARK_PASTELS","DARK_PASTEL_BORDERS","PASTEL_COLORS","SubmitButton","text","submitting","color","rest","Button","BounceSpinner","size","KanbanColumnHeader","category","items","categories","useState","isOpenRemoveModal","setIsOpenRemoveModal","setCategoriesAction","useAction","setKanbanCategories","a","length","toast","error","post","filter","c","data","success","handleMove","change","newCategories","sort","b","thisIndex","findIndex","newIndex","className","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","tag","Flex","justify","onClick","loading","disabled","UncontrolledDropdown","DropdownToggle","icon","DropdownMenu","right","DropdownItem","divider","TEAL","BLUE","YELLOW","RED","PURPLE","SAND","GREEN","LAVENDER","PINK","DEFAULT_COLORS","ColorPicker","setColor","colorOptions","FormGroup","Label","for","map","style","backgroundColor","width","height","toDos","toDosDuck","createToDo","description","kanban","dueDate","actions","name","editToDo","toDoId","props","deleteToDo","getToDos","delimiter","reorderToDos","i","sortIndex","AddToDo","index","setIsOpen","setDescription","setDueDate","createToDoAction","FormGroupInput","id","type","placeholder","rows","value","onChange","e","target","DateTimeInputGroup","timeFormat","date","getItemStyle","isDragging","cursor","transform","transition","AssignmentCard","assignment","lastIndex","fakeDragEvent","assignedIds","useSelector","state","app","login","personId","assignees","people","usePeopleList","history","useHistory","draggableId","_id","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","Card","CardBody","stage","identifier","title","Badge","statusColorsMap","status","task","split","str","dayjs","format","AvatarGroup","avatarSize","showMembers","stopPropagation","reason","destination","droppableId","source","complete","push","workflowId","EditToDo","toDo","editAction","useEffect","align","ToDoCard","deleteAction","handleDelete","confirm","message","confirmColor","confirmText","cancelColor","cancelText","KanbanColumn","showForm","setShowForm","categoryItems","sorta","sortb","classNames","droppableProps","item","ButtonIcon","block","iconClassName","KanbanHeader","setTitle","setCategories","handleSubmit","Array","from","Set","undefined","Row","noGutters","Col","iconAlign","label","useKanbanCategories","useLoadAndSelect","actionCreator","getKanbanCategories","selector","options","deduplicate","useToDos","postParams","Object","values","management","equality","shallowEqual","compareArrays","array","dispatch","movedAssignments","movedToDos","config","find","tasksController","upsert","assignments","taskId","assignmentId","toDosController","handleResortOut","arr","get","slice","splicedIndex","splice","set","handleResortIn","fromCategory","toCategory","draggedItem","_i","handleResortSame","spliced","MODE","Assignments","trappedCategories","setTrappedCategories","userCategories","useMyAssignments","assignmentsLoader","reorderAssignmentsAction","reorderAssignments","reorderToDosAction","containerRef","useRef","useDispatch","_categories","Map","cat","is","ipad","current","classList","add","mobile","safari","chrome","forEach","aWithConfig","has","t","tWithConfig","onDragEnd","result","newCat","batch","categoriesMutableCopy","a2","t2","a1","t1","assignmentsToSend","toDosToSend","Promise","all","resolve","getBatchedActions","strCategories","keys","LoadingGateway","dataLoader","defvalues","header","top","middle","selectedStyle","bottom","taskList","verticalSeparator","grip","dataViewPort","showLabel","links","selectedColor","load","populate","this","final","prototype","toString","call","key","VerticalSplitter","draggingPosition","doMouseMove","bind","doMouseDown","doMouseUp","dragging","button","clientX","setState","_props","document","addEventListener","removeEventListener","delta","onTaskListSizing","Config","onMouseDown","Component","VIEW_MODE","PIXELS_PER","LINK_POS","DATA_CONTAINER_WIDTH","MIL_IN_HOUR","helper","dayToPosition","day","now","dayWidth","daysInYear","year","isLeapYear","input","nowPosition","nowDate","getToday","inputTime","Date","lightSavingDiff","getTimezoneOffset","getTime","position","hoursInPixel","pixelsFromNow","today","milisecondsFromNow","setTime","setHours","start","end","Math","abs","getMonth","getFullYear","month","getDate","HeaderItem","left","join","extend","weekOfYear","advancedFormat","Header","hours","renderHourLabel","hour","mode","headerRef","buffer","dateFormat","shortMonth","monthTop","week","weekTop","weekday","monthDate","shortTime","fullTime","topLabels","getStartDate","subtract","renderTime","h","reloads","React","createRef","cache","getNewCache","DateHelper","daysInMonth","lastLeft","increment","getModeIncrement","startDate","startOf","daysInBetween","diff","console","log","DAY","WEEK","MONTH","YEAR","bufferZone","weekends","mainViewportWidth","refreshLow","refreshHi","boxStart","boxWidth","currentTop","currentMiddle","currentBottom","box","firstDay","pixelToDate","lastDay","currentDate","isBefore","topVal","getBox","base","middleVal","bottomVal","time","prevProps","refreshCache","outRangeStart","outRangeEnd","maxWidth","o","children","DataTask","onCreateLinkMouseDown","onStartCreateLink","onCreateLinkMouseUp","onFinishCreateLink","onCreateLinkTouchStart","touches","onCreateLinkTouchEnd","onUpdateTask","dragStart","dragProcess","dragEnd","doTouchStart","doTouchMove","changedTouches","doTouchEnd","calculateStyle","NONE","x","onChildDrag","newLeft","newWidth","MOVE","MOVE_RESIZE_LEFT","MOVE_RESIZE_RIGHT","changeObj","onTaskChanging","new_start_date","new_end_date","configStyle","isSelected","borderColor","onTouchStart","onSelectItem","onMouseUp","LEFT","onTouchEnd","overflow","RIGHT","DataRow","itemHeight","DataViewPort","sizeMe","monitorWidth","monitorHeight","startRow","endRow","selectedItems","onMouseLeave","onMouseMove","onTouchMove","onTouchCancel","scrollTop","scrollLeft","boundaries","shouldLink","childDragging","setChildDragging","setLinkMode","ctrlKey","onMouseEnter","onKeyDown","onKeyUp","zIndex","new_position","dateToPixel","new_width","rowStyle","Link","onDoubleClick","handleSelect","handleDoubleClick","path","coordinates","cpt1","y","halfY","cpt2","cpt3","cpt4","calcSCoordinates","calcNormCoordinates","getPath","pointerEvents","d","strokeLinejoin","fill","markerEnd","CreateLink","init","lastX","lastY","clientY","newX","newY","record","LinkViewPort","interactiveMode","taskToCreate","changingTask","onDoubleClickLink","registry","setCache","getItemPosition","link","startItem","getTask","endItem","startPosition","endPosition","getLinks","prev","userSelect","viewBox","refX","refY","markerWidth","markerHeight","orient","renderCreateLink","TaskRow","nonEditable","tableContent","tabIndex","TaskList","memo","onScroll","Registry","list","DataController","lower_limit","lower_data_limit","upper_limit","upper_data_limit","dataToRender","onHorizonChange","initialise","setLimits","loadDataHorizon","setStartEnd","needData","lowerLimit","upLimit","coordsToMagnitude","coords","sqrt","z","NewtonObject","friction","damping","maxSpeed","refreshRate","centroid","velocity","_lastT","mass","cutoffSpeed","cutoffForce","forces","motionTimer","motion","fNet","f","getForceVector","speed","velocityVector","frictionForce","dampingForce","acceleration","dT","newVelocity","newSpeed","reduction","assign","motionLoop","window","clearTimeout","onMoved","setTimeout","forceChange","attachable","attachObject","detatchObject","RubberBand","fulcrum","springK","_fulcrum","_attachment","object","att","distanceVector","distance","directionVector","force","TimeLine","dc","pxToScroll","scrollTime","taskViewPortRef","dataViewPortRef","physicsObject","mouseRubberBand","onSize","calculateVerticalScrollVariables","newNumVisibleRows","ceil","newNumVisibleDays","calcNumVisibleDays","rowInfo","calculateStartEndRows","numVisibleRows","numVisibleDays","verticalChange","new_start","trunc","horizontalChange","currentIndex","newState","currentDay","currentTarget","detatchForce","attachForce","setFulcrum","doMouseLeave","doTouchCancel","prevState","sideStyle","onCreateLink","getDayWidth","innerWidth","getMode","DAY_IN_DAY_MODE","DAY_IN_WEEK_MODE","DAY_IN_MONTH_MODE","DAY_IN_YEAR_MODE","newDayWidth","setData","setLinks","viewport","getElementById","viewportWidth","getBoundingClientRect","registerData","registerLinks","checkMode","dataViewport","viewportHeight","nonEditableName","mainViewportHeight","lower","upper","onDeleteLink","defaultProps","DEFAULT_LINKS","TimelineTest","useStage","tasks","workflow","setDayWidth","milestones","useMemo","m","s","renderMilestone","milestone","Container","fluid","xs","taskProgressOptions","themeColors","primary","progress","strokeWidth","trailWidth","trailColor","grays","easing","duration","svgStyle","display","autoStyleContainer","step","circle","percentage","round","setText","renderTask","endDate","percent","container_class","container_style","allTasks","reduce","borderBottom","setMode","setItemHeight","linkMode","setSelectedItems","useSetting","CardHeader","CustomInput","min","max","checked","ButtonGroup","uuid","l","update","it","exp","ManagmentRoutes","url","match","component","UnderConstruction","exact","to","formClass","feedback","valid","invalid","isTooltipFeedback","labelProps","inputProps","htmlFor","tooltip","xl","stages","stagesDuck","create","stageInfo","arrDocuments","documents","arrDocumentsPosted","arrPhotosPosted","docType","test","file","uploadDoc","base64toBlob","base64","docData","files","location","thumb","formData","photos","getOne","stageId","getStageIdentifiers","createNewTag","createNewType","addStageMember","organizationId","role","addStageOrganization","postNote","body","addStageDocuments","attachments","attachment","newDoc","cancel","addStagePhotos","newPhoto","photo","updateStage","updateObject","getCondensedTimesheetInfo","activeOnly","dataURI","splitDataURI","byteString","indexOf","atob","decodeURI","mimeString","ia","Uint8Array","charCodeAt","Blob","pickerProps","onBlur","autoFillBlank","buttonColor","dateValue","setDateValue","firstRender","setFirstRender","isValid","addonType","outline","dropLeft","open","onClose","Loader","tasksDuck","newTask","milestoneId","addTaskDocuments","createAssignment","assignedHours","updateAssignment","assignmentUpdate","getPersonAssignments","ViewNavigation","onClickPrev","onClickSwitch","onClickNext","switchContent","switchColSpan","switchProps","colSpan","LocalizedFormat","localeData","DEFAULT_RENDER_DAY","DEFAULT_VALID_DATE_CHECK","DaysView","renderDay","isValidDate","viewDate","navigate","showView","selectedDate","updateDate","dat","toISOString","startOfMonth","clone","endOfMonth","endOf","renderDate","row","isAfter","isSame","weekdaysMin","r","MonthsView","renderMonth","isDisabledMonth","months","YearsView","renderYear","disabledYears","setDisabledYears","viewYear","selectedYear","isDisabledYear","_updateSelectedYear","event","years","DEFAULT_CONSTRAINTS","minutes","seconds","milliseconds","pad","padValues","TimeView","timeConstraints","constraints","setConstraints","timeParts","setTimeParts","prevSelectedDate","appliedConstraints","minute","second","millisecond","ampm","counters","increase","tc","parseInt","decrease","onStartClicking","action","intHours","increaseTimer","timer","setInterval","mouseUpListener","clearInterval","_setTime","ClickOutBase","container","onClickOut","ClickableWrapper","onClickOutside","viewModes","YEARS","MONTHS","DAYS","TIME","nofn","DateTime","initialValue","initialViewMode","onNavigate","onBeforeNavigate","onNavigateBack","onNavigateForward","updateOnView","iso","locale","setOpen","closeOnSelect","closeOnClickOutside","staticDisplay","currentView","setCurrentView","setViewDate","updateView","setUpdateView","setSelectedDate","outputFormat","setOutputFormat","dateForm","timeForm","_showView","view","nextView","_onChange","_closeCalendar","_viewNavigate","modifier","unit","updatedDate","getAttribute","HOURS","newDate","getStageTypes","getStageTagOptions","getStageMemberRoleOptions","createMemberRole","href","spinnerStyle","divProps","settingName","settings","isShowMemberFixed","addMember","person","direction","nav","caret","src","avatar","makeName","isExact","mediaClass","bsSize","placement","useAssignments","isMyAssignment","loginPersonId"],"mappings":"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","file":"static/js/13.d77ffe49.chunk.js","sourcesContent":["////// Packages //////////////////\r\nimport React, { FC } from 'react'\r\nimport { Label, FormGroup } from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from 'components/Flex';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\n\r\n\r\nexport enum NAVY_COLOR_PALATTE {\r\n    TEAL='rgb(90, 132, 148, .7)',\r\n    TRUEST_PINK='rgba(192, 129, 137, .7)',\r\n    DEEP_PURPLE='rgba(111, 56, 87, .7)',\r\n    BLUE='rgb(132, 175, 182, .7)',\r\n    DARK_PINK='rgba(244, 193, 192, .7)'\r\n} \r\n\r\nexport enum DARK_PASTELS {\r\n    TEAL='rgb(15, 91, 81, .8)',\r\n    BLUE='rgb(4, 65, 102, .8)',\r\n    YELLOW='rgb(107, 77, 0, .8)',\r\n    RED='rgb(107, 0, 0, .8)',\r\n    PURPLE='rgb(55, 7, 63, .8)'\r\n}\r\n\r\nexport enum DARK_PASTEL_BORDERS {\r\n    TEAL='rgb(154, 237, 227, .8)',\r\n    BLUE='rgb(159, 217, 232, .8)',\r\n    YELLOW='rgb(235, 235, 200, .8)',\r\n    RED='rgb(240, 200, 200, .8)',\r\n    PURPLE='rgb(230, 210, 240, .8)'\r\n\r\n}\r\n\r\n////OG PASTELS\r\nexport enum PASTEL_COLORS {\r\n    SAND='rgb(235, 235, 200)',\r\n    GREEN='rgb(190, 230, 210)',\r\n    LAVENDER='rgb(230, 210, 240)',\r\n    BLUE='rgb(170, 200, 230)',\r\n    PINK='rgb(240, 200, 200)'\r\n} \r\n\r\nexport const BORDER_COLORS = {\r\n    [DARK_PASTELS.TEAL]: DARK_PASTEL_BORDERS.TEAL,\r\n    [DARK_PASTELS.BLUE]: DARK_PASTEL_BORDERS.BLUE,\r\n    [DARK_PASTELS.YELLOW]: DARK_PASTEL_BORDERS.YELLOW,\r\n    [DARK_PASTELS.RED]: DARK_PASTEL_BORDERS.RED,\r\n    [DARK_PASTELS.PURPLE]: DARK_PASTEL_BORDERS.PURPLE\r\n}\r\n\r\nexport const LIGHT_DARK_MAP = [\r\n    {\r\n        light: PASTEL_COLORS.SAND,\r\n        dark: DARK_PASTELS.YELLOW\r\n    },\r\n    {\r\n        light: PASTEL_COLORS.GREEN,\r\n        dark: DARK_PASTELS.TEAL\r\n    },\r\n    {\r\n        light: PASTEL_COLORS.BLUE,\r\n        dark: DARK_PASTELS.BLUE\r\n    },\r\n    {\r\n        light: PASTEL_COLORS.LAVENDER,\r\n        dark: DARK_PASTELS.PURPLE\r\n    },\r\n    {\r\n        light: PASTEL_COLORS.PINK,\r\n        dark: DARK_PASTELS.RED\r\n    }\r\n]\r\n\r\nexport const DEFAULT_COLORS = [\r\n    PASTEL_COLORS.SAND,\r\n    PASTEL_COLORS.GREEN,\r\n    PASTEL_COLORS.LAVENDER,\r\n    PASTEL_COLORS.BLUE,\r\n    PASTEL_COLORS.PINK\r\n]\r\n\r\ninterface Props {\r\n    color?: string;\r\n    setColor: React.Dispatch<React.SetStateAction<string>>;\r\n    colorOptions?: string[];\r\n}\r\n\r\nconst ColorPicker: FC<Props> = ({color, setColor, colorOptions=DEFAULT_COLORS}) => (\r\n    <FormGroup>\r\n        <Label for=\"colors\">Color</Label>\r\n        <Flex justify=\"between\">\r\n            {colorOptions.map( c => (\r\n                <div \r\n                    key={c}\r\n                    className={`cursor-pointer border ${color === c ? 'border-2x border-500' : ''}`} \r\n                    style={{backgroundColor: c, width: \"2rem\", height: \"2rem\"}} \r\n                    onClick={()=>setColor(c)}\r\n                />\r\n            ))}\r\n        </Flex>\r\n    </FormGroup>\r\n)\r\n\r\nexport default ColorPicker","////// Packages //////////////////\r\nimport BounceSpinner from 'components/BounceSpinner'\r\nimport React, { FC } from 'react'\r\nimport { Button, ButtonProps } from 'reactstrap'\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends ButtonProps {\r\n    text?: string;\r\n    submitting?: boolean;\r\n}\r\n\r\nconst SubmitButton: FC<Props> = ({text='Submit', submitting, color=\"primary\", ...rest}) => {\r\n    \r\n    \r\n    return (\r\n        <Button color={color} {...rest}>\r\n            {text}\r\n            {submitting && <BounceSpinner color=\"light\" size=\"sm\" /> }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default SubmitButton","import React, { FC, useState } from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalFooter, ModalBody} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { KanbanItem } from './KanbanColumn';\r\nimport Flex from 'components/Flex';\r\nimport SubmitButton from 'compositions/SubmitButton';\r\nimport { toast } from 'react-toastify';\r\nimport { setKanbanCategories } from 'store/thunks/settings';\r\nimport useAction from 'store/hooks/useAction';\r\n\r\ninterface Props {\r\n  category: string;\r\n  items: KanbanItem[];\r\n  categories: string[]\r\n}\r\n\r\nconst KanbanColumnHeader: FC<Props> = ({ category, items, categories }) => {\r\n  const [isOpenRemoveModal, setIsOpenRemoveModal] = useState(false);\r\n  const setCategoriesAction = useAction( setKanbanCategories )\r\n\r\n  async function handleRemoveColumn() {\r\n    if (items.length) {\r\n      toast.error('Cannot remove category with items. Please remove all items from this category before removing.')\r\n      return;\r\n    }\r\n    const data = await setCategoriesAction.post(categories.filter( c => c !== category ))\r\n    if (data?.success) {\r\n      toast.success('Removed')\r\n    } else {\r\n      toast.error(data?.error || 'Something went wrong')\r\n    }\r\n  }\r\n\r\n  async function handleMove(change: number) {\r\n    const newCategories = [...categories];\r\n    newCategories.sort( (a, b) => (a === 'Complete') \r\n                                    ? 1 \r\n                                    : (b === 'Complete') \r\n                                      ? -1 \r\n                                      : 0 \r\n                      )\r\n    const thisIndex = newCategories.findIndex( c => c === category );\r\n    const newIndex = thisIndex + change\r\n    if (newIndex < 0 || newIndex > categories.length - 2) {\r\n      toast.error(\"Couldn't move any more\")\r\n      return;\r\n    }\r\n    newCategories[thisIndex] = newCategories[thisIndex + change];\r\n    newCategories[thisIndex + change] = category;\r\n    const data = await setCategoriesAction.post( newCategories );\r\n    if (!data?.success) toast.error(data?.error || 'Failed to sort');\r\n  }\r\n\r\n  return (\r\n    <div className=\"kanban-column-header\">\r\n      <h5 className=\"text-serif fs-0 mb-0\">\r\n        {category} <span className=\"text-500\">({items.length})</span>\r\n      </h5>\r\n      <Modal isOpen={isOpenRemoveModal} toggle={()=>setIsOpenRemoveModal(false)}>\r\n        <ModalHeader>\r\n          Remove Category\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {items.length \r\n            ? 'Please remove all items from the category first.'\r\n            : 'Do you want to remove this category?'\r\n          }\r\n        </ModalBody>\r\n        <ModalFooter tag={Flex} justify=\"end\">\r\n          <SubmitButton\r\n            onClick={handleRemoveColumn}\r\n            submitting={setCategoriesAction.loading}\r\n            text=\"Remove\"\r\n            color=\"danger\"\r\n            disabled={!!items.length}\r\n          />\r\n        </ModalFooter>\r\n      </Modal>\r\n      <UncontrolledDropdown className=\"text-sans-serif btn-reveal-trigger\">\r\n        <DropdownToggle color=\"reveal\" size=\"sm\" className=\"py-0 px-2\">\r\n          <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu right className=\"py-0\">\r\n          <DropdownItem onClick={()=>handleMove(-1)}>Move Left</DropdownItem>\r\n          <DropdownItem onClick={()=>handleMove(1)}>Move Right</DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem className=\"text-danger\" onClick={()=>setIsOpenRemoveModal(true)}>Remove</DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumnHeader;\r\n","import { BaseDuck } from \"store/ducks/BaseDuck\";\r\nimport { toDos as toDosDuck } from \"store/ducks/management\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MToDo } from \"store/types/models/management\";\r\n\r\ninterface ToDoController extends BaseDuck<MToDo> {\r\n    createToDo: ActionCreator<['createToDo']>;\r\n    editToDo: ActionCreator<['editToDo']>;\r\n    deleteToDo: ActionCreator<['deleteToDo']>;\r\n    getToDos: ActionCreator<['getToDos']>;\r\n    reorderToDos: ActionCreator<\"editToDo\"[]>;\r\n}\r\n\r\nexport const toDos = toDosDuck as ToDoController\r\n\r\nexport const createToDo: ActionCreator<['createToDo']> = (\r\n    description: string, \r\n    kanban: {category?: string, sortIndex: number}, \r\n    dueDate?: string,\r\n    color: string\r\n) => {\r\n    const actions = [{\r\n        name: 'createToDo',\r\n        data: {\r\n            description,\r\n            dueDate,\r\n            kanban,\r\n            color\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\ntoDos.createToDo = createToDo;\r\n\r\ninterface EditToDoProps {\r\n    description?: string, \r\n    dueDate?: string, \r\n    kanban?: {\r\n        category?: string, \r\n        sortIndex?: number,\r\n        color?: string;\r\n    },\r\n    complete?: boolean\r\n}\r\n\r\nexport const editToDo: ActionCreator<['editToDo']> = (toDoId: MToDo['_id'], props: EditToDoProps) => {\r\n    const actions = [{\r\n        name: 'editToDo',\r\n        data: {\r\n            toDoId,\r\n            ...props\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nexport const deleteToDo: ActionCreator<['deleteToDo']> = (toDoId: MToDo['_id']) => {\r\n    const actions = [{\r\n        name: 'deleteToDo',\r\n        data: {\r\n            toDoId\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nexport const getToDos: ActionCreator<['getToDos']> = (delimiter?: MToDo['_id']) => {\r\n    const actions = [{\r\n        name: 'getToDos',\r\n        data: {\r\n            delimiter\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\ninterface ReorderToDoProp {\r\n    toDoId: MToDo['_id'];\r\n    sortIndex: number;\r\n    category: string;\r\n}\r\n\r\nexport const reorderToDos: ActionCreator<\"editToDo\"[]> = (items: ReorderToDoProp[]) => {\r\n    const actions = items.map( i => ({\r\n        name: 'editToDo',\r\n        data: {\r\n            toDoId: i.toDoId,\r\n            kanban: {\r\n                sortIndex: i.sortIndex,\r\n                category: i.category\r\n            }\r\n        }\r\n    } as const))\r\n    return { actions }\r\n}\r\ntoDos.reorderToDos = reorderToDos;","////// Packages //////////////////\r\nimport React, { FC, useState } from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, FormGroup, Label } from 'reactstrap'\r\n\r\n////// Local Components //////////\r\nimport ColorPicker, { PASTEL_COLORS } from './ColorPicker';\r\n\r\n////// Global Components /////////\r\nimport FormGroupInput from 'components/FormGroupInput'\r\nimport DateTimeInputGroup from 'components/datetime/DateTimeInputGroup';\r\nimport SubmitButton from 'compositions/SubmitButton';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Thunks ////////////////////\r\nimport { createToDo } from 'store/thunks/management';\r\n\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    category: string;\r\n    index: number;\r\n    isOpen: boolean,\r\n    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst AddToDo: FC<Props> = ({category, index, isOpen, setIsOpen}) => {\r\n    const [description, setDescription] = useState<string>();\r\n    const [dueDate, setDueDate] = useState<string>();\r\n    const [color, setColor] = useState(PASTEL_COLORS[0]);\r\n    const createToDoAction = useAction( createToDo )\r\n\r\n    async function handleSubmit() {\r\n        const data = await createToDoAction.post(description, {category, sortIndex: index}, dueDate, color)\r\n        if (data?.success) {\r\n            toast.success('Created new to-do');\r\n            setIsOpen(false)\r\n        } else {\r\n            toast.error(data?.error || \"Something went wrong\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} toggle={()=>setIsOpen(false)}>\r\n            <ModalHeader className='bg-light border-bottom-0'>\r\n                Add To-Do\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <FormGroupInput\r\n                    id=\"todo-description\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter description...\"\r\n                    rows={ 4 }\r\n                    value={ description }\r\n                    onChange={ e => setDescription(e.target.value) }\r\n                />\r\n                <FormGroup>\r\n                    <Label for=\"todo-duedate\">Due Date</Label>\r\n                    <DateTimeInputGroup\r\n                        timeFormat={false}\r\n                        value={ dueDate }\r\n                        onChange={ date => setDueDate(date) }\r\n                    />\r\n                </FormGroup>\r\n                <ColorPicker color={color} setColor={setColor} />\r\n            </ModalBody>\r\n            <ModalFooter className='bg-light border-top-0'>\r\n                <SubmitButton\r\n                    submitting={createToDoAction.loading}\r\n                    onClick={handleSubmit}\r\n                />\r\n            </ModalFooter>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddToDo;","export const getItemStyle = (isDragging: boolean) => ({\r\n    // change background colour if dragging\r\n    cursor: isDragging ? 'grabbing' : 'grab',\r\n    transform: isDragging ? 'rotate(-3deg)' : '',\r\n    transition: 'all 0.3s ease-out'\r\n\r\n    // styles we need to apply on draggables\r\n  });","////// Packages //////////////////\r\nimport React, { FC, useContext } from 'react';\r\nimport { Draggable, DropResult } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  CardHeader,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip\r\n} from 'reactstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport AvatarGroup from 'components/AvatarGroup';\r\nimport Flex from 'components/Flex';\r\n\r\n////// CommonJS Helpers //////////\r\nimport { getItemStyle } from './helpers';\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\nimport { AssignmentWithTaskInfo, MAssignment } from 'store/types/models/workflow';\r\nimport { statusColorsMap } from 'helpers/statusColorsMap';\r\nimport dayjs from 'dayjs';\r\nimport usePeopleList from 'store/hooks/person/usePeopleList';\r\n\r\n\r\n\r\nexport interface KanbanAssignment extends AssignmentWithTaskInfo {\r\n  type: 'assignment'\r\n}\r\n\r\ninterface Props {\r\n    assignment: KanbanAssignment;\r\n    category: string;\r\n    index: number;\r\n    lastIndex: number;\r\n    fakeDragEvent: (result: Partial<DropResult>)=>void;\r\n    categories: string[];\r\n}\r\n\r\nconst AssignmentCard: FC<Props> = ({ assignment, category, index, lastIndex, fakeDragEvent, categories }) => {\r\n  const loginPersonId = useSelector( state => state.app.login.personId );\r\n\r\n  const assignedIds = assignment.assignees.map(a => a.personId)\r\n  const {value: people} = usePeopleList(...assignedIds)\r\n  const history = useHistory()\r\n\r\n  const draggableId = `draggable-assignment-${assignment._id}`\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          className=\"kanban-item\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Card\r\n            className=\"kanban-item-card\"\r\n            style={getItemStyle(snapshot.isDragging)}\r\n          >\r\n            <CardBody>\r\n              <Flex justify=\"between\">\r\n                <div>\r\n                  <h6 className=\"mb-1\">{assignment.stage.identifier}</h6>\r\n                  <p className=\"fs--2 my-0\"><i>{assignment.stage.title}</i></p>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <Badge \r\n                    className={`badge-soft-${statusColorsMap[assignment.status[assignment.status.length - 1].title]} d-inline-block py-1 mr-1 mb-1`} \r\n                    key={index + 10}\r\n                  >\r\n                    {assignment.status[assignment.status.length - 1].title}\r\n                  </Badge>\r\n                </div>\r\n              </Flex>\r\n              \r\n              <hr className=\"my-1\" />\r\n              <h6 className=\"mb-1\"><i>{assignment.task.title}</i></h6>\r\n              { assignment.description?.split('\\n').map((str, i) => <p className=\"mb-1 fs--1\" key={i}>{str}</p>) }\r\n              \r\n              <div className=\"kanban-item-footer\">\r\n                <div className=\"text-500\">\r\n                  {dayjs(assignment.dueDate).format(\"MM/DD/YYYY\")}\r\n                </div>\r\n                <div>\r\n                  <AvatarGroup avatarSize=\"m\" showMembers={ 6 } people={ people || []} />\r\n                </div>\r\n                <UncontrolledDropdown\r\n                  className=\"text-sans-serif\"\r\n                  onClick={e => {\r\n                    e.stopPropagation();\r\n                  }}\r\n                >\r\n                  <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                    <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right className=\"py-0\">\r\n                    {index > 0 && \r\n                      <DropdownItem\r\n                        onClick={()=>fakeDragEvent(\r\n                          {\r\n                            reason: 'DROP', \r\n                            draggableId,\r\n                            destination: {\r\n                              droppableId: category, \r\n                              index: index - 1\r\n                            }, \r\n                            source: {\r\n                              droppableId: category, \r\n                              index: index\r\n                            }\r\n                          }\r\n                        )}\r\n                      >Move Up</DropdownItem>\r\n                    }\r\n                    {index < lastIndex && \r\n                      <DropdownItem\r\n                        onClick={()=>fakeDragEvent(\r\n                          {\r\n                            reason: 'DROP', \r\n                            draggableId,\r\n                            destination: {\r\n                              droppableId: category, \r\n                              index: index + 1\r\n                            }, \r\n                            source: {\r\n                              droppableId: category, \r\n                              index: index\r\n                            }\r\n                          }\r\n                        )}\r\n                      >\r\n                        Move Down\r\n                      </DropdownItem>\r\n                    }\r\n                    {!assignment.complete && \r\n                      <>\r\n                        <DropdownItem divider />\r\n                        {categories.filter(c => c !== category).map( (c, i) => (\r\n                          <DropdownItem\r\n                            key={i}\r\n                            onClick={()=>fakeDragEvent(\r\n                              {\r\n                                reason: 'DROP',\r\n                                draggableId,\r\n                                destination: {\r\n                                  droppableId: c, \r\n                                  index: 0\r\n                                }, \r\n                                source: {\r\n                                  droppableId: category, \r\n                                  index: index\r\n                                }\r\n                              }\r\n                            )}\r\n                          >\r\n                            {c}\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    \r\n                    <DropdownItem divider />\r\n                    <DropdownItem \r\n                      className=\"text-primary\"\r\n                      onClick={() => history.push(`/workflows/${assignment.stage.workflowId}/stage/${assignment.stage._id}/task/${assignment.task._id}`)}\r\n                    >\r\n                      Go To Task\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n              \r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default AssignmentCard;\r\n","////// Packages //////////////////\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport useAction from 'store/hooks/useAction';\r\nimport { editToDo } from 'store/thunks/management';\r\nimport { Modal, ModalHeader, ModalFooter, ModalBody, FormGroup, Label} from 'reactstrap'\r\nimport { KanbanTodo } from './KanbanColumn';\r\n////// Local Components //////////\r\nimport ColorPicker, {PASTEL_COLORS} from './ColorPicker'\r\n\r\n////// Global Components /////////\r\nimport FormGroupInput from 'components/FormGroupInput';\r\nimport DateTimeInputGroup from 'components/datetime/DateTimeInputGroup';\r\nimport SubmitButton from 'compositions/SubmitButton';\r\nimport Flex from 'components/Flex';\r\nimport { toast } from 'react-toastify';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    toDo: KanbanTodo;\r\n    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst EditToDo: FC<Props> = ({toDo, setIsOpen}) => {\r\n    const [description, setDescription] = useState<string>()\r\n    const [dueDate, setDueDate] = useState<string>();\r\n    const [color, setColor] = useState<string>(PASTEL_COLORS.SAND);\r\n    const editAction = useAction( editToDo );\r\n\r\n    useEffect(() => {setDescription(toDo.description)}, [toDo.description])\r\n    useEffect(() => {setDueDate(toDo.dueDate)}, [toDo.dueDate])\r\n\r\n\r\n    async function handleSubmitEdit() {\r\n        const data = await editAction.post(toDo._id, {description, dueDate, kanban: {color}})\r\n        if (data?.success) {\r\n            toast.success('Updated to-do');\r\n            setIsOpen(false);\r\n        } else {\r\n            toast.error(data?.error || \"Something went wrong\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen toggle={()=>setIsOpen(false)}>\r\n            <ModalHeader>\r\n\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <FormGroupInput \r\n                    id=\"todo-description\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter description...\"\r\n                    rows={ 4 }\r\n                    value={ description }\r\n                    onChange={ e => setDescription(e.target.value) }\r\n                />\r\n                <FormGroup>\r\n                    <Label for=\"todo-duedate\">Due Date</Label>\r\n                    <DateTimeInputGroup\r\n                        timeFormat={false}\r\n                        value={ dueDate }\r\n                        onChange={ date => setDueDate(date) }\r\n                    />\r\n                </FormGroup>\r\n                <ColorPicker color={color} setColor={setColor} />\r\n            </ModalBody>\r\n            <ModalFooter tag={Flex} align=\"bottom\" justify=\"end\">\r\n                <SubmitButton\r\n                    submitting={ editAction.loading }\r\n                    onClick={handleSubmitEdit}\r\n                />\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditToDo","////// Packages //////////////////\r\nimport React, { FC, useState } from 'react';\r\nimport { Draggable, DropResult } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { toast } from 'react-toastify';\r\nimport confirm from 'reactstrap-confirm';\r\nimport dayjs from 'dayjs';\r\n\r\n////// Local Components //////////\r\nimport EditToDo from './EditToDo';\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\nimport { getItemStyle } from './helpers';\r\n\r\n////// Custom Hooks //////////////\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Thunks ////////////////////\r\nimport { deleteToDo } from 'store/thunks/management';\r\n\r\n////// Types /////////////////////\r\nimport { AssignmentWithTaskInfo, MAssignment } from 'store/types/models/workflow';\r\nimport { KanbanTodo } from './KanbanColumn';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface KanbanAssignment extends AssignmentWithTaskInfo {\r\n  type: 'assignment'\r\n}\r\n\r\ninterface Props {\r\n    toDo: KanbanTodo;\r\n    category: string;\r\n    index: number;\r\n    lastIndex: number;\r\n    fakeDragEvent: (result: Partial<DropResult>)=>void;\r\n    categories: string[]\r\n}\r\n\r\nconst ToDoCard: FC<Props> = ({ toDo, category, index, lastIndex, categories, fakeDragEvent }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const deleteAction = useAction( deleteToDo );\r\n\r\n\r\n\r\n    async function handleDelete() {\r\n        const confirmed = await confirm({\r\n            title: 'Delete To-Do?',\r\n            message: 'Are you sure you want to delete this To-Do?',\r\n            confirmColor: 'danger',\r\n            confirmText: 'Delete',\r\n            cancelColor: 'secondary',\r\n            cancelText: 'Cancel'            \r\n        })\r\n        if (!confirmed) return\r\n        const data = await deleteAction.post(toDo._id)\r\n        if (data?.success) {\r\n            toast.success('Deleted to-do');\r\n        } else {\r\n            toast.error(data?.error || \"Something went wrong\");\r\n        }\r\n    }\r\n\r\n    const draggableId = `draggable-todo-${toDo._id}`;\r\n\r\n    return (\r\n        <Draggable draggableId={`draggable-todo-${toDo._id}`} index={index}>\r\n        {(provided, snapshot) => (\r\n            <div\r\n            className=\"kanban-item\"\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            >\r\n            <Card\r\n                className=\"kanban-item-card\"\r\n                style={{...getItemStyle(snapshot.isDragging), backgroundColor: toDo.kanban.color || 'rgb(255, 255, 200)', color: 'rgb(50, 50, 50)'}}\r\n            >\r\n                <CardBody>\r\n                    { \r\n                        toDo.description\r\n                            .split('\\n')\r\n                            .map((str, i) => (\r\n                                <p className=\"mb-1 fs--1 text-sans-serif\" key={i}>\r\n                                    {str}\r\n                                </p>\r\n                            )) \r\n                    }\r\n                \r\n                <div className=\"kanban-item-footer\">\r\n                    <div className=\"text-500\">\r\n                    {toDo.dueDate && dayjs(toDo.dueDate).format(\"MM/DD/YYYY\")}\r\n                    </div>\r\n                    <UncontrolledDropdown\r\n                    className=\"text-sans-serif\"\r\n                    onClick={e => {\r\n                        e.stopPropagation();\r\n                    }}\r\n                    >\r\n                    <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                        <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right className=\"py-0\">\r\n                        {index > 0 && \r\n                        <DropdownItem\r\n                            onClick={()=>fakeDragEvent(\r\n                            {\r\n                                reason: 'DROP', \r\n                                draggableId,\r\n                                destination: {\r\n                                droppableId: category, \r\n                                index: index - 1\r\n                                }, \r\n                                source: {\r\n                                droppableId: category, \r\n                                index: index\r\n                                }\r\n                            }\r\n                            )}\r\n                        >Move Up</DropdownItem>\r\n                        }\r\n                        {index < lastIndex && \r\n                        <DropdownItem\r\n                            onClick={()=>fakeDragEvent(\r\n                            {\r\n                                reason: 'DROP', \r\n                                draggableId,\r\n                                destination: {\r\n                                droppableId: category, \r\n                                index: index + 1\r\n                                }, \r\n                                source: {\r\n                                droppableId: category, \r\n                                index: index\r\n                                }\r\n                            }\r\n                            )}\r\n                        >\r\n                            Move Down\r\n                        </DropdownItem>\r\n                        }\r\n                        <DropdownItem divider />\r\n                        {categories.filter(c => c !== category).map( c => (\r\n                        <DropdownItem\r\n                            onClick={()=>fakeDragEvent(\r\n                            {\r\n                                reason: 'DROP',\r\n                                draggableId,\r\n                                destination: {\r\n                                droppableId: c, \r\n                                index: 0\r\n                                }, \r\n                                source: {\r\n                                droppableId: category, \r\n                                index: index\r\n                                }\r\n                            }\r\n                            )}\r\n                            key={c}\r\n                        >\r\n                            {c}\r\n                        </DropdownItem>\r\n                        ))}\r\n                        <DropdownItem divider />\r\n                        <DropdownItem \r\n                            className=\"text-primary\"\r\n                            onClick={()=>setIsOpen(true)}\r\n                        >\r\n                            Edit\r\n                        </DropdownItem>\r\n                        <DropdownItem \r\n                            className=\"text-danger\"\r\n                            onClick={handleDelete}\r\n                        >\r\n                        Delete\r\n                        </DropdownItem>\r\n                    </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </div>\r\n                \r\n                </CardBody>\r\n            </Card>\r\n            {isOpen && <EditToDo toDo={toDo} setIsOpen={setIsOpen} />}\r\n            </div>\r\n        )}\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nexport default ToDoCard;\r\n","import React, {  useState, FC, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport KanbanColumnHeader from './KanbanColumnHeader';\r\nimport { Droppable, DropResult } from 'react-beautiful-dnd';\r\n\r\nimport AddToDo from './AddToDo';\r\nimport ButtonIcon from 'components/ButtonIcon';\r\nimport AssignmentCard, { KanbanAssignment } from './AssignmentCard';\r\nimport ToDoCard from './ToDoCard';\r\nimport { MToDo } from 'store/types/models/management';\r\n\r\nexport interface KanbanTodo extends MToDo {\r\n  type: 'todo';\r\n}\r\n\r\nexport type KanbanConfiguredAssignment = KanbanAssignment & {kanban: {category: string, sortIndex: number}}\r\nexport type KanbanItem = KanbanConfiguredAssignment | KanbanTodo;\r\n\r\ninterface Props {\r\n  category: string;\r\n  index: number;\r\n  items: KanbanItem[];\r\n  categories: string[];\r\n  fakeDragEvent: (result: DropResult)=>void\r\n}\r\n\r\nconst KanbanColumn: FC<Props> = ({ category, index, items, categories, fakeDragEvent }) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const kanbanContainer = document.getElementById(`container-${index}`)!;\r\n  //   kanbanContainer.scrollTop = kanbanContainer.scrollHeight;\r\n  // }, [showForm, index]);\r\n\r\n  const categoryItems = items.sort( (a, b) => {\r\n    const sorta = a.kanban.sortIndex || 0\r\n    const sortb = b.kanban.sortIndex || 0\r\n    if (sorta === sortb) {\r\n      if (a._id > b._id) {\r\n        return 1\r\n      } else {\r\n        return -1\r\n      }\r\n    } else if (sorta > sortb) {\r\n      return 1\r\n    }\r\n    return -1\r\n  })\r\n\r\n\r\n  return (\r\n    <div className={classNames('kanban-column', { 'form-added': showForm })}>\r\n      <KanbanColumnHeader category={category} items={items} categories={categories} />\r\n      <Droppable droppableId={category}>\r\n        {(provided, snapshot) => (\r\n          <>\r\n            <div\r\n              className=\"kanban-items-container scrollbar\"\r\n              id={`container-${index}`}\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              {\r\n                categoryItems.map( (item, i, a) => {\r\n                  switch (item.type) {\r\n                    case 'assignment':\r\n                      return <AssignmentCard \r\n                              categories={categories} \r\n                              assignment={item} \r\n                              category={category} \r\n                              index={i} key={item._id} \r\n                              lastIndex={a.length - 1} \r\n                              fakeDragEvent={fakeDragEvent}\r\n                            />\r\n                    case 'todo':\r\n                      return <ToDoCard \r\n                              toDo={item} \r\n                              category={category} \r\n                              index={i} \r\n                              key={item._id} \r\n                              lastIndex={a.length - 1} \r\n                              fakeDragEvent={fakeDragEvent} \r\n                              categories={categories}\r\n                            /> \r\n                  }\r\n                })\r\n              }\r\n              {showForm && <AddToDo category={category} index={categoryItems.length} isOpen={showForm} setIsOpen={setShowForm} />}\r\n              {provided.placeholder}\r\n            </div>\r\n            {!showForm && (\r\n              <div className=\"kanban-column-footer\">\r\n                <ButtonIcon\r\n                  className=\"btn-add-card text-600 text-decoration-none\"\r\n                  color=\"link\"\r\n                  block\r\n                  icon=\"plus\"\r\n                  iconClassName=\"mr-1\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    setShowForm(true);\r\n                  }}\r\n                >\r\n                  Add a Personal To-Do\r\n                </ButtonIcon>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default KanbanColumn;\r\n","import Flex from 'components/Flex';\r\nimport React, { FC, useState } from 'react';\r\nimport { Button, Row, Col, ModalBody, Modal, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport ButtonIcon from 'components/ButtonIcon';\r\nimport FormGroupInput from 'components/FormGroupInput';\r\nimport useAction from 'store/hooks/useAction';\r\nimport { setKanbanCategories } from 'store/thunks/settings';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Props {\r\n  categories: string[]\r\n}\r\n\r\nconst KanbanHeader: FC<Props> = ({categories}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState<string>();\r\n  const setCategories = useAction( setKanbanCategories )\r\n\r\n  const handleSubmit = async () => {\r\n    const data = await setCategories.post( Array.from(new Set([...categories, title])) )\r\n    if (data?.success) {\r\n      toast.success('Added category')\r\n      setIsOpen(false)\r\n      setTitle(undefined)\r\n    } else {\r\n      toast.error(data?.error || 'Something went wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row noGutters className=\"bg-100 rounded-soft px-card py-2 mt-2 mb-3 btn-reveal-trigger\">\r\n      <Col tag={Flex} align=\"center\" justify=\"between\">\r\n        <h5 className=\"mb-0\">Assignments</h5>\r\n        <ButtonIcon\r\n          id=\"add-kanban-category\"\r\n          color=\"link\"\r\n          icon=\"plus\" \r\n          iconAlign=\"right\"\r\n          size=\"sm\"\r\n          className=\"btn-reveal text-decoration-none\"\r\n          onClick={() => setIsOpen(true)}\r\n          \r\n        >\r\n          Add Category\r\n        </ButtonIcon>\r\n        <Modal isOpen={isOpen} toggle={()=>setIsOpen(false)}>\r\n          <ModalHeader className=\"bg-light border-bottom-0\">\r\n            Add Category\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroupInput\r\n              id=\"new-category-title\"\r\n              label=\"Title\"\r\n              value={title}\r\n              onChange={e=>setTitle(e.target.value)}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter tag={Flex} align=\"bottom\" justify=\"end\" className=\"bg-light border-top-0\">\r\n            <Button color=\"primary\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KanbanHeader;\r\n","import { getKanbanCategories } from \"store/thunks/settings\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useKanbanCategories() {\r\n    return useLoadAndSelect({\r\n        actionCreator: getKanbanCategories,\r\n        selector: state => state.app.options?.kanban?.categories,\r\n        deduplicate: ['kanbanCategories']\r\n    })\r\n}\r\n\r\nexport default useKanbanCategories;","import { shallowEqual } from \"react-redux\";\r\nimport { getToDos } from \"store/thunks/management\";\r\nimport { MToDo } from \"store/types/models/management\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useToDos(delimiter?: MToDo['_id']) {\r\n    return useLoadAndSelect({\r\n        actionCreator: getToDos,\r\n        postParams: delimiter,\r\n        selector: state => Object.values(state.management.toDos),\r\n        equality: shallowEqual,\r\n        deduplicate: ['toDos', delimiter || 'top']\r\n    })\r\n}\r\n\r\nexport default useToDos","////// Packages //////////////////\r\nimport LoadingGateway from 'components/LoadingGateway';\r\nimport React, { FC, useEffect, useRef, useState } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport useMyAssignments from 'store/hooks/workflow/useMyAssignments';\r\nimport { MPerson } from 'store/types/models/id'\r\nimport KanbanColumn, { KanbanConfiguredAssignment, KanbanItem } from './KanbanColumn';\r\nimport KanbanHeader from './KanbanHeader';\r\nimport { DragDropContext, DropResult, ResponderProvided } from 'react-beautiful-dnd';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from 'components/Flex';\r\nimport is from 'is_js';\r\nimport useSetting from 'store/hooks/settings/useSettings';\r\nimport useKanbanCategories from 'store/hooks/management/useKanbanCategories';\r\nimport useToDos from 'store/hooks/management/useToDos';\r\nimport { MToDo } from 'store/types/models/management';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\nimport { toDos as toDosController } from 'store/thunks/management';\r\nimport { tasks as tasksController } from 'store/thunks/workflow/tasks';\r\nimport { Dispatch } from 'redux';\r\nimport { toast } from 'react-toastify';\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nfunction compareArrays(array: KanbanItem[], category: string, dispatch: Dispatch<any>, personId: MPerson['_id']) {\r\n    const movedAssignments = [] as {taskId: string, assignmentId: string, sortIndex: number, category: string;}[]\r\n    const movedToDos = [] as {toDoId: string, sortIndex: number, category: string}[]\r\n    for ( let i = 0; i < array.length; i++ ) {\r\n        const item = array[i]\r\n        if (!item) continue;\r\n        switch(item.type) {\r\n            case \"assignment\": {\r\n                const config = item.assignees.find( a => a.personId === personId)!\r\n                if (config.sortIndex !== i || config.category !== category) {\r\n                    dispatch( \r\n                        tasksController.upsert(\r\n                            {\r\n                                assignments: [{\r\n                                    _id: item._id, \r\n                                    assignees: [{\r\n                                        _id: config._id,\r\n                                        sortIndex: i\r\n                                    }]\r\n                                }]\r\n                            },\r\n                            item.task._id\r\n                        )\r\n                    )\r\n                    movedAssignments.push({\r\n                        taskId: item.task._id, \r\n                        assignmentId: item._id,\r\n                        sortIndex: i,\r\n                        category: category\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            case \"todo\":\r\n                if (item.kanban.sortIndex !== i || item.kanban.category !== category) {\r\n                    dispatch( \r\n                        toDosController.upsert(\r\n                            {\r\n                                kanban: {\r\n                                    sortIndex: i\r\n                                }\r\n                            },\r\n                            item._id\r\n                        )\r\n                    )\r\n                    movedToDos.push({\r\n                        toDoId: item._id,\r\n                        sortIndex: i,\r\n                        category: category\r\n                    })\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return {movedAssignments, movedToDos}\r\n}\r\n\r\nfunction handleResortOut(\r\n    draggableId: string, \r\n    category: string, \r\n    index: number, \r\n    dispatch: Dispatch<any>, \r\n    categories: Map<string, KanbanItem[]>, \r\n    personId: MPerson['_id']\r\n) {\r\n    const [_d, type, id] = draggableId.split('-')\r\n\r\n    const arr = categories.get(category)!\r\n                            .slice()\r\n                            .sort( (a, b) => a.kanban.sortIndex > b.kanban.sortIndex ? 1 : -1)\r\n\r\n    const splicedIndex = arr.findIndex( item => item.type === type && item._id === id)\r\n    if (splicedIndex === -1) {\r\n        toast.error('there was a problem re-sorting out')\r\n        return {movedAssignments: [], movedToDos: []};\r\n    }\r\n    arr.splice(splicedIndex, 1);\r\n    categories.set(category, arr.map( (item, i) => ({...item, kanban: {...item.kanban, sortIndex: i}})));\r\n    \r\n    return compareArrays(arr, category, dispatch, personId)\r\n}\r\n\r\nfunction handleResortIn(\r\n    draggableId: string, \r\n    fromCategory: string,\r\n    toCategory: string, \r\n    index: number, \r\n    dispatch: Dispatch<any>, \r\n    categories: Map<string, KanbanItem[]>, \r\n    personId: MPerson['_id']\r\n) {\r\n    const [_d, type, id] = draggableId.split('-')\r\n    const draggedItem = categories.get(fromCategory)!.find( _i => _i._id === id && _i.type === type);\r\n    if (!draggedItem) {\r\n        toast.error('there was a problem re-sorting in')\r\n        return {movedAssignments: [], movedToDos: []};\r\n    }\r\n    const arr = categories.get(toCategory)!\r\n                            .slice()\r\n                            .sort( (a, b) => a.kanban.sortIndex > b.kanban.sortIndex ? 1 : -1)\r\n\r\n    arr.splice(index, 0, draggedItem);\r\n    categories.set(toCategory, arr.map( (item, i) => ({...item, kanban: {...item.kanban, sortIndex: i}})));\r\n    return compareArrays(arr, toCategory, dispatch, personId)\r\n}\r\n\r\nfunction handleResortSame(\r\n        draggableId: string, \r\n        category: string,\r\n        index: number, \r\n        dispatch: Dispatch<any>, \r\n        categories: Map<string, KanbanItem[]>, \r\n        personId: MPerson['_id']\r\n    ) {\r\n    const arr = categories.get(category)!\r\n                            .slice()\r\n                            .sort( (a, b) => a.kanban.sortIndex > b.kanban.sortIndex ? 1 : -1)\r\n\r\n    const [_d, type, id] = draggableId.split('-')\r\n\r\n    const spliced = arr.splice( arr.findIndex( item => item._id === id && item.type === type ), 1 )\r\n    if (!spliced.length) {\r\n        toast.error('there was a problem re-sorting')\r\n        return {movedAssignments: [], movedToDos: []};\r\n    }\r\n\r\n    arr.splice(index, 0, ...spliced)\r\n    categories.set(category, arr.map( (item, i) => ({...item, kanban: {...item.kanban, sortIndex: i}})));\r\n    return compareArrays(arr, category, dispatch, personId)\r\n}\r\n\r\nconst Assignments: FC<Props> = () => {\r\n    const personId = useSelector(state => state.app.login.personId);\r\n    const [delimiter, setDelimiter] = useState<MToDo[\"_id\"]>();\r\n    const [trappedCategories, setTrappedCategories] = useState<Map<string, KanbanItem[]>>();\r\n    const {value: userCategories, ...userCategoriesLoader} = useKanbanCategories();\r\n\r\n    const { value: assignments, ...assignmentsLoader } = useMyAssignments();\r\n    const { value: toDos, ...toDosLoader } = useToDos(delimiter);\r\n\r\n    const reorderAssignmentsAction = useAction( tasksController.reorderAssignments )\r\n    const reorderToDosAction = useAction( toDosController.reorderToDos )\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const _categories = new Map<string, KanbanItem[]>(userCategories?.map( cat => [ cat, [] ] ) )\r\n\r\n    // Detect device\r\n    useEffect(() => {\r\n        if (is.ipad()) {\r\n            containerRef.current?.classList.add('ipad');\r\n        }\r\n        if (is.mobile()) {\r\n            containerRef.current?.classList.add('mobile');\r\n            if (is.safari()) {\r\n                containerRef.current?.classList.add('safari');\r\n            }\r\n            if (is.chrome()) {\r\n                containerRef.current?.classList.add('chrome');\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n    assignments?.forEach( a => {\r\n        const config = a.assignees.find( e => e.personId === personId );\r\n        const category = a.complete ? 'Complete' : (config?.category || 'Uncategorized');\r\n        const aWithConfig = {\r\n            ...a,\r\n            type: 'assignment' as const,\r\n            kanban: {\r\n                category,\r\n                sortIndex: config?.sortIndex || 0\r\n            }\r\n        }\r\n        if ( _categories.has(category) ) {\r\n            _categories.get(category)!.push(aWithConfig)\r\n        } else {\r\n            _categories.set(category, [aWithConfig])\r\n        }\r\n    })\r\n\r\n    toDos?.forEach( t => {\r\n        const category = t.complete ? 'Complete' : (t.kanban.category || 'Uncategorized');\r\n        const tWithConfig = {\r\n            ...t,\r\n            type: 'todo' as const,\r\n            kanban: {\r\n                category,\r\n                sortIndex: t.kanban.sortIndex || 0,\r\n                color: t.kanban.color\r\n            }\r\n        }\r\n        if ( _categories.has(category) ) {\r\n            _categories.get(category)!.push(tWithConfig)\r\n        } else {\r\n            _categories.set(category, [tWithConfig])\r\n        }\r\n    })\r\n\r\n    const categories = trappedCategories || _categories;\r\n\r\n    async function reorderAssignments(items: {assignmentId: string, taskId: string, sortIndex: number, category: string}[]) {\r\n        const data = await reorderAssignmentsAction.post(items)\r\n        if (!data?.success) toast.error('There was a problem re-sorting the assignments. Please refresh the page and try again.')\r\n    }\r\n\r\n    async function reorderToDos(items: {toDoId: string, sortIndex: number, category: string}[]) {\r\n        const data = await reorderToDosAction.post(items)\r\n        if (!data?.success) toast.error('There was a problem re-sorting the todos. Please refresh the page and try again.')\r\n    }\r\n\r\n    const getBatchedActions = (\r\n        result: DropResult, \r\n        newCat: string | undefined, \r\n        dispatch: Dispatch<any>, \r\n        categories: Map<string, KanbanItem[]>, \r\n        personId: MPerson['_id']\r\n    ) => async () => {\r\n        const categoriesMutableCopy = new Map(categories);\r\n        if (newCat !== undefined) {\r\n            const {movedAssignments: a2, movedToDos: t2} = handleResortIn(\r\n                result.draggableId, \r\n                result.source.droppableId, \r\n                newCat, \r\n                result.destination!.index, \r\n                dispatch, \r\n                categoriesMutableCopy, \r\n                personId!\r\n            )\r\n            const {movedAssignments: a1, movedToDos: t1} = handleResortOut(\r\n                result.draggableId,\r\n                result.source.droppableId,\r\n                result.source.index,\r\n                dispatch,\r\n                categoriesMutableCopy,\r\n                personId!\r\n            )\r\n            const assignmentsToSend = [...a1, ...a2];\r\n            const toDosToSend = [...t1, ...t2];\r\n            setTrappedCategories(categoriesMutableCopy)\r\n            await Promise.all([\r\n                assignmentsToSend.length > 0 ? reorderAssignments(assignmentsToSend) : Promise.resolve(),\r\n                toDosToSend.length > 0 ? reorderToDos(toDosToSend) : Promise.resolve()\r\n            ])\r\n            setTrappedCategories(undefined)\r\n        } else {\r\n            const {movedAssignments, movedToDos} = handleResortSame(\r\n                result.draggableId, \r\n                result.source.droppableId, \r\n                result.destination!.index,\r\n                dispatch,\r\n                categoriesMutableCopy,\r\n                personId!\r\n            )\r\n            setTrappedCategories(categoriesMutableCopy)\r\n            await Promise.all([\r\n                movedAssignments.length > 0 ? reorderAssignments(movedAssignments) : Promise.resolve(),\r\n                movedToDos.length > 0 ? reorderToDos(movedToDos) : Promise.resolve()\r\n            ])\r\n            setTrappedCategories(undefined)\r\n        }\r\n    }\r\n\r\n    function onDragEnd(result: DropResult) {\r\n        let newCat: string | undefined = undefined;\r\n        let newIndex: number | undefined = undefined;\r\n\r\n        if (result.reason === 'DROP' && result.destination) {\r\n            if (result.destination.droppableId !== result.source.droppableId ) {\r\n                newCat = result.destination.droppableId\r\n                newIndex = result.destination.index\r\n            } else {\r\n                if (result.destination.index !== result.source.index ) {\r\n                    newIndex = result.destination.index\r\n                }\r\n            }\r\n        }\r\n        if (newIndex !== undefined) {\r\n            batch(getBatchedActions(result, newCat, dispatch, categories, personId!))\r\n        }\r\n    }\r\n\r\n    const strCategories = Array.from(categories.keys()) || []\r\n    return (\r\n        <LoadingGateway dataLoader={assignmentsLoader}>\r\n            <KanbanHeader categories={strCategories} />\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"kanban-container scrollbar\" ref={containerRef}>\r\n                    { \r\n                        Array.from(categories.keys())\r\n                            .sort((a, b) => {\r\n                                if (a === 'Complete') return 1\r\n                                if (b === 'Complete') return -1\r\n                                return 0\r\n                            })\r\n                            .map( (c, i) => <KanbanColumn \r\n                                                key={i} \r\n                                                category={c} \r\n                                                index={i} \r\n                                                items={categories.get(c) || []} \r\n                                                categories={strCategories} \r\n                                                fakeDragEvent={onDragEnd}\r\n                                            /> ) \r\n                    }\r\n                    {/* <AddAnotherList /> */}\r\n                </div>\r\n            </DragDropContext>\r\n            <Flex>\r\n                \r\n            </Flex>\r\n        </LoadingGateway>\r\n    )\r\n}\r\n\r\nexport default Assignments","export enum MODE {\n    NONE = 0,\n    MOVE = 1,\n    MOVE_RESIZE_LEFT = 2,\n    MOVE_RESIZE_RIGHT = 3\n}\n\nexport const BUFFER_DAYS = 30;\nexport const DATA_CONTAINER_WIDTH = 5000;\n\nexport enum VIEW_MODE {\n    DAY = 'day',\n    WEEK = 'week',\n    MONTH = 'month',\n    YEAR = 'year'\n}\n\nexport enum PIXELS_PER {\n    DAY_IN_YEAR_MODE = 4,\n    DAY_IN_MONTH_MODE = 24,\n    DAY_IN_WEEK_MODE = 480,\n    DAY_IN_DAY_MODE = 1440,\n    HOUR_IN_WEEK_MODE = 20,\n    HOUR_IN_DAY_MODE = 60\n}\n\nexport enum LINK_POS {\n    RIGHT = 'LINK_POS_RIGHT',\n    LEFT = undefined\n}\n","import { TimelineConfig } from \"components/gantt\";\nimport { PASTEL_COLORS } from \"layouts/management/assignments/ColorPicker\";\nimport React from \"react\";\n\nexport type DefaultStyleConfig = {\n  header: {\n    top: {\n      style: React.CSSProperties\n    },\n    middle: {\n      style: React.CSSProperties,\n      selectedStyle: React.CSSProperties\n    },\n    bottom: {\n      style: React.CSSProperties,\n      selectedStyle: React.CSSProperties\n    }\n  },\n  taskList: {\n    title: {\n      label: string;\n      style: React.CSSProperties\n    },\n    task: {\n      style: React.CSSProperties\n    },\n    verticalSeparator: {\n      style: React.CSSProperties\n      grip: {\n        style: React.CSSProperties\n      }\n    }\n  },\n  dataViewPort: {\n    rows: {\n      style: React.CSSProperties\n    },\n    task: {\n      showLabel: boolean,\n      style: React.CSSProperties,\n      selectedStyle: React.CSSProperties\n    }\n  },\n  links: {\n    color: React.CSSProperties['color'],\n    selectedColor: React.CSSProperties['color']\n  }\n}\n\nexport type StyleConfig = Partial<DefaultStyleConfig>;\n\nexport const defvalues: DefaultStyleConfig = {\n  header: {\n    top: {\n      style: {\n      }\n    },\n    middle: {\n      style: {\n      },\n      selectedStyle: {\n      }\n    },\n    bottom: {\n      style: {\n      },\n      selectedStyle: {\n      }\n    }\n  },\n  taskList: {\n    title: {\n      label: 'Projects',\n      style: {\n      }\n    },\n    task: {\n      style: {\n      }\n    },\n    verticalSeparator: {\n      style: {\n      },\n      grip: {\n        style: {\n        }\n      }\n    }\n  },\n  dataViewPort: {\n    rows: {\n      style: {\n      }\n    },\n    task: {\n      showLabel: false,\n\n      style: {\n        // position: 'absolute',\n        // borderRadius: 14,\n        // color: 'white',\n        // textAlign: 'center',\n        // backgroundColor: 'grey'\n      },\n      selectedStyle: {\n        // position: 'absolute',\n        // borderRadius: 14,\n        // border: 'solid 1px #ff00fa',\n        // color: 'white',\n        // textAlign: 'center',\n        // backgroundColor: 'grey'\n      }\n    }\n  },\n  links: {\n    color: 'black',\n    selectedColor: '#ff00fa'\n  }\n};\n\nclass Config {\n  private data: DefaultStyleConfig;\n\n  constructor() {\n    this.data = defvalues;\n  }\n\n  load = (values?: TimelineConfig) => {\n    this.data = {} as DefaultStyleConfig;\n    if (values) this.populate(values, defvalues, this.data);\n    else this.data = defvalues;\n  };\n\n  populate(values: Record<string, any>, defvalues: Record<string, any>, final: Record<string, any>) {\n    if (Object.prototype.toString.call(defvalues) !== '[object Object]') return;\n    for (const key in defvalues) {\n      if (!values?.[key]) {\n        //if not exits\n        final[key] = defvalues[key];\n      } else {\n        //if it does\n        final[key] = values[key];\n        this.populate(values[key], defvalues[key], final[key]);\n      }\n    }\n  }\n\n  get values() {\n    return this.data;\n  }\n}\n\nconst config = new Config();\nexport default config;\n","import React, { Component } from 'react';\nimport Config from '../../helpers/config/Config';\n\ninterface Props {\n  onTaskListSizing: (size: number)=>void\n}\n\ninterface State {\n  dragging: boolean\n}\n\nexport default class VerticalSplitter extends Component<Props, State> {\n  public draggingPosition?: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.doMouseMove = this.doMouseMove.bind(this);\n    this.doMouseDown = this.doMouseDown.bind(this);\n    this.doMouseUp = this.doMouseUp.bind(this);\n    this.state = { dragging: false };\n  }\n\n  doMouseDown(e: MouseEvent | React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button === 0) {\n      this.draggingPosition = e.clientX;\n      this.setState({ dragging: true });\n    }\n  }\n\n  componentDidUpdate(_props: Partial<Props>, state: State) {\n    if (this.state.dragging && !state.dragging) {\n      document.addEventListener('mousemove', this.doMouseMove);\n      document.addEventListener('mouseup', this.doMouseUp);\n    } else if (!this.state.dragging && state.dragging) {\n      document.removeEventListener('mousemove', this.doMouseMove);\n      document.removeEventListener('mouseup', this.doMouseUp);\n    }\n  }\n\n  doMouseMove(e: MouseEvent) {\n    if (this.state.dragging) {\n      e.stopPropagation();\n      if (!this.draggingPosition) return;\n      const delta = this.draggingPosition - e.clientX;\n      this.draggingPosition = e.clientX;\n      this.props.onTaskListSizing(delta);\n    }\n  }\n\n  doMouseUp(e: MouseEvent) {\n    this.setState({ dragging: false });\n  }\n\n  render() {\n    return (\n      <div className=\"verticalResizer\" style={Config.values.taskList.verticalSeparator.style} onMouseDown={this.doMouseDown}>\n        <div className=\"squareGrip\" style={Config.values.taskList.verticalSeparator.grip.style}></div>\n        <div className=\"squareGrip\" style={Config.values.taskList.verticalSeparator.grip.style}></div>\n        <div className=\"squareGrip\" style={Config.values.taskList.verticalSeparator.grip.style}></div>\n        <div className=\"squareGrip\" style={Config.values.taskList.verticalSeparator.grip.style}></div>\n      </div>\n    );\n  }\n}\n","import { Dayjs } from \"dayjs\";\n\nconst MIL_IN_HOUR = 1000 * 3600;\nclass DateHelper {\n  dateToPixel(input: string | number | Date, nowPosition: number, dayWidth: number) {\n    const nowDate = this.getToday(); //\n    const inputTime = new Date(input.toString());\n\n    //Day light saving patch\n    const lightSavingDiff = (inputTime.getTimezoneOffset() - nowDate.getTimezoneOffset()) * 60 * 1000;\n    const timeDiff = inputTime.getTime() - nowDate.getTime() - lightSavingDiff;\n    const pixelWeight = dayWidth / 24; //Value in pixels of one hour\n    return (timeDiff / MIL_IN_HOUR) * pixelWeight + nowPosition;\n  }\n\n  pixelToDate(position: number, nowPosition: number, dayWidth: number) {\n    const hoursInPixel = 24 / dayWidth;\n    const pixelsFromNow = position - nowPosition;\n    const today = this.getToday();\n    const milisecondsFromNow = today.getTime() + pixelsFromNow * hoursInPixel * MIL_IN_HOUR;\n    const result = new Date(milisecondsFromNow);\n    const lightSavingDiff = (result.getTimezoneOffset() - today.getTimezoneOffset()) * 60 * 1000;\n    result.setTime(result.getTime() + lightSavingDiff);\n    return result;\n  }\n\n  getToday() {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  monthDiff(start: Date, end: Date) {\n    return Math.abs(end.getMonth() - start.getMonth() + 12 * (end.getFullYear() - start.getFullYear()));\n  }\n\n  daysInMonth(month: number, year: number) {\n    return new Date(year, month, 0).getDate();\n  }\n\n  dayToPosition = (day: number, now: number, dayWidth: number) => {\n    return day * dayWidth + now;\n  };\n\n  daysInYear = (year: number) => {\n    return this.isLeapYear(year) ? 366 : 365;\n  };\n\n  isLeapYear(year: number) {\n    return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n  }\n}\n\nconst helper = new DateHelper();\nexport default helper;\n","import React, { FC } from 'react'\r\n\r\ninterface Props {\r\nleft: number;\r\nwidth: number;\r\nlabel: React.ReactNode;\r\nclassName?: string;\r\n}\r\n\r\nconst HeaderItem: FC<Props> = ({left, width, label, className}) => (\r\n    <div\r\n        className={['header-item', className || ''].join(' ')}\r\n        style={{\r\n            left,\r\n            width\r\n        }}\r\n    >\r\n        <div>{label}</div>\r\n    </div>\r\n);\r\n\r\nexport default HeaderItem;","import React, { Component } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport { DATA_CONTAINER_WIDTH, VIEW_MODE } from '../../Const';\nimport Config from '../../helpers/config/Config';\nimport DateHelper from '../../helpers/DateHelper';\nimport './Header.css';\nimport HeaderItem from './HeaderItem';\ndayjs.extend(weekOfYear);\ndayjs.extend(advancedFormat);\n\ntype HeaderDef = {left: number, width: number, label: string, key: string | number, time?: undefined} | {left: number, time: 'shortTime' | 'fullTime', width: number, key: string | number, label?: string }\n\ninterface Props {\n  renderHourLabel?: (hour: number, mode: string)=>React.ReactNode;\n  mainViewportHeight: number;\n  mainViewportWidth: number;\n  dayWidth: number;\n  nowPosition: number;\n  currentDay: number;\n  numVisibleDays: number;\n  mode: VIEW_MODE;\n  scrollLeft: number;\n  children: (weekends: {left: number, width: number}[])=>React.ReactNode;\n}\n\ninterface State {\n  cache?: { \n    top: HeaderDef[], \n    middle: HeaderDef[], \n    bottom: HeaderDef[], \n    weekends: any[], \n    start: number, \n    end: number, \n    refreshLow: number,\n    refreshHi: number,\n    boxStart: number, \n    boxWidth: number \n  }\n}\n\nexport default class Header extends Component<Props, State> {\n  private hours = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n  private renderHourLabel: (hour: number, mode: string)=>React.ReactNode = (hour, mode) => mode == 'shorttime' ? hour : `${hour}:00`;\n  headerRef: React.RefObject<HTMLDivElement>\n  private buffer = 400;\n\n  constructor(props: Props) {\n    super(props);\n    // this.setBoundaries();\n    if (this.props.renderHourLabel) this.renderHourLabel = this.props.renderHourLabel\n    this.headerRef = React.createRef()\n    this.state = {cache: this.getNewCache()}\n  }\n\n  private dateFormat = {\n    year: 'YYYY',\n    month: 'MMMM',\n    shortMonth: \"MMM\",\n    monthTop: 'MMMM YYYY',\n    week: 'ww',\n    weekTop: 'ww MMMM YYYY',\n    weekday: 'dd',\n    monthDate: 'D',\n    shortTime: undefined,\n    fullTime: undefined\n  } as const\n\n  private topLabels: Record<string, string|undefined> = {\n    month: 'monthTop',\n    week: 'weekTop'\n  }\n\n  getModeIncrement(date: Dayjs, mode: VIEW_MODE | string) {\n    switch (mode) {\n      case 'year':\n        return DateHelper.daysInYear(date.year());\n      case 'shortMonth':\n      case 'month':\n        return date.daysInMonth();\n      case 'week':\n        return 7;\n      case 'weekend':\n        return 2;\n      case 'weekdays':\n        return 5;\n      default:\n        return 1;\n    }\n  }\n\n  getStartDate = (date: Dayjs, mode: VIEW_MODE | string ) => {\n    switch (mode) {\n      case 'year': \n        return date.month(0).date(1);\n      case 'month':\n      case 'shortMonth':\n        return date.date(1);\n      case 'week':\n        return date.day(0);\n      case 'weekdays':\n        return date.day(1);\n      case 'weekend':\n        return date.day(0).subtract(1, 'day')\n      default:\n        return date;\n    }\n  };\n\n  renderTime = (left: number, width: number, mode: string, key: string | number) => (\n    <div key={key} style={{ position: 'absolute', height: 20, left: left, width: width }}>\n      {' '}\n      {this.hours.map( (h) => <HeaderItem key={h} left={ width / 24 * h} width={width/24} label={this.renderHourLabel(h, mode)} />)}\n    </div>\n  );\n\n  getBox(date: Dayjs, mode: VIEW_MODE | string, lastLeft?: number) {\n    let increment = this.getModeIncrement( date, mode );\n    if (!lastLeft) {\n      const startDate = this.getStartDate(date, mode).startOf('day');\n      const now = dayjs().startOf('day');\n      const daysInBetween = startDate.diff(now, 'day');\n      lastLeft = DateHelper.dayToPosition(daysInBetween, this.props.nowPosition, this.props.dayWidth);\n    }\n    increment = increment * this.props.dayWidth;\n    return { left: lastLeft, width: increment };\n  }\n\n  refreshCache() {\n    const result = this.getNewCache()\n    this.setState({cache: result})\n\n    this.reloads ++\n    console.log('reloads ' + this.reloads)  \n  }\n\n  getNewCache() {\n    let top: 'week' | 'month' | 'year';\n    let middle: 'weekday' | 'month' | 'shortMonth';\n    let bottom: 'fullTime' | 'shortTime' | 'monthDate' | 'week';\n\n    switch (this.props.mode) {\n      case VIEW_MODE.DAY:\n        top = 'week'\n        middle = 'weekday'\n        bottom = 'fullTime'\n        break;\n      case VIEW_MODE.WEEK:\n        top = 'week'\n        middle = 'weekday'\n        bottom = 'shortTime'\n        break;\n      case VIEW_MODE.MONTH:\n        top = 'month'\n        middle ='weekday'\n        bottom ='monthDate'\n        break;\n      case VIEW_MODE.YEAR:\n        top = 'year'\n        middle = this.props.dayWidth > 2 ? 'month' : 'shortMonth'\n        bottom ='week'\n        break;\n    }\n\n    const bufferZone = this.buffer * 3\n    const start = 0 - bufferZone;\n    const end = this.props.mainViewportWidth + bufferZone\n    \n    const refreshLow = this.props.nowPosition - bufferZone\n    const refreshHi = this.props.nowPosition + bufferZone\n\n    const result = { \n      top: [] as HeaderDef[], \n      middle: [] as HeaderDef[], \n      bottom: [] as HeaderDef[], \n      weekends: [] as React.ReactNode[], \n      start, \n      end, \n      refreshLow,\n      refreshHi,\n      boxStart: start - this.buffer, \n      boxWidth: this.props.mainViewportWidth + bufferZone * 2 + this.buffer * 2\n    }\n\n    const lastLeft = {} as {top?: number, middle?: number, bottom?: number, weekends?: number;};\n    let currentTop = '';\n    let currentMiddle = '';\n    let currentBottom = '';\n    let box = null;\n\n    const firstDay = DateHelper.pixelToDate( result.boxStart, this.props.nowPosition, this.props.dayWidth )\n    const lastDay = DateHelper.pixelToDate( result.boxStart + result.boxWidth, this.props.nowPosition, this.props.dayWidth )\n    // const startDay = this.props.currentDay;\n    // const endDay = this.props.currentDay + this.props.numVisibleDays;\n\n    let i = 0\n    let currentDate = dayjs(firstDay).startOf('day')\n    while (currentDate.isBefore(lastDay)) {\n      //The unit of iteration is day\n      const topVal = currentDate.format(this.dateFormat[ (this.topLabels[top] as 'monthTop' | 'weekTop' | undefined) || top ])\n      if (currentTop !== topVal) {\n        currentTop = topVal;\n        box = this.getBox(currentDate, top, lastLeft.top);\n        lastLeft.top = box.left + box.width;\n        const base = this.props.nowPosition\n        const left = box.left;\n        const width = box.width;\n        const key = i;\n        result.top.push({left: left - base, width, key, label: currentTop});\n      }\n      const middleVal = currentDate.format(this.dateFormat[middle])\n      if ( currentMiddle !== middleVal ) {\n        currentMiddle = middleVal;\n        box = this.getBox(currentDate, middle, lastLeft.middle);\n        lastLeft.middle = box.left + box.width;\n        const base = this.props.nowPosition\n        const left = box.left;\n        const width = box.width;\n        const key = i;\n        result.middle.push({left: left - base, width, key, label: currentMiddle});\n      }\n      const bottomVal = currentDate.format(this.dateFormat[bottom])\n      if (currentBottom !== bottomVal) {\n        currentBottom = bottomVal;\n        box = this.getBox(currentDate, bottom, lastLeft.bottom);\n        lastLeft.bottom = box.left + box.width;\n        const base = this.props.nowPosition\n        const left = box.left;\n        const width = box.width;\n        const key = i;\n        if ((bottom === 'shortTime' || bottom === 'fullTime') && this.props.dayWidth > 700) {\n          result.bottom.push({time: bottom, left: left, width, key});\n        } else {\n          result.bottom.push({left: left - base, width, key, label: currentBottom});\n        }\n      }\n\n      const weekday = currentDate.day()\n      if ( weekday === 6 ) {\n        box = this.getBox(currentDate, 'weekdays', lastLeft.weekends);\n        lastLeft.weekends = box.left + box.width;\n      } else if (weekday === 0) {\n        box = this.getBox(currentDate, 'weekend', lastLeft.weekends);\n        const base = this.props.nowPosition \n        const left = box.left;\n        const width = box.width;\n        lastLeft.weekends = box.left + box.width;\n        result.weekends.push({left: left - base, width: width});\n      }\n      i++\n      currentDate = currentDate.add(1, 'day')\n    }\n\n    return result\n    \n  }\n\n  private reloads = 0;\n\n  componentDidUpdate(prevProps: Props) {\n    const noCache = !this.state?.cache\n    if (noCache) {\n      this.refreshCache()\n    } else {\n      const outRangeStart = this.state.cache!.refreshLow > this.props.nowPosition\n      const outRangeEnd = this.state.cache!.refreshHi < this.props.nowPosition\n      if ( outRangeStart || outRangeEnd || prevProps.dayWidth !== this.props.dayWidth ) {\n          this.refreshCache()\n        }\n    }\n    }\n    \n\n  // setBoundaries = () => {\n  //   this.start = this.props.currentDay - BUFFER_DAYS;\n  //   this.end = this.props.currentDay + this.props.numVisibleDays + BUFFER_DAYS;\n  // };\n\n  // needToRender = () => {\n  //   return this.props.currentDay < this.start || this.props.currentDay + this.props.numVisibleDays > this.end;\n  // };\n\n  render() {\n    // if (this.headerRef.current) this.headerRef.current.scrollLeft = this.props.scrollLeft;\n    //Check boundaries to see if wee need to recalcualte header\n    // if (this.needToRender()|| !this.cache){\n    //     this.cache=this.renderHeader();\n    //     this.setBoundaries();\n    // }\n\n    return (\n      <>\n        <div id=\"timeline-header\" ref={this.headerRef} className=\"timeLine-main-header-viewPort\">\n          <div \n            className=\"timeLine-main-header-container\" \n            style={{ width: DATA_CONTAINER_WIDTH, maxWidth: DATA_CONTAINER_WIDTH }}\n          >\n            <div className=\"header-top\" style={{ ...Config.values.header.top.style }}>\n              {this.state.cache?.top.map(o=>\n                <HeaderItem \n                  key={o.key} \n                  left={o.left + this.props.nowPosition}\n                  width={o.width}\n                  label={o.label}\n                />\n              )}\n            </div>\n            <div className=\"header-middle\" style={{ ...Config.values.header.middle.style }}>\n              {this.props.dayWidth > 0.85 && this.state.cache?.middle.map(o=>\n                <HeaderItem \n                  key={o.key} \n                  left={o.left + this.props.nowPosition}\n                  width={o.width}\n                  label={o.label}\n                />\n              )}\n            </div>\n            <div className=\"header-bottom\" style={{ ...Config.values.header.bottom.style }}>\n              {this.props.dayWidth > 2 && this.state.cache?.bottom.map(o=>\n                o.time ?\n                this.renderTime(o.left + this.props.nowPosition, o.width, o.time, o.key)\n                : <HeaderItem \n                  key={o.key} \n                  left={o.left + this.props.nowPosition}\n                  width={o.width}\n                  label={o.label}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        { this.props.children(this.state.cache?.weekends) }\n        \n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport DateHelper from '../../helpers/DateHelper';\nimport { MODE, LINK_POS } from '../../Const';\nimport Config from '../../helpers/config/Config';\nimport { ITask } from '../../.';\n\n\ninterface Props {\n  left: number;\n  width: number;\n  height: number;\n  dayWidth: number;\n  onStartCreateLink: (item: ITask, position: LINK_POS)=>void\n  onFinishCreateLink: (item: ITask, position: LINK_POS)=>void\n  item: ITask;\n  onChildDrag: (dragging: boolean)=>void;\n  onUpdateTask?: (item: ITask, update: {start: Date, end: Date})=>void\n  onTaskChanging: (changeObject: {item: ITask, position: {start: number, end: number}})=>void\n  onSelectItem: (item: ITask)=>void;\n  nowPosition: number;\n  isSelected: boolean;\n  color?: string;\n}\n\ninterface State {\n  dragging: boolean;\n  mode: MODE;\n  left: number;\n  width: number;\n}\n\nexport default class DataTask extends Component<Props, State> {\n  draggingPosition?: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.calculateStyle = this.calculateStyle.bind(this);\n    this.state = { dragging: false, left: this.props.left, width: this.props.width, mode: MODE.NONE };\n  }\n\n  onCreateLinkMouseDown = ( e: React.MouseEvent<HTMLDivElement, MouseEvent>, position: LINK_POS ) => {\n    if ( e.button === 0 ) {\n      e.stopPropagation();\n      this.props.onStartCreateLink(this.props.item, position);\n    }\n  };\n  onCreateLinkMouseUp = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, position: LINK_POS) => {\n    e.stopPropagation();\n    this.props.onFinishCreateLink(this.props.item, position);\n  };\n  onCreateLinkTouchStart = (e: React.TouchEvent<HTMLDivElement>, position: LINK_POS) => {\n    if (e.touches.length === 2) {\n      e.stopPropagation();\n      this.props.onStartCreateLink(this.props.item, position);\n    }\n  };\n  onCreateLinkTouchEnd = (e: React.TouchEvent<HTMLDivElement>, position: LINK_POS) => {\n    e.stopPropagation();\n    this.props.onFinishCreateLink(this.props.item, position);\n  };\n\n  componentDidUpdate(props: Partial<Props>, state: State) {\n    if (this.state.dragging && !state.dragging) {\n      document.addEventListener('mousemove', this.doMouseMove);\n      document.addEventListener('mouseup', this.doMouseUp);\n      document.addEventListener('touchmove', this.doTouchMove);\n      document.addEventListener('touchend', this.doTouchEnd);\n    } else if (!this.state.dragging && state.dragging) {\n      document.removeEventListener('mousemove', this.doMouseMove);\n      document.removeEventListener('mouseup', this.doMouseUp);\n      document.removeEventListener('touchmove', this.doTouchMove);\n      document.removeEventListener('touchend', this.doTouchEnd);\n    }\n  }\n\n  dragStart(x: number, mode: MODE) {\n    this.props.onChildDrag(true);\n    this.draggingPosition = x;\n    this.setState({\n      dragging: true,\n      mode: mode,\n      left: this.props.left,\n      width: this.props.width\n    });\n  }\n\n  dragProcess(x: number) {\n    if (!this.draggingPosition) return\n    const delta = this.draggingPosition - x;\n    let newLeft = this.state.left!;\n    let newWidth = this.state.width!;\n\n    switch (this.state.mode) {\n      case MODE.MOVE:\n        newLeft = this.state.left! - delta;\n        break;\n      case MODE.MOVE_RESIZE_LEFT:\n        newLeft = this.state.left! - delta;\n        newWidth = this.state.width! + delta;\n        break;\n      case MODE.MOVE_RESIZE_RIGHT:\n        newWidth = this.state.width! - delta;\n        break;\n    }\n    //the coordinates need to be global\n    const changeObj = {\n      item: this.props.item,\n      position: { start: newLeft - this.props.nowPosition, end: newLeft + newWidth - this.props.nowPosition }\n    };\n    this.props.onTaskChanging(changeObj);\n    this.setState({ left: newLeft, width: newWidth });\n    this.draggingPosition = x;\n  }\n  dragEnd() {\n    this.props.onChildDrag(false);\n    const new_start_date = DateHelper.pixelToDate(this.state.left!, this.props.nowPosition, this.props.dayWidth);\n    const new_end_date = DateHelper.pixelToDate(this.state.left! + this.state.width!, this.props.nowPosition, this.props.dayWidth);\n    this.props.onUpdateTask && this.props.onUpdateTask(this.props.item, { start: new_start_date, end: new_end_date });\n    this.setState({ dragging: false, mode: MODE.NONE });\n  }\n\n  doMouseDown = (e: MouseEvent | React.MouseEvent<HTMLDivElement>, mode: MODE) => {\n    if (!this.props.onUpdateTask) return;\n    if (e.button === 0) {\n      e.stopPropagation();\n      this.dragStart(e.clientX, mode);\n    }\n  };\n\n  doMouseMove = (e: MouseEvent | React.MouseEvent<HTMLDivElement>) => {\n    if (this.state.dragging) {\n      e.stopPropagation();\n      this.dragProcess(e.clientX);\n    }\n  };\n\n  doMouseUp = () => {\n    this.dragEnd();\n  };\n\n  doTouchStart = (e: TouchEvent | React.TouchEvent<HTMLDivElement>, mode: MODE) => {\n    if (!this.props.onUpdateTask) return;\n    e.stopPropagation();\n    this.dragStart(e.touches[0].clientX, mode);\n  };\n  doTouchMove = (e: TouchEvent | React.TouchEvent<HTMLDivElement>) => {\n    if (this.state.dragging) {\n      e.stopPropagation();\n      this.dragProcess(e.changedTouches[0].clientX);\n    }\n  };\n  doTouchEnd = (e: TouchEvent | React.TouchEvent<HTMLDivElement>) => {\n    this.dragEnd();\n  };\n\n  calculateStyle() {\n    const configStyle = this.props.isSelected ? Config.values.dataViewPort.task.selectedStyle : Config.values.dataViewPort.task.style;\n    const backgroundColor = this.props.color || configStyle.backgroundColor;\n    const borderColor = this.props.item.borderColor || configStyle.borderColor;\n\n    if (this.state.dragging) {\n      return {\n        ...configStyle,\n        borderColor,\n        backgroundColor: backgroundColor,\n        left: this.state.left,\n        width: this.state.width,\n        height: this.props.height - 5,\n        top: 2\n      };\n    } else {\n      return { \n        ...configStyle,\n        borderColor,\n        backgroundColor, \n        left: this.props.left, \n        width: this.props.width, \n        height: this.props.height - 5, \n        top: 2 \n      };\n    }\n  }\n\n  render() {\n    const style = this.calculateStyle();\n    return (\n      <div\n        className={\"gantt-task rounded\" + (this.props.isSelected ? \" selected\" : '')}\n        onMouseDown={(e) => this.doMouseDown(e, MODE.MOVE)}\n        onTouchStart={(e) => this.doTouchStart(e, MODE.MOVE)}\n        onClick={(e) => {\n          this.props.onSelectItem(this.props.item);\n        }}\n        style={style}\n      >\n        <div\n          className=\"timeLine-main-data-task-side\"\n          style={{ top: 0, left: -8, height: style.height }}\n          onMouseDown={(e) => this.doMouseDown(e, MODE.MOVE_RESIZE_LEFT)}\n          onTouchStart={(e) => this.doTouchStart(e, MODE.MOVE_RESIZE_LEFT)}\n        >\n          <div\n            className=\"timeLine-main-data-task-side-linker\"\n            onMouseUp={(e) => this.onCreateLinkMouseUp(e, LINK_POS.LEFT)}\n            onTouchEnd={(e) => this.onCreateLinkTouchEnd(e, LINK_POS.LEFT)}\n          />\n        </div>\n        <div style={{ overflow: 'hidden' }}>{this.props.item.label}</div>\n        <div\n          className=\"timeLine-main-data-task-side\"\n          style={{ top: 0, left: style.width - 8, height: style.height }}\n          onMouseDown={(e) => this.doMouseDown(e, MODE.MOVE_RESIZE_RIGHT)}\n          onTouchStart={(e) => this.doTouchStart(e, MODE.MOVE_RESIZE_RIGHT)}\n        >\n          <div\n            className=\"timeLine-main-data-task-side-linker\"\n            onMouseDown={(e) => this.onCreateLinkMouseDown(e, LINK_POS.RIGHT)}\n            onTouchStart={(e) => this.onCreateLinkTouchStart(e, LINK_POS.RIGHT)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {FC} from 'react'\r\nimport Config from '../../helpers/config/Config';\r\n\r\ninterface Props {\r\n    left: number;\r\n    top: number;\r\n    itemHeight: number;\r\n    style: React.CSSProperties;\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const DataRow: FC<Props>  = ({left, top, itemHeight, style, children}) => (\r\n<div\r\n    className=\"timeLine-main-data-row\"\r\n    style={{ \r\n        ...Config.values.dataViewPort.rows.style, \r\n        ...style,\r\n        top: top, \r\n        height: itemHeight \r\n    }}\r\n>\r\n    {children}\r\n</div>\r\n);\r\n\r\nexport default DataRow;","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { DATA_CONTAINER_WIDTH, LINK_POS, MODE } from '../../Const';\nimport DataTask from '../../components/viewport/DataTask';\nimport DateHelper from '../../helpers/DateHelper';\nimport sizeMe from 'react-sizeme';\nimport DataRow from './DataRow';\nimport { ILink, ITask } from '../../.';\n\ntype MouseHandlerWithViewport = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, viewPort: React.RefObject<HTMLDivElement>)=>void;\ntype TouchHandlerWithViewport = (event: React.TouchEvent<HTMLDivElement>, viewPort: React.RefObject<HTMLDivElement>)=>void;\n\ninterface Props {\n  ref: React.RefObject<HTMLDivElement>\n  startRow: number;\n  endRow: number;\n  itemHeight: number;\n  data: ITask[]\n  nowPosition: number;\n  dayWidth: number;\n  selectedItems?: (ITask | ILink)[];\n  onSelectItem: (item: ITask)=>void;\n  onStartCreateLink: (item: ITask, position: LINK_POS)=>void\n  onFinishCreateLink: (item: ITask, position: LINK_POS)=>void\n  onTaskChanging: (changeObject: {item: ITask, position: {start: number, end: number}})=>void\n  onUpdateTask?: (item: ITask, update: Partial<ITask>)=>void\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>;\n  onMouseDown: (e: React.MouseEvent<any, MouseEvent>, mode: MODE, task?: ITask)=>void;\n  onMouseLeave: React.MouseEventHandler<HTMLDivElement>;\n  onMouseMove: MouseHandlerWithViewport;\n  onTouchStart: React.TouchEventHandler<HTMLDivElement>;\n  onTouchMove: TouchHandlerWithViewport;\n  onTouchEnd: React.TouchEventHandler<HTMLDivElement>;\n  onTouchCancel: React.TouchEventHandler<HTMLDivElement>;\n  scrollLeft: number;\n  scrollTop: number;\n  boundaries: any;\n  height: number;\n  weekends: {left: number, width: number}[];\n  shouldLink?: boolean;\n}\n\nconst _DataViewPort: FC<Props> = ({\n  startRow,\n  endRow,\n  itemHeight,\n  data,\n  nowPosition,\n  dayWidth,\n  selectedItems,\n  onSelectItem,\n  onStartCreateLink,\n  onFinishCreateLink,\n  onTaskChanging,\n  onUpdateTask,\n  onMouseUp,\n  onMouseLeave,\n  onTouchEnd,\n  onMouseDown,\n  onMouseMove,\n  onTouchMove,\n  onTouchStart,\n  onTouchCancel,\n  scrollLeft,\n  scrollTop,\n  boundaries: _toFixPaint,\n  height,\n  weekends,\n  shouldLink\n}) => {\n    const [childDragging, setChildDragging] = useState(false)\n    const ref = useRef<HTMLDivElement>(null)\n    const [linkMode, setLinkMode] = useState('link-inactive');\n    useEffect(() => {\n      ref.current && (ref.current.scrollLeft = 0);\n    }, [ref.current])\n\n    if (ref.current) {\n      ref.current.scrollLeft = 0;\n      ref.current.scrollTop = scrollTop;\n    }\n\n    function handleMouseLeave(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n      if (e.ctrlKey) {\n        setLinkMode('link-inactive')\n      }\n      onMouseLeave(e)\n    }\n\n    function handleMouseEnter(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n      if (e.ctrlKey) {\n        setLinkMode('link-active')\n      }\n    }\n\n    function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement> ) {\n      if (e.ctrlKey) {\n        setLinkMode('link-active')\n      }\n    }\n\n    function handleKeyUp(e: React.KeyboardEvent<HTMLDivElement> ) {\n      if (!e.ctrlKey) {\n        setLinkMode('link-inactive')\n      }\n    }\n\n\n\n    return (\n      <div\n        ref={ref}\n        id=\"timeLinedataViewPort\"\n        className={\"timeLine-main-data-viewPort \" + (shouldLink ? 'link-active' : 'link-inactive')}\n        onMouseDown={e => e.button === 0 && !childDragging && onMouseDown(e, MODE.NONE)}\n        onMouseMove={e => onMouseMove(e, ref)}\n        onMouseUp={onMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        onTouchStart={e=> !childDragging && onTouchStart(e) }\n        onTouchMove={e=>onTouchMove(e, ref)}\n        onTouchEnd={onTouchEnd}\n        onTouchCancel={onTouchCancel}\n      >\n        <div\n          className=\"timeLine-main-data-container\"\n          style={{ height, width: DATA_CONTAINER_WIDTH, maxWidth: DATA_CONTAINER_WIDTH }}\n        >\n          { weekends?.map( (style, i) => <div className=\"weekend-marker\" key={i} style={{height, zIndex: 2, left: style.left + nowPosition, width: style.width }} /> ) }\n          {data?.map( (item, i) => {\n            const new_position = DateHelper.dateToPixel(item.start, nowPosition, dayWidth);\n            const new_width = DateHelper.dateToPixel(item.end, nowPosition, dayWidth) - new_position;\n            return (\n              <DataRow key={item.id} top={i * itemHeight} left={20} itemHeight={itemHeight} style={item.rowStyle}>\n                <DataTask\n                  item={item}\n                  nowPosition={nowPosition}\n                  dayWidth={dayWidth}\n                  color={item.color}\n                  left={new_position}\n                  width={new_width}\n                  height={itemHeight}\n                  onChildDrag={setChildDragging}\n                  isSelected={!!selectedItems?.find(i => i.id === item.id)}\n                  onSelectItem={onSelectItem}\n                  onStartCreateLink={onStartCreateLink}\n                  onFinishCreateLink={onFinishCreateLink}\n                  onTaskChanging={onTaskChanging}\n                  onUpdateTask={onUpdateTask}\n                />\n              </DataRow>\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n\nconst DataViewPort = sizeMe({ monitorWidth: true, monitorHeight: true })(_DataViewPort);\nexport default DataViewPort;","import { ILink, IPosition } from '../../index';\nimport React, { Component, FC } from 'react';\nimport Config from '../../helpers/config/Config';\n\nconst SSHAPE_SIDE_WIDTH = 20;\n\ninterface Props {\n  start: {x: number, y: number};\n  end: {x: number, y: number};\n  onSelectItem?: (item: ILink)=>void;\n  item?: ILink;\n  isSelected?: boolean;\n  onDoubleClick?: (link: ILink)=>void\n}\n\nfunction calcNormCoordinates(start: IPosition, end: IPosition)  {\n  const middle = start.x + (end.x - start.x) / 2;\n  const cpt1 = { x: middle, y: start.y };\n  const cpt2 = { x: middle, y: end.y };\n  return { cpt1, cpt2 };\n}\n\nfunction calcSCoordinates (start: IPosition, end: IPosition) {\n  const cpt1 = { x: start.x + SSHAPE_SIDE_WIDTH, y: start.y };\n  const halfY = (end.y - start.y) / 2;\n  const cpt2 = { x: cpt1.x, y: cpt1.y + halfY };\n  const cpt3 = { x: end.x - SSHAPE_SIDE_WIDTH, y: cpt2.y };\n  const cpt4 = { x: cpt3.x, y: cpt3.y + halfY };\n  return { cpt1, cpt2, cpt3, cpt4 };\n}\n\nfunction getPath (start: IPosition, end: IPosition) {\n  if (start.x > end.x) {\n    const coordinates = calcSCoordinates(start, end);\n    return \"M\" + [\n      start.x,\n      start.y,\n      coordinates.cpt1.x,\n      coordinates.cpt1.y,\n      coordinates.cpt2.x,\n      coordinates.cpt2.y,\n      coordinates.cpt3.x,\n      coordinates.cpt3.y,\n      coordinates.cpt4.x,\n      coordinates.cpt4.y,\n      end.x,\n      end.y\n    ].join(' ');\n  } else {\n    const coordinates = calcNormCoordinates(start, end);\n    return \"M\" + [\n      start.x,\n      start.y,\n      coordinates.cpt1.x,\n      coordinates.cpt1.y,\n      coordinates.cpt2.x,\n      coordinates.cpt2.y,\n      end.x,\n      end.y\n    ].join(' ');\n  }\n}\nconst Link: FC<Props> = ({start, end, onSelectItem, item, isSelected, onDoubleClick}) => {\n  const handleSelect = (e: React.MouseEvent<SVGPathElement, MouseEvent>) => {\n    if (onSelectItem && item) onSelectItem(item);\n  };\n\n  const handleDoubleClick = (e: React.MouseEvent<SVGPathElement, MouseEvent>) => {\n    if (onDoubleClick && item) onDoubleClick(item);\n  }\n\n  const path = getPath(start, end)\n    return (\n      <g className=\"timeline-link\">\n        <path\n          className={\"gantt-connector-outline\" + (isSelected ? ' selected' : '')}\n          pointerEvents=\"stroke\"\n          onMouseDown={handleSelect}\n          onDoubleClick={handleDoubleClick}\n          d={path}\n          strokeLinejoin=\"round\"\n          fill=\"transparent\"\n          cursor=\"pointer\"\n        />\n\n        <path\n          className={\"gantt-connector\" + (isSelected ? ' selected' : '')}\n          pointerEvents=\"stroke\"\n          onMouseDown={handleSelect}\n          onDoubleClick={handleDoubleClick}\n          d={path}\n          strokeLinejoin=\"round\"\n          fill=\"transparent\"\n          cursor=\"pointer\"\n          markerEnd=\"url(#arrow)\"\n        />\n\n        {/* <circle cx={this.props.start.x} \n                    cy={this.props.start.y} r=\"3\" fill='white'  \n                    stroke={pathColor} strokeWidth=\"1\" />     */}\n      </g>\n    );\n  }\n\nexport default Link;\n","import { DataRegistryItem, ITask } from 'components/gantt';\nimport { LINK_POS } from 'components/gantt/Const';\nimport React, { Component } from 'react';\nimport Link from './Link';\n\ninterface Props {\n  start: {x: number, y: number};\n  record: DataRegistryItem;\n  onFinishCreateLink: (task: ITask, position: LINK_POS)=>void;\n}\n\ninterface State {\n  x: number,\n  y: number\n}\n\nexport default class CreateLink extends Component<Props, State> {\n  init: boolean;\n  lastX: number;\n  lastY: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { x: this.props.start.x, y: this.props.start.y };\n    this.init = false;\n    this.lastX = -1;\n    this.lastY = -1;\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.doMouseMove);\n    document.addEventListener('mouseup', this.doMouseUp);\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.doMouseMove);\n    document.removeEventListener('mouseup', this.doMouseUp);\n  }\n\n  doMouseMove = (e: MouseEvent) => {\n    if (!this.init) {\n      this.lastX = e.clientX;\n      this.lastY = e.clientY;\n      this.init = true;\n    }\n    const newX = this.state.x + (e.clientX - this.lastX);\n    const newY = this.state.y + (e.clientY - this.lastY);\n    this.lastX = e.clientX;\n    this.lastY = e.clientY;\n    this.setState({ x: newX, y: newY });\n  };\n\n  doMouseUp = (e: MouseEvent) => {\n    this.props.onFinishCreateLink(this.props.record.item, LINK_POS.LEFT/* {start: {...this.props.start}, end: {...this.state}} */);\n  };\n\n  render() {\n    return <Link key={-1} start={{...this.props.start}} end={{...this.state}} />;\n  }\n}\n","import React, {  FC, useEffect, useState } from 'react';\nimport Registry from '../../helpers/registry/Registry';\nimport Link from './Link';\nimport CreateLink from './CreateLink';\nimport DateHelper from '../../helpers/DateHelper';\nimport { ILink, ITask } from '../../index';\nimport { LINK_POS } from 'components/gantt/Const';\n\ninterface Props {\n  selectedItems?: (ILink | ITask)[];\n  onSelectItem: (item: ILink | ITask)=>void;\n  dayWidth: number;\n  itemHeight: number;\n  links: ILink[];\n  data: ITask[];\n  interactiveMode?: boolean;\n  taskToCreate: {task: ITask, position: LINK_POS} | null;\n  onFinishCreateLink: (task: ITask, position: LINK_POS)=>void;\n  changingTask?: {\n    item: ITask,\n    position: {\n      start: number,\n      end: number\n    }\n  } | null;\n  scrollLeft: number;\n  nowPosition: number;\n  scrollTop: number;\n  onDoubleClickLink?: (e: ILink)=>void;\n  registry: Registry;\n}\n\nconst LinkViewPort: FC<Props> = ({\n  selectedItems,\n  onSelectItem,\n  dayWidth,\n  itemHeight,\n  links,\n  data,\n  interactiveMode,\n  taskToCreate,\n  onFinishCreateLink,\n  changingTask,\n  scrollLeft,\n  nowPosition,\n  scrollTop,\n  onDoubleClickLink,\n  registry\n}) => {\n    const [cache, setCache] = useState<React.ReactNode[]>([])\n\n    function getItemPosition (index: number, date: string | number | Date) {\n      const x = DateHelper.dateToPixel(date, 0, dayWidth);\n      const y = index * itemHeight + itemHeight / 2;\n      return { x: x, y: y }\n    }\n\n    function renderCreateLink () {\n      if (interactiveMode) {\n        const record = registry.getTask(taskToCreate?.task.id);\n        if (!record) return console.log('Failed to create link. Missing task in registry.')\n        const position = getItemPosition(record.index, record.item.end);\n        return <CreateLink \n                  start={position} \n                  record={record} \n                  onFinishCreateLink={onFinishCreateLink} \n                />\n      }\n    }\n\n    useEffect(() => {\n      if ( links && data ) {\n        const cache = [] as React.ReactNode[];\n        if (data.length == 0) return;\n        links.forEach( (link, i) => {\n          if (!link) return;\n          const startItem = registry.getTask(link.start);\n          if (!startItem) {\n            cache.push(null);\n            return;\n          }\n          const endItem = registry.getTask(link.end);\n          if (!endItem) {\n            cache.push(null);\n            return;\n          }\n\n          const startPosition = getItemPosition(startItem.index, startItem.item.end);\n          const endPosition = getItemPosition(endItem.index, endItem.item.start);\n          cache.push(\n            <Link\n              key={link.id}\n              item={link}\n              start={{ x: startPosition.x, y: startPosition.y }}\n              end={{ x: endPosition.x, y: endPosition.y }}\n              isSelected={!!selectedItems?.find( i => i.id === link.id ) }\n              onSelectItem={onSelectItem}\n              onDoubleClick={onDoubleClickLink}\n            />\n          );\n        })\n        setCache(cache)\n      }\n    }, [selectedItems, dayWidth, links, data, itemHeight])\n\n    useEffect(() => {\n\n      const links = registry.getLinks(changingTask?.item.id);\n      if (!links) return;\n\n      links.forEach( (item, i) => {\n\n        const startItem = registry.getTask(item.link.start);\n        if (!startItem) return;\n\n        const endItem = registry.getTask(item.link.end);\n        if (!endItem) return;\n\n        const startPosition = getItemPosition(startItem.index, startItem.item.end);\n        if (changingTask!.item.id === item.link.start) startPosition.x = changingTask!.position.end;\n\n        const endPosition = getItemPosition(endItem.index, endItem.item.start);\n        if (changingTask!.item.id === item.link.end) endPosition.x = changingTask!.position.start;\n\n        setCache( prev => {\n          const cache = [...prev];\n          cache[item.index] = (\n            <Link\n              key={-i - 1}\n              item={item.link}\n              start={{ x: startPosition.x, y: startPosition.y }}\n              end={{ x: endPosition.x, y: endPosition.y }}\n              isSelected={ !!selectedItems?.find( i => i.id === item.link.id ) }\n              onSelectItem={ onSelectItem }\n            />\n          )\n          return cache\n        })\n      })\n\n    }, [changingTask])\n\n    return (\n      <svg x={0} y={0} width=\"100%\" pointerEvents=\"none\" style={{userSelect: 'none', height: '100%' }} className=\"timeline-link-viewport\">\n        <defs>\n          <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"9\" markerHeight=\"9\" orient=\"auto-start-reverse\" className=\"gantt-connector-arrow\">\n            <path d=\"M 0 0 L 10 5 L 0 10 z\" strokeLinejoin=\"round\" />\n          </marker>\n        </defs>\n        <g transform={`matrix(1,0,0,1,${-(0 - nowPosition)},${-scrollTop})`}>\n          { cache }\n          { renderCreateLink() }\n        </g>\n      </svg>\n    );\n  }\n\nexport default LinkViewPort\n","////// Packages /////////////////////\r\nimport React, { FC } from 'react'\r\n\r\n////// Global Components ////////////\r\n\r\n////// Local Components /////////////\r\nimport ContentEditable from '../common/ContentEditable';\r\n\r\n////// Helpers /////////////////////\r\nimport Config from '../../helpers/config/Config';\r\n\r\n////// Hooks ///////////////////////\r\n\r\n////// Thunks //////////////////////\r\n\r\n////// Types ///////////////////////\r\nimport { ITask } from 'components/gantt';\r\n\r\n\r\ninterface Props {\r\n    item: ITask;\r\n    top: number;\r\n    itemHeight: string | number;\r\n    onSelectItem: (item: ITask)=>void;\r\n    index: number;\r\n    label: string;\r\n    onUpdateTask?: (item: ITask, config: Record<string, any>)=>void;\r\n    nonEditable?: boolean;\r\n    isSelected?: boolean\r\n}\r\n\r\nconst TaskRow: FC<Props> = ({item, top, itemHeight, onSelectItem, onUpdateTask, index, label, nonEditable, isSelected}) => (\r\n    <div\r\n        className={\"timeLine-side-task-row \" + (isSelected ? 'selected' : '')}\r\n        style={{\r\n            ...Config.values.taskList.task.style,\r\n            ...item.rowStyle,\r\n            top,\r\n            height: itemHeight\r\n        }}\r\n        onClick={()=>onSelectItem(item)}\r\n    >\r\n        {item.tableContent ? item.tableContent(item, itemHeight) : <div tabIndex={index} style={{ width: '100%' }}> { label } </div>}\r\n    </div>\r\n);\r\n  \r\n  export default TaskRow\r\n","import { ILink, ITask } from 'components/gantt';\nimport React, { FC } from 'react';\nimport Config from '../../helpers/config/Config';\nimport TaskRow from './TaskRow'\n\ninterface Props {\n  onScroll: (top: number)=>void,\n  itemHeight: number,\n  selectedItems?: (ITask | ILink)[],\n  onSelectItem: (item: ITask)=>void;\n  onUpdateTask?: (item: ITask, config: Record<string, any>)=>void;\n  nonEditable?: boolean;\n  data: ITask[];\n  startRow: number;\n  endRow: number;\n}\n\nconst TaskList: FC<Props> = React.memo(({ \n  onScroll,\n  itemHeight,\n  selectedItems,\n  onSelectItem,\n  onUpdateTask,\n  nonEditable,\n  data=[],\n  startRow,\n  endRow\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  return (\n    <div className=\"timeLine-side\">\n      <div className=\"timeLine-side-title\" style={Config.values.taskList.title.style}>\n        <div>{Config.values.taskList.title.label}</div>\n      </div>\n      <div ref={ref} className=\"timeLine-side-task-viewPort scrollbar\" onScroll={()=>onScroll(ref.current!.scrollTop)}>\n        <div className=\"timeLine-side-task-container\" style={{height: data.length > 0 ? data.length * itemHeight : 10}}>\n          {data?.map( (item, i)=> (\n            <TaskRow\n              key={i}\n              index={i}\n              item={item}\n              label={item.name}\n              top={i * itemHeight}\n              itemHeight={itemHeight}\n              onUpdateTask={onUpdateTask}\n              onSelectItem={onSelectItem}\n              nonEditable={nonEditable}\n              isSelected={ !!selectedItems?.find( i => i.id === item.id) }\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n})\n\n  export default TaskList;\n\n","import { DataListItem, DataRegistry, ILink, LinkRegistry } from \"../../.\";\n\nexport default class Registry {\n    link: LinkRegistry;\n    data: DataRegistry;\n\n    constructor(){\n        this.data={}\n        this.link={}\n    }\n\n    registerData(list: DataListItem[]){\n        if (!list)\n            return;\n        this.data={}\n        for (let i=0;i<list.length;i++){\n            this.data[list[i].id]={item:list[i],index:i};\n        }\n    }\n\n    registerLinks(list: ILink[]){\n        if(!list)\n            return\n        this.link={}\n\n        list.forEach((link, index) => {\n            this.link[ link.start ] = this.link[ link.start ] || []\n            this.link[ link.start ].push( { link, index } )\n\n            this.link[ link.end ] = this.link[ link.end ] || []\n            this.link[ link.end ].push( { link, index } )\n        })\n    }\n\n    getTask(id?: string | number){\n        if (!id) return;\n        return this.data[id]\n    }\n\n    getLinks(id?: string | number){\n        if (!id) return\n        return this.link[id]\n    }\n\n}","import DateHelper from '../helpers/DateHelper'\nconst HORIZON_BUFFER = 1000;\nconst HORIZON_BUFFER_ALERT = 750;\n\n\nexport default class DataController {\n  lower_limit: number;\n  lower_data_limit?: number;\n\n  upper_limit: number;\n  upper_data_limit?: number;\n\n  dataToRender: unknown[];\n\n  nowPosition?: number; //?  \n  dayWidth?: number;\n\n  onHorizonChange?: (lLimit: Date, hLimit: Date)=>void;\n\n  constructor() {\n    this.lower_limit = 0;\n    this.upper_limit = 0;\n    this.dataToRender = [];\n  }\n\n  initialise = (start: number, end: number, nowPosition: number, dayWidth: number) => {\n    this.nowPosition = nowPosition;\n    this.dayWidth = dayWidth;\n    this.setLimits(start, end);\n    this.loadDataHorizon();\n  };\n\n  //OnScroll\n  setStartEnd = (start: number, end: number, nowPosition: number, dayWidth: number) => {\n    this.nowPosition = nowPosition;\n    this.dayWidth = dayWidth;\n    if (this.needData(start, end)) {\n      this.setLimits(start, end);\n      this.loadDataHorizon();\n    }\n  };\n\n  needData = (start: number, end: number) => {\n    if (!this.lower_data_limit || !this.upper_data_limit) return console.log('Data Controller not initialized before load horizon')\n    return start < this.lower_data_limit || end > this.upper_data_limit;\n  };\n\n  setLimits = (start: number, end: number) => {\n    this.lower_limit = start - HORIZON_BUFFER;\n    this.lower_data_limit = start - HORIZON_BUFFER_ALERT;\n    this.upper_limit = end + HORIZON_BUFFER;\n    this.upper_data_limit = end + HORIZON_BUFFER_ALERT;\n  };\n\n  //OnScroll\n  loadDataHorizon = () => {\n    if (!this.nowPosition || !this.dayWidth) return console.log('Data Controller not initialized before load horizon')\n    const lowerLimit = DateHelper.pixelToDate(this.lower_limit, this.nowPosition, this.dayWidth);\n    const upLimit = DateHelper.pixelToDate(this.upper_limit, this.nowPosition, this.dayWidth);\n    this.onHorizonChange && this.onHorizonChange(lowerLimit, upLimit);\n  };\n}","import { Coordinates3D } from \"./Attachable\";\r\n\r\nexport function coordsToMagnitude(coords: Coordinates3D) {\r\n    return Math.sqrt( coords.x ** 2 + coords.y ** 2 + coords.z ** 2 )\r\n}","import { Attachable, Coordinates3D } from \"./Attachable\";\r\nimport { coordsToMagnitude } from \"./Vector\";\r\n\r\nexport interface NewtonObjectOptions {\r\n    friction?: number;\r\n    damping?: number;\r\n    maxSpeed?: number;\r\n    refreshRate?: number;\r\n    centroid?: Partial<Coordinates3D>;\r\n    mass: number;\r\n}\r\n\r\nexport default class NewtonObject<T extends Attachable = Attachable> {\r\n    public friction = 0;\r\n    public damping = 0;\r\n    public maxSpeed?: number;\r\n    public refreshRate = 60;\r\n    public readonly centroid = {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n    public readonly velocity = {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n    private _lastT?: number;\r\n    public mass: number;\r\n    public cutoffSpeed = 1;\r\n    public cutoffForce = 1;\r\n    public forces: T[] = [];\r\n    private motionTimer?: number;\r\n    public onMoved?(position: Coordinates3D, velocity: Coordinates3D): void;\r\n\r\n    constructor(options: NewtonObjectOptions) {\r\n        if (!options.mass)\r\n        this.centroid = Object.assign({}, this.centroid, options.centroid);\r\n        this.friction = options.friction || this.friction\r\n        this.damping = options.damping || this.damping\r\n        this.maxSpeed = options.maxSpeed || this.maxSpeed\r\n        this.refreshRate = options.refreshRate || this.refreshRate\r\n        this.mass = options.mass;\r\n    }\r\n\r\n    private motion = () => {\r\n        const fNet = { x: 0, y:0, z:0 }\r\n        for (const force of this.forces) {\r\n            const f = force.getForceVector();\r\n            if (f) {\r\n                fNet.x += f.x;\r\n                fNet.y += f.y;\r\n                fNet.z += f.z;\r\n            }\r\n        }\r\n        const speed = coordsToMagnitude( this.velocity )\r\n        const velocityVector = {\r\n            x: speed ? this.velocity.x / speed : 0,\r\n            y: speed ? this.velocity.y / speed : 0,\r\n            z: speed ? this.velocity.z / speed : 0\r\n        }\r\n\r\n        // friction force\r\n        const frictionForce = speed > this.cutoffSpeed ? this.mass * this.friction : 0;\r\n        fNet.x -= velocityVector.x * frictionForce;\r\n        fNet.y -= velocityVector.y * frictionForce;\r\n        fNet.z -= velocityVector.z * frictionForce;\r\n\r\n        // friction damping force\r\n        const dampingForce = speed > this.cutoffSpeed ? this.mass * this.damping * speed : 0;\r\n        fNet.x -= velocityVector.x * dampingForce;\r\n        fNet.y -= velocityVector.y * dampingForce;\r\n        fNet.z -= velocityVector.z * dampingForce;\r\n\r\n        const acceleration = {\r\n            x: fNet.x / this.mass,\r\n            y: fNet.y / this.mass,\r\n            z: fNet.z / this.mass\r\n        }\r\n        const current = Date.now();\r\n        const dT = this._lastT ? (current - this._lastT)/1000 : 0;\r\n        const newVelocity = {\r\n            x: this.velocity.x + acceleration.x * dT,\r\n            y: this.velocity.y + acceleration.y * dT,\r\n            z: this.velocity.z + acceleration.z * dT,\r\n        }\r\n        let newSpeed = coordsToMagnitude(newVelocity)\r\n        if (this.maxSpeed && newSpeed > this.maxSpeed) {\r\n            const reduction = (this.maxSpeed/newSpeed)\r\n            newVelocity.x *= reduction;\r\n            newVelocity.y *= reduction;\r\n            newVelocity.z *= reduction;\r\n            newSpeed = this.maxSpeed;\r\n        }\r\n        this.centroid.x += (this.velocity.x + newVelocity.x) / 2 * dT;\r\n        this.centroid.y += (this.velocity.y + newVelocity.y) / 2 * dT;\r\n        this.centroid.z += (this.velocity.z + newVelocity.z) / 2 * dT;\r\n        Object.assign(this.velocity, newVelocity)\r\n        return fNet\r\n    }\r\n\r\n    private motionLoop = () => {\r\n        window.clearTimeout( this.motionTimer )\r\n        const fNet = this.motion();\r\n        this._lastT = Date.now();\r\n        if ( (coordsToMagnitude(fNet) > this.cutoffForce) || (coordsToMagnitude(this.velocity) > this.cutoffSpeed) ) {\r\n            if (this.onMoved) this.onMoved({...this.centroid}, {...this.velocity});\r\n            this.motionTimer = window.setTimeout(this.motionLoop, 1000/this.refreshRate)\r\n        } else {\r\n            this._lastT = undefined;\r\n        }\r\n    }\r\n\r\n    public forceChange = () => {\r\n        this.motionLoop()\r\n    }\r\n\r\n    public attachForce (attachable: T) {\r\n        if (this.forces.find( f => f === attachable )) return;\r\n        this.forces.push(attachable)\r\n        attachable.attachObject(this)\r\n    }\r\n\r\n    public detatchForce (attachable: T) {\r\n        this.forces = this.forces.filter( f => f === attachable )\r\n        attachable.detatchObject()\r\n    }\r\n}","import NewtonObject from \"./NewtonObject\";\r\nimport { Attachable, Coordinates3D } from \"./Attachable\";\r\nimport { coordsToMagnitude } from \"./Vector\";\r\n\r\nexport default class RubberBand implements Attachable {\r\n    private _fulcrum = {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n\r\n    public get fulcrum() {return {...this._fulcrum}}\r\n\r\n    private _attachment?: NewtonObject;\r\n\r\n    public springK = 0;\r\n\r\n    constructor( fulcrum: Coordinates3D, springK: number ) {\r\n        this._fulcrum = Object.assign({}, this._fulcrum, fulcrum);\r\n        this.springK = springK\r\n    }\r\n\r\n    attachObject( object: NewtonObject) {\r\n        this._attachment = object;\r\n    }\r\n\r\n    getObject() {\r\n        return this._attachment;\r\n    }\r\n\r\n    detatchObject() {\r\n        this._attachment = undefined;\r\n    }\r\n\r\n    getForceVector() {\r\n        if (this._attachment) {\r\n            const att = this._attachment;\r\n            const distanceVector = {\r\n                                    x: this._fulcrum.x - att.centroid.x, \r\n                                    y: this._fulcrum.y - att.centroid.y, \r\n                                    z: this._fulcrum.z - att.centroid.z\r\n                                }\r\n            const distance = coordsToMagnitude(distanceVector);\r\n            const directionVector = distance ? {\r\n                x: distanceVector.x / distance,\r\n                y: distanceVector.y / distance,\r\n                z: distanceVector.z / distance \r\n            } : {x: 0, y: 0, z: 0};\r\n            const force = distance * this.springK;\r\n            return {\r\n                x: force * directionVector.x,\r\n                y: force * directionVector.y,\r\n                z: force * directionVector.z\r\n            }\r\n        }\r\n    }\r\n\r\n    setFulcrum(fulcrum: {x: number, y: number, z: number}) {\r\n        this._fulcrum = fulcrum\r\n        this._attachment?.forceChange()\r\n    }\r\n}","import React, { Component, MouseEvent } from 'react';\nimport VerticalSpliter from './components/taskList/VerticalSplitter';\nimport Header from './components/header/Headers';\nimport DataViewPort from './components/viewport/DataViewPort';\nimport LinkViewPort from './components/links/LinkViewPort';\nimport TaskList from './components/taskList/TaskList';\nimport Registry from './helpers/registry/Registry';\nimport { BUFFER_DAYS, DATA_CONTAINER_WIDTH, LINK_POS, MODE, PIXELS_PER, VIEW_MODE } from './Const';\nimport DataController from './controller/DataController';\nimport Config from './helpers/config/Config';\nimport { TimelineConfig, ILink, ITask } from '.';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { MouseEventHandler } from 'react-select';\nimport DateHelper from './helpers/DateHelper';\nimport { prepareCopy } from 'immer/dist/internal';\nimport NewtonObject from './helpers/physics/NewtonObject';\nimport RubberBand from './helpers/physics/RubberBand';\n\ninterface Props {\n  data?: ITask[];\n  links?: ILink[];\n  config?: TimelineConfig;\n  onUpdateTask?: (task: ITask, props: Partial<ITask>) => void;\n  onCreateLink?: (link: {\n    start: {\n      task: ITask,\n      position: LINK_POS\n    },\n    end: {\n      task: ITask,\n      position: LINK_POS\n    }\n  }) => void;\n  onDeleteLink?: (link: ILink)=>void\n  onSelectItem?: (item: ITask | ILink) => void;\n  onHorizonChange?: (start: Date, end: Date) => void;\n  mode?: VIEW_MODE;\n  itemHeight: number;\n  selectedItems?: (ITask | ILink)[];\n  taskViewPortRef?: React.RefObject<HTMLDivElement>;\n  nonEditableName?: boolean;\n  dataViewPortRef?: React.RefObject<HTMLDivElement>;\n  shouldLink?: boolean;\n  dayWidth?: number;\n}\n\ninterface State {\n  scrollLeft: number;\n  scrollTop: number;\n  nowPosition: number;\n  dayWidth: number;\n  numVisibleRows: number;\n  numVisibleDays: number;\n  startRow: number;\n  endRow: number;\n  start?: number;\n  currentDay: number;\n  sideStyle: React.CSSProperties & { width: number };\n  interactiveMode: boolean;\n  taskToCreate: { task: ITask, position: LINK_POS } | null;\n  links: ILink[];\n  mode: VIEW_MODE,\n  size: { width: number, height: number },\n  changingTask: {\n    item: ITask,\n    position: {\n      start: Date,\n      end: Date\n    }\n  } | null,\n  data?: ITask[];\n  dragging?: boolean;\n  draggingPosition?: number;\n  weekendViews?: React.ReactNode;\n}\n\nclass TimeLine extends Component<Props, State> {\n  public dragging: boolean;\n  public draggingPosition: number;\n  public readonly dc: DataController;\n  public registry: Registry;\n  pxToScroll: number;\n  initialise: boolean;\n  public velocity?: number;\n  public scrollTime?: number;\n  taskViewPortRef: React.RefObject<HTMLDivElement>\n  dataViewPortRef: React.RefObject<HTMLDivElement>;\n  private physicsObject: NewtonObject<RubberBand>;\n  private mouseRubberBand?: RubberBand; \n  static defaultProps = {\n    data: [],\n    links: [],\n    itemHeight: 20,\n    dayWidth: 24,\n    nonEditableName: false,\n    mode: VIEW_MODE.MONTH\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.dragging = false;\n    this.draggingPosition = 0;\n    this.dc = new DataController();\n    this.physicsObject = new NewtonObject<RubberBand>({\n      mass: 1,\n      damping: 5,\n      friction: 0.4\n    })\n    this.dc.onHorizonChange = this.onHorizonChange;\n    this.initialise = false;\n    this.dataViewPortRef = this.props.dataViewPortRef || React.createRef()\n    this.taskViewPortRef = this.props.taskViewPortRef || React.createRef()\n    this.registry = new Registry();\n    //This variable define the number of pixels the viewport can scroll till arrive to the end of the context\n    this.pxToScroll = 1900;\n\n    const dayWidth = this.props.dayWidth || this.getDayWidth(this.props.mode!);\n    Config.load(this.props.config);\n\n    //Initialising state\n    this.state = {\n      currentDay: 0, //Day that is in the 0px horizontal\n      //nowposition is the reference position, this variable support the infinit scrolling by accumulatning scroll times and redefining the 0 position\n      // if we accumulat 2 scroll to the left nowposition will be 2* DATA_CONTAINER_WIDTH\n      nowPosition: 0,\n      startRow: 0, //\n      endRow: 10,\n      sideStyle: { width: window.innerWidth * 0.4 },\n      scrollLeft: 0,\n      scrollTop: 0,\n      numVisibleRows: 40,\n      numVisibleDays: 60,\n      dayWidth: dayWidth,\n      interactiveMode: false,\n      taskToCreate: null,\n      links: [],\n      mode: this.props.dayWidth ? this.getMode(this.props.dayWidth) : (this.props.mode || VIEW_MODE.MONTH),\n      size: { width: 1, height: 1 },\n      changingTask: null\n    };\n  }\n\n  ////////////////////\n  //     ON MODE    //\n  ////////////////////\n\n  getMode(dayWidth: number) {\n    if (dayWidth >= PIXELS_PER.DAY_IN_DAY_MODE)\n      return VIEW_MODE.DAY\n    if (dayWidth >= PIXELS_PER.DAY_IN_WEEK_MODE)\n      return VIEW_MODE.WEEK\n    if (dayWidth >= PIXELS_PER.DAY_IN_MONTH_MODE)\n      return VIEW_MODE.MONTH\n    \n    return VIEW_MODE.YEAR\n  }\n\n  getDayWidth(mode: VIEW_MODE) {\n    switch (mode) {\n      case VIEW_MODE.DAY:\n        return PIXELS_PER.DAY_IN_DAY_MODE;\n      case VIEW_MODE.WEEK:\n        return PIXELS_PER.DAY_IN_WEEK_MODE;\n      case VIEW_MODE.MONTH:\n        return PIXELS_PER.DAY_IN_MONTH_MODE;\n      case VIEW_MODE.YEAR:\n        return PIXELS_PER.DAY_IN_YEAR_MODE;\n      default:\n        return PIXELS_PER.DAY_IN_MONTH_MODE;\n    }\n  }\n\n  ////////////////////\n  //     ON SIZE    //\n  ////////////////////\n\n  onSize = <T extends { width: number | null, height: number | null }>(size: T) => {\n    //If size has changed\n    if (!size.width || !size.height) return console.log('Failed onSize: ', size)\n\n\n    this.calculateVerticalScrollVariables(size as { width: number });\n    if (!this.initialise) {\n      this.dc.initialise(\n        this.state.scrollLeft + this.state.nowPosition,\n        this.state.scrollLeft + this.state.nowPosition + size.width,\n        this.state.nowPosition,\n        this.props.dayWidth || this.state.dayWidth\n      );\n      this.initialise = true;\n    }\n    this.setStartEnd();\n    const newNumVisibleRows = Math.ceil(size.height / this.props.itemHeight);\n    const newNumVisibleDays = this.calcNumVisibleDays(size as { width: number });\n    const rowInfo = this.calculateStartEndRows(newNumVisibleRows, this.props.data!, this.state.scrollTop);\n    this.setState({\n      numVisibleRows: newNumVisibleRows,\n      numVisibleDays: newNumVisibleDays,\n      startRow: rowInfo.start,\n      endRow: rowInfo.end,\n      size: size as { width: number, height: number }\n    });\n  };\n\n  /////////////////////////\n  //   VIEWPORT CHANGES  //\n  /////////////////////////\n\n  verticalChange = (scrollTop: number) => {\n    if (scrollTop === this.state.scrollTop) return;\n    //Check if we have scrolling rows\n    const rowInfo = this.calculateStartEndRows(this.state.numVisibleRows, this.props.data!, scrollTop);\n    if (rowInfo.start !== this.state.start) {\n      this.setState(\n        {\n          scrollTop: scrollTop,\n          startRow: rowInfo.start,\n          endRow: rowInfo.end\n        }\n      );\n    }\n  };\n\n  calculateStartEndRows = (numVisibleRows: number, data: any[], scrollTop: number) => {\n    const new_start = Math.trunc(scrollTop / this.props.itemHeight);\n    const new_end = new_start + (numVisibleRows >= data.length ? data.length : new_start + numVisibleRows);\n    return { start: new_start, end: new_end };\n  };\n\n  setStartEnd = () => {\n    this.dc.setStartEnd(this.state.scrollLeft, this.state.scrollLeft + this.state.size.width, this.state.nowPosition, this.state.dayWidth);\n  };\n\n  horizontalChange = (nowPosition: number) => {\n\n    const scrollLeft = nowPosition % this.pxToScroll;\n\n    //Get the day of the left position\n    const currentIndex = Math.trunc((scrollLeft - nowPosition) / this.state.dayWidth);\n\n    // //Calculate rows to render\n    // const new_startRow = Math.trunc(this.state.scrollTop / this.props.itemHeight);\n    // const new_endRow = new_startRow + (this.state.numVisibleRows >= this.props.data!.length\n    //   ? this.props.data!.length\n    //   : new_startRow + this.state.numVisibleRows);\n    //If we need updates then change the state and the scroll position\n    //Got you\n    this.setStartEnd();\n    const newState = {\n      currentDay: currentIndex,\n      nowPosition,\n      scrollLeft,\n      // startRow: new_startRow,\n      // endRow: new_endRow\n    }\n    this.setState(newState);\n  };\n\n  calculateVerticalScrollVariables = <T extends { width: number }>(size: T) => {\n    //The pixel to scroll verically is equal to the pecentage of what the viewport represent in the context multiply by the context width\n    this.pxToScroll = (1 - size.width / DATA_CONTAINER_WIDTH) * DATA_CONTAINER_WIDTH - 1;\n  };\n\n  onHorizonChange = (lowerLimit: Date, upLimit: Date) => {\n    if (this.props.onHorizonChange) this.props.onHorizonChange(lowerLimit, upLimit);\n  };\n\n  /////////////////////\n  //   MOUSE EVENTS  //\n  /////////////////////\n\n  /* doMouseDown = (e: React.MouseEvent<any, any>, mode: MODE, task?: ITask) => {\n    type MEH = (e: globalThis.MouseEvent) => void\n    let handleMouseMove: MEH\n    let handleMouseLeave: MEH\n    let handleMouseUp: MEH\n    const startX = e.clientX;\n    const nowX = this.state.nowPosition\n    switch(mode) {\n      case MODE.NONE: {\n        handleMouseMove = e => {\n          this.setState({nowPosition: nowX + e.clientX - startX})\n        }\n        const detatch = (_e: any) => document.removeEventListener('mousemove', handleMouseMove)\n        handleMouseLeave = detatch\n        handleMouseUp = detatch\n        break;\n      }\n      case MODE.MOVE_RESIZE_LEFT: {\n        if (!task || !this.props.onUpdateTask) return\n        const initialLeftX = DateHelper.dateToPixel(task.start, nowX, this.state.dayWidth)\n        const changingTask = {\n          item: {...task},\n          position: {\n            start: new Date(task.start),\n            end: new Date(task.end)\n          }\n        }\n        this.setState({changingTask})\n        handleMouseMove = e => {\n          this.setState(prev => {\n            const maxDx = DateHelper.dateToPixel(prev.changingTask!.position.end, nowX, this.state.dayWidth) - initialLeftX\n            const newDx = Math.min(maxDx, e.clientX - startX)\n            return {\n              changingTask: {\n                ...prev.changingTask!,\n                position: {\n                  ...prev.changingTask!.position,\n                  start: DateHelper.pixelToDate(initialLeftX + newDx, nowX, this.state.dayWidth)\n                }\n              }\n            }\n          })\n        }\n        const detatch = () => {\n          this.setState({changingTask: null})\n          document.removeEventListener('mousemove', handleMouseMove)\n        }\n        handleMouseLeave = detatch\n        handleMouseUp = e => {\n          this.props.onUpdateTask && this.props.onUpdateTask(task, {start: this.state.changingTask!.position.start});\n          detatch()\n        }\n        break;\n      }\n      case MODE.MOVE_RESIZE_RIGHT: {\n        if (!task || !this.props.onUpdateTask) return\n        const initialRightX = DateHelper.dateToPixel(task.end, nowX, this.state.dayWidth)\n        const changingTask = {\n          item: {...task},\n          position: {\n            start: new Date(task.start),\n            end: new Date(task.end)\n          }\n        }\n        this.setState({changingTask})\n\n        handleMouseMove = e => {\n          this.setState(prev => {\n            const minDx = DateHelper.dateToPixel(prev.changingTask!.position.end, nowX, this.state.dayWidth) - initialRightX\n            const newDx = Math.max(minDx, e.clientX - startX)\n            return {\n              changingTask: {\n                ...prev.changingTask!,\n                position: {\n                  ...prev.changingTask!.position,\n                  end: DateHelper.pixelToDate(initialRightX + newDx, nowX, this.state.dayWidth)\n                }\n              }\n            }\n          })\n        }\n        const detatch = () => {\n          this.setState({changingTask: null})\n          document.removeEventListener('mousemove', handleMouseMove)\n        }\n        handleMouseLeave = detatch\n        handleMouseUp = e => {\n          this.props.onUpdateTask && this.props.onUpdateTask(task, {end: this.state.changingTask!.position.end});\n          detatch()\n        }\n        break;\n      }\n      case MODE.MOVE: {\n        if (!task || !this.props.onUpdateTask) return\n        const initialLeftX = DateHelper.dateToPixel(task.start, nowX, this.state.dayWidth)\n        const initialRightX = DateHelper.dateToPixel(task.end, nowX, this.state.dayWidth)\n        const changingTask = {\n          item: {...task},\n          position: {\n            start: new Date(task.start),\n            end: new Date(task.end)\n          }\n        }\n        this.setState({changingTask})\n\n        handleMouseMove = e => {\n          this.setState(prev => {\n            const newDx = e.clientX - startX\n            return {\n              changingTask: {\n                ...prev.changingTask!,\n                position: {\n                  start: DateHelper.pixelToDate(initialLeftX + newDx, nowX, this.state.dayWidth),\n                  end: DateHelper.pixelToDate(initialRightX + newDx, nowX, this.state.dayWidth)\n                }\n              }\n            }\n          })\n        }\n        const detatch = () => {\n          this.setState({changingTask: null})\n          document.removeEventListener('mousemove', handleMouseMove)\n        }\n        handleMouseLeave = detatch\n        handleMouseUp = e => {\n          this.props.onUpdateTask && this.props.onUpdateTask(task, {...this.state.changingTask!.position});\n          detatch()\n        }\n        break;\n      }\n    }\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseleave', handleMouseLeave)\n    document.addEventListener('mouseup', handleMouseUp)\n  }; */\n\n\n  doMouseDown: React.MouseEventHandler<HTMLDivElement> = e => {\n    if (e.currentTarget.id === \"timeLinedataViewPort\") {\n      this.physicsObject.forces.forEach( f => this.physicsObject.detatchForce(f))\n      this.mouseRubberBand = new RubberBand({x: this.physicsObject.centroid.x, y:0, z: 0}, 30)\n      this.physicsObject.attachForce(this.mouseRubberBand);\n      this.physicsObject.onMoved = ({x}) => {\n        this.horizontalChange(x)\n      }\n    }\n    this.dragging = true;\n    this.draggingPosition = e.clientX;\n  }\n\n  doMouseMove: React.MouseEventHandler<HTMLDivElement> = e => {\n    if (this.dragging) {\n      const delta = this.draggingPosition - e.clientX;\n      if (delta !== 0) {\n        this.mouseRubberBand?.setFulcrum({...this.mouseRubberBand.fulcrum, x: this.mouseRubberBand.fulcrum.x - delta})\n        this.draggingPosition = e.clientX;\n      }\n    }\n  };\n\n  // doVelocityScroll(velocity: number, prevTime?: number) {\n  //   if (velocity && Math.abs(velocity) > this.cutoff) {\n  //     const current = Date.now()\n  //     if (!prevTime) return this.velocity = 0\n  //     const deltaT = current - prevTime\n  //     const deltaX = deltaT * velocity\n  //     this.horizontalChange(this.state.scrollLeft + deltaX);\n\n  //     const acceleration = this.friction + this.damping * (velocity ** 2);\n\n  //     const speed = Math.abs(velocity);\n  //     const direction = velocity / speed;\n  //     const newVelocity = Math.max(0, speed - (acceleration * (deltaT))) * direction\n\n  //     console.log({newVelocity, speed, direction, acceleration})\n  //     setTimeout(()=>this.doVelocityScroll(newVelocity, current), 16)\n  //     this.velocity = newVelocity;\n  //     this.scrollTime = current\n  //   } else {\n  //     this.velocity = 0;\n  //     this.scrollTime = undefined\n  //   }\n  // }\n\n  doMouseUp: React.MouseEventHandler<HTMLDivElement> = () => {\n    this.dragging = false;\n    this.mouseRubberBand && this.physicsObject.detatchForce(this.mouseRubberBand)\n  };\n\n  doMouseLeave: React.MouseEventHandler<HTMLDivElement> = () => {\n    // if (!e.relatedTarget.nodeName)\n    //     this.dragging=false;\n    this.setState({ dragging: false });\n    this.dragging = false;\n    this.mouseRubberBand && this.physicsObject.detatchForce(this.mouseRubberBand)\n  };\n\n  doTouchStart: React.TouchEventHandler<HTMLDivElement> = e => {\n    this.setState({\n      dragging: true,\n      draggingPosition: e.touches[0].clientX\n    })\n  };\n\n  doTouchEnd: React.TouchEventHandler<HTMLDivElement> = e => {\n    this.setState({ dragging: false })\n  };\n\n  doTouchMove: React.TouchEventHandler<HTMLDivElement> = e => {\n    if (this.state.dragging) {\n      const delta = this.state.draggingPosition! - e.touches[0].clientX;\n\n      if (delta !== 0) {\n        const current = Date.now()\n        this.velocity = this.scrollTime ? delta / (current-this.scrollTime) : 0\n        this.scrollTime = current;\n        this.setState({ draggingPosition: e.touches[0].clientX });\n        this.horizontalChange(this.state.scrollLeft + delta);\n      }\n    }\n  };\n  doTouchCancel: React.TouchEventHandler<HTMLDivElement> = e => {\n    this.setState({ dragging: false });\n  };\n\n  //Child communicating states\n  onTaskListSizing = (delta: number) => {\n    this.setState((prevState) => ({\n      sideStyle: { width: prevState.sideStyle.width - delta }\n    }));\n  };\n\n  /////////////////////\n  //   ITEMS EVENTS  //\n  /////////////////////\n\n  onSelectItem = (item: ITask | ILink) => {\n    if ( this.props.onSelectItem ) this.props.onSelectItem( item );\n  };\n\n  onStartCreateLink = (task: ITask, position: LINK_POS) => {\n    this.setState({\n      interactiveMode: true,\n      taskToCreate: { task, position }\n    });\n  };\n\n  onFinishCreateLink = (task: ITask, position: LINK_POS) => {\n    if (\n      this.props.onCreateLink\n      && task\n      && this.state.taskToCreate\n      && this.state.taskToCreate.task.id !== task.id\n    ) {\n      this.props.onCreateLink({\n        start: this.state.taskToCreate,\n        end: { task, position }\n      });\n    }\n    this.setState({\n      interactiveMode: false,\n      taskToCreate: null\n    });\n  };\n\n  onTaskChanging = (changingTask: { item: ITask; position: { start: number; end: number; }; }) => {\n    this.setState({\n      changingTask\n    });\n  };\n\n  calcNumVisibleDays = <T extends { width: number }>(size: T) => {\n    return Math.ceil(size.width / this.state.dayWidth) + BUFFER_DAYS;\n  };\n\n\n\n  checkMode() {\n    if (this.props.mode && this.props.mode !== this.state.mode) {\n      const newDayWidth = this.getDayWidth(this.props.mode);\n\n      //to recalculate the now position we have to see how many scroll has happen\n      //to do so we calculate the diff of days between current day and now\n      //And we calculate how many times we have scroll\n      const scrollTime = Math.ceil((-this.state.currentDay * this.state.dayWidth) / this.pxToScroll);\n      //We readjust now postion to the new number of scrolls\n      this.setState({ nowPosition: scrollTime * this.pxToScroll });\n      const scrollLeft = (this.state.currentDay * this.state.dayWidth + this.state.nowPosition) % this.pxToScroll;\n      // we recalculate the new scroll Left value\n      this.setState(prev => ({\n        scrollLeft,\n        mode: this.props.mode!,\n        dayWidth: this.props.dayWidth || newDayWidth,\n        numVisibleDays: this.calcNumVisibleDays(prev.size)\n      }));\n    }\n  }\n  componentDidMount() {\n    this.setData();\n    this.setLinks();\n    const viewport = document.getElementById('timeLine') as HTMLDivElement | null;\n    const viewportWidth = viewport?.getBoundingClientRect().width || 20;\n    const width = window.innerWidth > 1000 ? window.innerWidth * 0.4 : viewportWidth\n    this.setState({sideStyle: {width}})\n  }\n\n  componentWillUnmount() {\n    this.mouseRubberBand = undefined;\n    this.physicsObject = undefined;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if ( this.props.data !== prevProps.data ) {\n      this.setData()\n    }\n    if (this.props.links !== prevProps.links ) {\n      this.setLinks()\n    }\n    if (this.props.dayWidth !== prevProps.dayWidth) {\n      const newDayWidth = this.props.dayWidth || this.getDayWidth(this.state.mode)\n      this.setState(prev => ({\n        nowPosition: prev.nowPosition * newDayWidth / prev.dayWidth,\n        dayWidth: newDayWidth,\n        mode: this.props.dayWidth ? this.getMode(this.props.dayWidth) : this.state.mode\n      }))\n    }\n  }\n\n  setData() {\n    const rowInfo = this.calculateStartEndRows(this.state.numVisibleRows, this.props.data!, this.state.scrollTop);\n    this.setState({\n      startRow: rowInfo.start,\n      endRow: rowInfo.end\n    })\n    this.registry.registerData(this.props.data || []);\n  }\n\n  setLinks() {\n    this.registry.registerLinks(this.props.links || []);\n  }\n  \n  render() {\n    this.checkMode();\n    if (!this.state.size) {\n      console.log(this.state)\n    }\n    const dataViewport = document.getElementById('timeLinedataViewPort') as HTMLDivElement | null;\n    const mainViewportHeight = dataViewport?.getBoundingClientRect().height || 10;\n    const mainViewportWidth = dataViewport?.getBoundingClientRect().width || 20;\n    const viewportHeight = this.props.data ? this.props.data.length * this.props.itemHeight : 10;\n\n    return (\n      <div className=\"timeLine rounded\">\n        <div className=\"timeLine-side-main\" style={this.state.sideStyle}>\n          <TaskList\n            itemHeight={this.props.itemHeight}\n            startRow={this.state.startRow}\n            endRow={this.state.endRow}\n            data={this.props.data!}\n            selectedItems={this.props.selectedItems}\n            onSelectItem={this.onSelectItem}\n            onUpdateTask={this.props.onUpdateTask}\n            onScroll={this.verticalChange}\n            nonEditable={this.props.nonEditableName}\n          />\n          <VerticalSpliter onTaskListSizing={this.onTaskListSizing} />\n        </div>\n        <div className=\"timeLine-main\">\n          <Header\n            numVisibleDays={this.state.numVisibleDays}\n            currentDay={this.state.currentDay}\n            nowPosition={this.state.nowPosition}\n            dayWidth={this.state.dayWidth}\n            mode={this.state.mode}\n            scrollLeft={this.state.scrollLeft}\n            mainViewportHeight={viewportHeight}\n            mainViewportWidth={mainViewportWidth}\n          >\n            {\n              weekends => (\n                <>\n                  <DataViewPort\n                    scrollLeft={ this.state.scrollLeft }\n                    scrollTop={ this.state.scrollTop }\n                    itemHeight={ this.props.itemHeight }\n                    nowPosition={ this.state.nowPosition }\n                    startRow={ this.state.startRow }\n                    endRow={ this.state.endRow }\n                    data={ this.props.data || [] }\n                    height={ viewportHeight }\n                    selectedItems={ this.props.selectedItems }\n                    dayWidth={ this.state.dayWidth }\n                    onMouseDown={ this.doMouseDown }\n                    onMouseMove={ this.doMouseMove }\n                    onMouseUp={ this.doMouseUp}\n                    onMouseLeave={ this.doMouseLeave }\n                    onTouchStart={ this.doTouchStart }\n                    onTouchMove={ this.doTouchMove }\n                    onTouchEnd={ this.doTouchEnd }\n                    onTouchCancel={ this.doTouchCancel }\n                    onSelectItem={ this.onSelectItem }\n                    onUpdateTask={ this.props.onUpdateTask }\n                    onTaskChanging={ this.onTaskChanging }\n                    onStartCreateLink={ this.onStartCreateLink }\n                    onFinishCreateLink={ this.onFinishCreateLink }\n                    boundaries={{\n                      lower: this.state.scrollLeft,\n                      upper: this.state.scrollLeft + this.state.size.width\n                    }}\n                    onSize={this.onSize}\n                    weekends={weekends}\n                    shouldLink={this.props.shouldLink}\n                  />\n                  <LinkViewPort\n                    scrollLeft={this.state.scrollLeft}\n                    scrollTop={this.state.scrollTop}\n                    data={this.props.data!}\n                    nowPosition={this.state.nowPosition}\n                    dayWidth={this.state.dayWidth}\n                    interactiveMode={this.state.interactiveMode}\n                    taskToCreate={this.state.taskToCreate}\n                    onFinishCreateLink={this.onFinishCreateLink}\n                    changingTask={this.state.changingTask}\n                    selectedItems={ this.props.selectedItems }\n                    onSelectItem={this.onSelectItem}\n                    itemHeight={this.props.itemHeight}\n                    links={this.props.links!}\n                    onDoubleClickLink={this.props.onDeleteLink}\n                    registry={this.registry}\n                  />\n                </>\n              )\n            }\n          </Header>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeLine;\n","////// Packages //////////////////\r\nimport React, { FC, useEffect, useMemo, useState } from 'react'\r\nimport { Button, Card, CardBody, Col, Container, CustomInput, Row, ButtonGroup, CardHeader } from 'reactstrap'\r\nimport TimeLine from 'components/gantt/TimeLine';\r\nimport { ILink, ITask } from 'components/gantt';\r\nimport FalconCardHeader from 'components/FalconCardHeader';\r\nimport ButtonIcon from 'components/ButtonIcon';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Circle } from 'react-es6-progressbar.js';\r\n\r\n////// Local Components //////////\r\nimport AddTaskModalWithButton from './AddTaskModalWithButton'\r\nimport { StyleConfig } from 'components/gantt/helpers/config/Config';\r\nimport AssignmentAvatars from \"layouts/workflows/stage/tasks/AssignmentAvatars\";\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\nimport {BORDER_COLORS, LIGHT_DARK_MAP, NAVY_COLOR_PALATTE, PASTEL_COLORS} from 'layouts/management/assignments/ColorPicker'\r\n\r\n////// Custom Hooks //////////////\r\nimport useSetting from 'store/hooks/settings/useSettings';\r\nimport dayjs from 'dayjs';\r\nimport { MODE, VIEW_MODE } from 'components/gantt/Const';\r\nimport { grays, themeColors } from 'helpers/utils';\r\nimport useStage from 'store/hooks/workflow/useStage'\r\nimport { MMilestone, MTask } from 'store/types/models/workflow';\r\nimport { Populate } from 'store/types/models/common';\r\nimport Flex from 'components/Flex';\r\nimport AvatarGroup from 'components/AvatarGroup';\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst DEFAULT_TASKS = [\r\n    {\r\n        id: 'first',\r\n        name: 'First Task',\r\n        start: '2021-06-20',\r\n        end: '2021-06-26',\r\n        color: PASTEL_COLORS.GREEN\r\n    },\r\n    {\r\n        id: 'second',\r\n        name: 'Second Task',\r\n        start: '2021-06-27',\r\n        end: '2021-07-02',\r\n        color: PASTEL_COLORS.BLUE\r\n    },\r\n    {\r\n        id: 'third',\r\n        name: 'Third Task',\r\n        start: '2021-06-25',\r\n        end: '2021-07-03',\r\n        color: PASTEL_COLORS.SAND\r\n    },\r\n    {\r\n        id: 'fourth',\r\n        name: 'Fourth Task',\r\n        start: '2021-07-02',\r\n        end: '2021-07-07',\r\n        color: PASTEL_COLORS.PINK\r\n    },\r\n    {\r\n        id: 'fifth',\r\n        name: 'Fifth Task',\r\n        start: '2021-07-02',\r\n        end: '2021-07-07',\r\n        color: PASTEL_COLORS.LAVENDER\r\n    }\r\n]\r\n\r\nconst DEFAULT_LINKS = [\r\n    {\r\n        id: 'link-1-2',\r\n        start: 'first',\r\n        end: 'second'\r\n    }\r\n]\r\n\r\nconst TimelineTest: FC<Props> = () => {\r\n    const { value: stage } = useStage(\"60956beed0085e1978fc395f\")\r\n    const tasks = useSelector( state => state.workflow.tasks );\r\n    const [dayWidth, setDayWidth] = useState(40);\r\n    const milestones = useMemo(() => stage?.milestones.map( m => ({...m, tasks: m.tasks.map( taskId => tasks[taskId] ).filter(s=>!!s)})) || [], [stage, tasks])\r\n\r\n    function renderMilestone(milestone: Populate<MMilestone, 'tasks', MTask[]>, height: number) {\r\n        return (\r\n            <Container fluid>\r\n                <Row style={{height}}>\r\n                    <Col tag={Flex} xs=\"auto\" align=\"center\">\r\n                        <FontAwesomeIcon icon=\"level-up-alt\" transform=\"rotate-90\" />\r\n                    </Col>\r\n                    <Col tag={Flex} align=\"center\">\r\n                        <h6 className=\"my-0 py-0\">{milestone.title}</h6>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    const taskProgressOptions = {\r\n        color: themeColors.primary,\r\n        progress: 0,\r\n        strokeWidth: 11,\r\n        trailWidth: 11,\r\n        trailColor: grays['200'],\r\n        easing: 'easeInOut',\r\n        duration: 2000,\r\n        svgStyle: {\r\n          'stroke-linecap': 'round',\r\n          display: 'block',\r\n          width: '100%'\r\n        },\r\n        text: { autoStyleContainer: false },\r\n        // Set default step function for all animate calls\r\n        step: (state, circle) => {\r\n          const percentage = Math.round(circle.value() * 100);\r\n          circle.setText(\"<span class='value'>\"+percentage+\"</span>\");\r\n        }\r\n    };\r\n\r\n    function renderTask(task: MTask, height: number) {\r\n        return (\r\n            <Container fluid>\r\n                <Row style={{height}}>\r\n                    <Col tag={Flex} align=\"center\" >\r\n                        <p className=\"fs--1 my-0 py-0\">{task.title}</p>\r\n                    </Col>\r\n                    <Col tag={Flex} align=\"center\" xs={2}>\r\n                        <p className=\"fs--1 my-0 py-0\">{dayjs(task.startDate).format('M/D/YY')}</p>\r\n                    </Col>\r\n                    <Col tag={Flex} align=\"center\" xs={2}>\r\n                        <p className=\"fs--1 my-0 py-0\">{dayjs(task.endDate).format('M/D/YY')}</p>\r\n                    </Col>\r\n                    <Col tag={Flex} align=\"center\" xs={2}>\r\n                        <Circle\r\n                            progress={ task.progress[task.progress.length - 1]?.percent / 100 || 0 }\r\n                            options={ taskProgressOptions }\r\n                            container_class=\"progress-circle progress-circle-taskmenu\"\r\n                            container_style={{ width: (height * 0.67) + 'px', height: (height * 0.67) + 'px' }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    const allTasks = useMemo(() => milestones?.reduce( (all, milestone) => [\r\n            ...all, \r\n            {\r\n                ...milestone, \r\n                id: milestone._id,\r\n                name: milestone.title,\r\n                start: milestone.startDate!,\r\n                end: milestone.endDate!,\r\n                rowStyle: {\r\n                    backgroundColor: 'rgba(150, 150, 190, 0.1)',\r\n                    borderBottom: '2px solid black'\r\n                },\r\n                tableContent: renderMilestone,\r\n                color: 'rgb(245, 148, 134)'\r\n            }, \r\n            ...milestone.tasks.map( task => ({\r\n                ...task,\r\n                id: task._id,\r\n                name: task.title,\r\n                start: task.startDate!,\r\n                end: task.endDate!,\r\n                tableContent: renderTask,\r\n                color: task.progress[task.progress.length - 1]?.percent === 100 ? themeColors.success : 'rgb(145, 148, 184)'\r\n            }))\r\n        ], [] as any[])\r\n    , [milestones])\r\n\r\n    //const [tasks, setTasks] = useState<ITask[]>(DEFAULT_TASKS);\r\n    const [links, setLinks] = useState<ILink[]>(DEFAULT_LINKS);\r\n    const [mode, setMode] = useState(VIEW_MODE.YEAR);\r\n    const [itemHeight, setItemHeight] = useState(40);\r\n    const [ linkMode, setLinkMode ] = useState(false)\r\n\r\n    const [ selectedItems, setSelectedItems ] = useState<(ITask | ILink)[]>([])\r\n\r\n    const isDark = useSetting('isDark');\r\n\r\n    // useEffect(() => {\r\n    //     const colors = Object.values(NAVY_COLOR_PALATTE)\r\n    //     fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n    //         .then( data => data?.json())\r\n    //         .then( data => setTasks(data?.map( (d: any) => {\r\n    //             const start = dayjs().add(Math.random()*100, 'day')\r\n    //             const end = start.add(Math.random()*25, 'day')\r\n    //             return {\r\n    //                 id: d.id,\r\n    //                 name: d.title,\r\n    //                 start: start.toISOString(),\r\n    //                 end: end.toISOString(),\r\n    //                 color: colors[Math.floor((Math.random()*80)) % colors.length]\r\n    //             }\r\n    //         })))\r\n    // }, [])\r\n\r\n\r\n    const timelineConfig: StyleConfig = {\r\n        header: {\r\n            top: {\r\n                style: {}\r\n            },\r\n            middle: {\r\n                style: {},\r\n                selectedStyle: {} \r\n            },\r\n            bottom: {\r\n                style: {},\r\n                selectedStyle: {} \r\n            }\r\n        }\r\n    }\r\n\r\n    const correctedTasks = /* isDark \r\n                            ? tasks.map( t => {\r\n                                const color = LIGHT_DARK_MAP.find( color => color.light === t.color)?.dark;\r\n                                const borderColor = color && BORDER_COLORS[color]\r\n                                return {\r\n                                    ...t, \r\n                                    color,\r\n                                    borderColor\r\n                                }\r\n                            }) \r\n                            :  */tasks;\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"bg-light\">\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Workflow Timelines</h3>\r\n                    </Col>\r\n                </Row>\r\n                <hr/>\r\n                <Row >\r\n                    <Col xs=\"auto\">\r\n                        <h6>Row Height:</h6>\r\n                    </Col>\r\n                    <Col>\r\n                        <CustomInput id=\"item-height-selector\" step=\"1\" min=\"20\" max=\"50\" type=\"range\" value={itemHeight} onChange={e => setItemHeight(+e.target.value)} /> \r\n                    </Col>\r\n                    <Col xs=\"auto\" className=\"border-left\">\r\n                        <h6>Time Span:</h6>\r\n                    </Col>\r\n                    <Col className=\"border-right\">\r\n                        <CustomInput id=\"day-width-selector\" step=\"1\" min=\"1\" max=\"100\" type=\"range\" value={dayWidth} onChange={e => setDayWidth(+e.target.value)} />\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <CustomInput \r\n                            id=\"link-mode\" \r\n                            type=\"checkbox\"\r\n                            label=\"Link Mode\"\r\n                            checked={linkMode} \r\n                            onChange={e=>setLinkMode(e.target.checked)} \r\n                        />\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button onClick={()=>setMode(VIEW_MODE.DAY)} color=\"primary\">Day</Button>\r\n                            <Button onClick={()=>setMode(VIEW_MODE.WEEK)} color=\"primary\">Week</Button>\r\n                            <Button onClick={()=>setMode(VIEW_MODE.MONTH)} color=\"primary\">Month</Button>\r\n                            <Button onClick={()=>setMode(VIEW_MODE.YEAR)} color=\"primary\">Year</Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Button onClick={()=>setSelectedItems([])} size=\"sm\">Clear Selections</Button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                \r\n                \r\n            </CardHeader>\r\n            <CardBody>\r\n                <TimeLine \r\n                    data={allTasks}\r\n                    links={links}\r\n                    onCreateLink={link => setLinks( prev => [...prev, {id: uuid(), start: link.start.task.id, end: link.end.task.id}] )}\r\n                    onDeleteLink={ link => setLinks( prev => prev.filter( l => link.id !== l.id))}\r\n                    onUpdateTask={ (task, update) => {\r\n                        console.log(task, update)\r\n                    }}\r\n                    onSelectItem={ item => setSelectedItems( i => i.find( it => it.id === item.id ) ? i.filter( it => it.id !== item.id) : [...i, item] ) }\r\n                    selectedItems={ selectedItems }\r\n                    config={timelineConfig}\r\n                    itemHeight={itemHeight}\r\n                    mode={mode}\r\n                    shouldLink={linkMode}\r\n                    dayWidth={1471.8 * Math.exp(-0.079 * dayWidth)}\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n        \r\n    )\r\n}\r\n\r\nexport default TimelineTest\r\n\r\n// data?: ITask[];\r\n// links?: ILink[];\r\n// config?: TimelineConfig;\r\n// onUpdateTask?: (task: ITask, props: Partial<ITask>) => void;\r\n// onCreateLink?: (link: {\r\n//   start: {\r\n//     task: ITask, \r\n//     position: LINK_POS\r\n//   }, \r\n//   end: {\r\n//     task: ITask, \r\n//     position: LINK_POS\r\n//   }\r\n// }) => void;\r\n// onSelectItem?: (item: ITask | ILink) => void;\r\n// onHorizonChange?: (start: Date, end: Date) => void;\r\n// mode?: VIEW_MODE;\r\n// itemHeight: number;\r\n// selectedItem?: ITask | ILink;\r\n// taskViewPortRef?: React.RefObject<HTMLDivElement>;\r\n// nonEditableName?: boolean;\r\n// dataViewPortRef?: React.RefObject<HTMLDivElement>;","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport UnderConstruction from 'layouts/errors/UnderConstruction';\r\nimport Assignments from 'layouts/management/assignments/Assignments';\r\nimport TimelineTest from 'layouts/management/timelines/TimelineTest';\r\n\r\ninterface Props extends RouteComponentProps {\r\n\r\n}\r\n\r\nconst ManagmentRoutes: FC<Props> = ({ match: { url } }) => (\r\n  <Switch>\r\n    <Route path={`${url}/assignments`} component={Assignments} />\r\n    <Route path={`${url}/teams`} component={UnderConstruction} />\r\n    <Route path={`${url}/workload`} exact component={UnderConstruction} />\r\n    <Route path={`${url}/approvals`} exact component={UnderConstruction} /> \r\n    <Route path={`${url}/timelines`} exact component={TimelineTest} /> \r\n\r\n    {/*Redirect*/}\r\n    <Redirect to=\"/errors/404\" />\r\n  </Switch>\r\n);\r\n\r\nexport default ManagmentRoutes;\r\n","import React, { FC } from 'react';\r\nimport { FormGroup, Input, InputProps, Label, LabelProps, FormFeedback } from 'reactstrap';\r\n\r\ninterface Props extends InputProps {\r\n  label?: string;\r\n  formClass?: string;\r\n  feedback?: React.ReactNode;\r\n  isTooltipFeedback?: boolean;\r\n  labelProps?: LabelProps;\r\n}\r\nconst FormGroupInput: FC<Props> = ({ label, formClass='', feedback, valid, invalid, isTooltipFeedback, labelProps, ...rest }) => {\r\n  const {id, ...inputProps} = rest;\r\n  return (\r\n    <FormGroup className={formClass}>\r\n      {label && <Label htmlFor={id} {...labelProps} >{label}</Label>}\r\n      <Input id={id} valid={valid} invalid={invalid} {...inputProps} />\r\n      {feedback && <FormFeedback valid={valid} invalid={invalid} tooltip={isTooltipFeedback}>{feedback}</FormFeedback>}\r\n    </FormGroup>\r\n  )\r\n};\r\n\r\nexport default FormGroupInput;","import React, { FC } from 'react';\r\nimport Loader from './Loader';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\ninterface Props {\r\n    dataLoader: {loading?: boolean; error?: any;};\r\n    size?: 's' | 'm' | 'l' | 'xl';\r\n    children: any;\r\n    className?: string;\r\n}\r\n\r\nconst LoadingGateway: FC<Props> = ({dataLoader, size='l', className, children}) => {\r\n    const sizeClass = {\r\n        s: 'fs-0',\r\n        m: 'fs-1',\r\n        l: 'fs-2',\r\n        xl: 'fs-4'\r\n    }\r\n\r\n    if (dataLoader?.loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    if (dataLoader?.error) {\r\n        return ( \r\n            <>\r\n                <Row className={\"flex-center py-5 \" + className}>\r\n                    <Col xs=\"auto\">\r\n                        <FontAwesomeIcon icon='exclamation-circle' className={[sizeClass, 'text-danger'].join(' ')} />\r\n                    </Col>\r\n                </Row>\r\n                <Row className={\"flex-center py-5 \" + className}>\r\n                    {dataLoader.error}\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return <>{ children }</>;\r\n};\r\n\r\nexport default LoadingGateway;\r\n","import React, {FC} from 'react';\r\nimport classNames from 'classnames';\r\nimport { Button, ButtonProps } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Transform, IconProp } from '@fortawesome/fontawesome-svg-core'\r\n\r\n\r\nexport interface Props extends ButtonProps {\r\n  iconAlign?: 'right' | 'left',\r\n  iconClassName?: string;\r\n  transform?: string | Transform ;\r\n  icon: IconProp;\r\n}\r\n\r\nconst ButtonIcon: FC<Props> = ({ icon, iconAlign='left', iconClassName, transform, children, ...rest }) => (\r\n  <Button {...rest}>\r\n    {iconAlign === 'right' && children}\r\n    <FontAwesomeIcon\r\n      icon={icon}\r\n      className={classNames(iconClassName, {\r\n        'mr-1': children && iconAlign === 'left',\r\n        'ml-1': children && iconAlign === 'right'\r\n      })}\r\n      transform={transform}\r\n    />\r\n    {iconAlign === 'left' && children}\r\n  </Button>\r\n);\r\n\r\nexport default ButtonIcon;\r\n","////// Packages ////////////////\r\n\r\n////// Ducks ///////////////////\r\nimport { BaseDuck } from \"store/ducks/BaseDuck\";\r\nimport { \r\n    stages as stagesDuck\r\n} from \"store/ducks/workflow\";\r\nimport { FormState as StageForm } from \"store/ducks/forms/addStage\";\r\n\r\n///// Helpers //////////////////////\r\nimport uploadDoc from 'helpers/uploadDoc';\r\nimport base64toBlob from \"helpers/base64toBlob\";\r\n\r\n////// Thunk ///////////////////////\r\n\r\n////// Types ///////////////////////\r\nimport { MStage } from \"store/types/models/workflow\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MOrganization, MPerson } from \"store/types/models/id\";\r\nimport { DropzoneFile } from \"store/store\";\r\nimport { DateType } from \"store/typedef\";\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n//\r\n//  extends the workflows duck to include thunk actions. workflows should be imported from here\r\n//\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\ninterface StageController extends BaseDuck<MStage> {\r\n    create: ActionCreator<['createStage']>;\r\n    getStageIdentifiers: ActionCreator<['getStageIdentifiers']>;\r\n    createNewTag: ActionCreator<['createStageTag']>;\r\n    createNewType: ActionCreator<['createStageType']>;\r\n    getOne: ActionCreator<['getStageDetails']>;\r\n    addStageMember: ActionCreator<['addStageMember']>;\r\n    addStageOrganization: ActionCreator<['addStageOrganization']>;\r\n    postNote: ActionCreator<['createNote']>;\r\n    addStageDocuments: ActionCreator<['addStageDocuments']>;\r\n    addStagePhotos: ActionCreator<['addStagePhotos']>;\r\n    updateStage: ActionCreator<['updateStage']>;\r\n    getCondensedTimesheetInfo: ActionCreator<['timesheetCondensedData']>;\r\n}\r\n\r\nexport const stages = stagesDuck as StageController\r\n\r\nexport const create: ActionCreator<['createStage']> = async (stageInfo: StageForm) => {\r\n\r\n        const arrDocuments = Object.values(stageInfo.documents);\r\n        const arrDocumentsPosted = [] as {location: string; thumb?: {location: string}; title: string}[]\r\n        const arrPhotosPosted = [] as {location: string, title: string, tags?: string[]}[]\r\n\r\n        for await (const file of arrDocuments) {\r\n            let docType: 'document' | 'photo' = 'document'\r\n            if (/\\.png$|\\.jpg$|\\.gif$|\\.tiff$|\\.jpeg/i.test(file.path)) {\r\n                docType = 'photo'\r\n            }\r\n            const docData = await uploadDoc(base64toBlob(file.base64), docType, file.path)\r\n            if (docData?.success && docData.files?.[docType]) {\r\n                if (docType === 'photo') {\r\n                    arrPhotosPosted.push({location: docData.files?.[docType], title: file.path })\r\n                } else if (docType == 'document') {\r\n                    arrDocumentsPosted.push({location: docData.files?.[docType].name, thumb: (docData.files?.[docType].thumb ? {location: docData.files?.[docType].thumb} : undefined), title: file.path })\r\n                }\r\n            }\r\n        }\r\n        const formData = {\r\n            ...stageInfo,\r\n            documents: arrDocumentsPosted,\r\n            photos: arrPhotosPosted\r\n        }\r\n        const actions = [\r\n            {\r\n                name: 'createStage',\r\n                data: formData\r\n            }\r\n        ] as const;\r\n        return {actions}\r\n    }\r\nstages.create = create;\r\n\r\nexport const getOne: ActionCreator<['getStageDetails']> = (stageId: string) => {\r\n    const actions = [{\r\n        name: 'getStageDetails',\r\n        data: {\r\n            stageId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.getOne = getOne;\r\n\r\nexport const getStageIdentifiers: ActionCreator<['getStageIdentifiers']> = (identifier: string) => {\r\n    const actions = [\r\n        {\r\n            name: 'getStageIdentifiers',\r\n            data: {\r\n                identifier\r\n            }\r\n        }\r\n    ] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.getStageIdentifiers = getStageIdentifiers;\r\n\r\nexport const createNewTag: ActionCreator<['createStageTag']> = (tag: string) => {\r\n    const actions = [{\r\n        name: 'createStageTag',\r\n        data: {\r\n            tag\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.createNewTag = createNewTag;\r\n\r\nexport const createNewType: ActionCreator<['createStageType']> = (title: string) => {\r\n    const actions = [{\r\n        name: 'createStageType',\r\n        data: {\r\n            title\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\n\r\nstages.createNewType = createNewType;\r\n\r\n\r\nexport const addStageMember: ActionCreator<['addStageMember']> = (stageId: MStage['_id'], organizationId: MOrganization['_id'], personId: MPerson['_id'], role: string) => {\r\n    const actions = [{\r\n        name: 'addStageMember',\r\n        data: {\r\n            stageId,\r\n            organizationId,\r\n            personId,\r\n            role\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\nstages.addStageMember = addStageMember;\r\n\r\nexport const addStageOrganization: ActionCreator<['addStageOrganization']> = (stageId: MStage['_id'], organizationId: MOrganization['_id'], role: string) => {\r\n    const actions = [{\r\n        name: 'addStageOrganization',\r\n        data: {\r\n            stageId,\r\n            organizationId,\r\n            role\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\nstages.addStageOrganization = addStageOrganization;\r\n\r\nexport const postNote: ActionCreator<['createNote']> = (body: string, stageId: MStage['_id']) => {\r\n    const actions = [{\r\n        name: 'createNote',\r\n        data: {\r\n            body,\r\n            stageId\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nstages.postNote = postNote;\r\n\r\nexport const addStageDocuments: ActionCreator<['addStageDocuments']> = async ( attachments: DropzoneFile[], stageId: MStage['_id']) => {\r\n\r\n    const arrDocumentsPosted = [] as {location: string, thumb?: {location: string}, title: string}[]\r\n\r\n    for ( const attachment of attachments ) {        \r\n        const newDoc = await uploadDoc(base64toBlob(attachment.base64), 'document', attachment.path)\r\n        if (newDoc?.success && newDoc.files?.document) {\r\n            arrDocumentsPosted.push(\r\n                {\r\n                    location: newDoc.files?.document.name, \r\n                    thumb: newDoc.files?.document.thumb \r\n                                ? {location: newDoc.files?.document.thumb} \r\n                                : undefined, \r\n                    title: attachment.path\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!attachments || !attachments.length) return { cancel: true }\r\n  \r\n    const actions = [{\r\n        name: 'addStageDocuments',\r\n        data: {\r\n            documents: arrDocumentsPosted,\r\n            stageId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\n\r\nstages.addStageDocuments = addStageDocuments;\r\n\r\nexport const addStagePhotos: ActionCreator<['addStagePhotos']> = async ( attachments: DropzoneFile[], stageId: MStage['_id'] ) => {\r\n\r\n    const arrPhotosPosted = [] as {location: string, title: string}[]\r\n\r\n    for ( const attachment of attachments ) {\r\n        const newPhoto = await uploadDoc(base64toBlob(attachment.base64), 'photo', attachment.path)\r\n        if (newPhoto?.success && newPhoto.files?.photo) {\r\n            arrPhotosPosted.push(\r\n                {\r\n                    location: newPhoto.files?.photo, \r\n                    title: attachment.path\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!attachments || !attachments.length) return { cancel: true }\r\n\r\n    const actions = [{\r\n        name: 'addStagePhotos',\r\n        data: {\r\n            photos: arrPhotosPosted,\r\n            stageId\r\n        }\r\n    }] as const;\r\n    return {actions};\r\n}\r\n\r\nstages.addStagePhotos = addStagePhotos;\r\n\r\ninterface StageUpdate {\r\n    metaData?: {\r\n        identifier?: string,\r\n        title?: string,\r\n        description?: string,\r\n        type?: string,\r\n        internalBudget?: number,\r\n        externalBudget?: number,\r\n        ownerId?: string,\r\n        estCompletionDate?: DateType\r\n    },\r\n    location?: {\r\n        coordinates?: [number, number],\r\n        properties?: {\r\n            description?: string;\r\n            city?: string;\r\n            state?: string;\r\n            zip?: string;\r\n        }\r\n    },\r\n    tags?: string[]\r\n}\r\nexport const updateStage: ActionCreator<['updateStage']> = (stageId: MStage['_id'], updateObject: StageUpdate) => {\r\n    const actions = [{\r\n        name: 'updateStage',\r\n        data: {stageId, ...updateObject}\r\n    }] as const;\r\n    return {actions};\r\n}\r\n\r\nstages.updateStage = updateStage\r\n\r\nexport const getCondensedTimesheetInfo: ActionCreator<['timesheetCondensedData']> = (personId: MPerson['_id'], activeOnly?: boolean) => {\r\n    const actions = [{\r\n        name: 'timesheetCondensedData',\r\n        data: {\r\n            personId,\r\n            activeOnly\r\n        }\r\n    }] as const;\r\n    return { actions };\r\n}\r\n\r\nstages.getCondensedTimesheetInfo = getCondensedTimesheetInfo","const base64toBlob = (dataURI: string): Blob => {\r\n    const splitDataURI = dataURI.split(',')\r\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\r\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\r\n\r\n    const ia = new Uint8Array(byteString.length)\r\n    for (let i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i)\r\n    }\r\n    return new Blob([ia], { type: mimeString })\r\n}\r\n\r\nexport default base64toBlob;","////// Packages //////////////////\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FalconColors } from 'components/falconTypes';\r\nimport dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputProps } from 'reactstrap'\r\nimport HappinDateTime, {DateTimeProps} from './HappinDateTime';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends Omit<InputProps, 'onChange'> {\r\n    onChange?: (date: string)=>void;\r\n    pickerProps?: Omit<DateTimeProps, 'setter' | 'value'>;\r\n    buttonColor?: FalconColors;\r\n    autoFillBlank?: boolean\r\n}\r\n\r\nconst DateTimeInputGroup: FC<Props> = ({dateFormat=\"MM/DD/YY\", timeFormat=\"hh:mm A\", value, onChange, onBlur, pickerProps, size, autoFillBlank, buttonColor=\"primary\", ...inputProps}) => {\r\n    const [dateValue, setDateValue] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [firstRender, setFirstRender] = useState(true)\r\n    const format = (dateFormat && timeFormat) ? (dateFormat + ' ' + timeFormat) : ( dateFormat || timeFormat )\r\n\r\n    useEffect(()=> {\r\n        if (firstRender) {\r\n            setFirstRender(false);\r\n            if (!value && !autoFillBlank) return;\r\n        }\r\n        \r\n        const d = dayjs(value)\r\n        if ( d.isValid() ) {\r\n            setDateValue( d.format( format ) )\r\n        } else {\r\n            setDateValue( value )\r\n        }\r\n        \r\n    }, [value])\r\n\r\n    function handleInputBlur() {\r\n        const d = dayjs(dateValue);\r\n        if ( d.isValid() ) {\r\n            if (onChange) onChange( d.format( format ) )\r\n        } else {\r\n            if (onChange) onChange( dateValue )\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup>\r\n                <Input \r\n                    onChange={e=>setDateValue(e.target.value)} \r\n                    onBlur={ handleInputBlur } \r\n                    value={dateValue}\r\n                    size={size}\r\n                    {...inputProps} \r\n                />\r\n                <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                        outline\r\n                        color={buttonColor}\r\n                        onClick={()=>setIsOpen(o=>!o)}\r\n                        size={size}\r\n                    >\r\n                        <FontAwesomeIcon icon='calendar' />\r\n                    </Button>\r\n                </InputGroupAddon>\r\n                \r\n            </InputGroup>\r\n            <HappinDateTime\r\n                        dateFormat={dateFormat}\r\n                        timeFormat={timeFormat}\r\n                        onChange={date => {\r\n                            const d = dayjs(date)\r\n                            if ( d.isValid() ) {\r\n                                setDateValue( d.format(format) )\r\n                                if (onChange) onChange( d.format(format) )\r\n                            }\r\n                        }}\r\n                        value={dateValue}\r\n                        dropLeft\r\n                        open={isOpen}\r\n                        onClose={(date)=>{\r\n                            setIsOpen(false);\r\n                            if(pickerProps?.onClose) pickerProps.onClose(date);\r\n                        }}\r\n                        {...pickerProps}\r\n                    />\r\n                \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DateTimeInputGroup\r\n\r\n//  <DateTimePicker \r\n//                         setter={date => {\r\n//                             const d = dayjs(date)\r\n//                             if ( d.isValid() ) {\r\n//                                 setDateValue( d.format(format) )\r\n//                                 if (onChange) onChange( d.format(format) )\r\n//                             }\r\n//                         }} \r\n//                         value={dateValue}\r\n//                         dropLeft\r\n//                         dateFormat={dateFormat}\r\n//                         timeFormat={timeFormat}\r\n//                         {...pickerProps}\r\n//                     /> ","import React, { FC } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport SpinnerLogo, { Props } from 'components/SpinnerLogo'\r\n\r\nconst Loader: FC<Props> = props => (\r\n  <Row className=\"flex-center py-5\">\r\n    <Col xs=\"auto\">\r\n      <SpinnerLogo width={50} {...props} />\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nexport default Loader;\r\n","import { stages } from 'store/thunks/workflow/stages'\r\nimport { MStage } from 'store/types/models/workflow';\r\nimport useLoadAndSelect from 'store/hooks/useLoadAndSelect'\r\n\r\nfunction useStage (stageId: MStage['_id']) {\r\n    return useLoadAndSelect<MStage>({\r\n        actionCreator: stages.getOne,\r\n        postParams: stageId,\r\n        selector: state => state.workflow.stages[stageId],\r\n        deduplicate: ['getStageDetails', stageId]\r\n    })\r\n}\r\n\r\nexport default useStage;","import base64toBlob from \"helpers/base64toBlob\";\r\nimport uploadDoc from \"helpers/uploadDoc\";\r\nimport { DropzoneFile } from \"store/store\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { ITaskStatus, MAssignment, MMilestone, MTask } from \"store/types/models/workflow\";\r\nimport { tasks as tasksDuck } from 'store/ducks/workflow';\r\nimport { BaseDuck } from \"store/ducks/BaseDuck\";\r\n\r\ninterface TasksController extends BaseDuck<MTask> {\r\n    create: ActionCreator<['addTask']>;\r\n    update: ActionCreator<['updateTask']>;\r\n    addTaskDocuments: ActionCreator<['addTaskDocuments']>;\r\n    createAssignment: ActionCreator<['createAssignment']>\r\n    updateAssignment: ActionCreator<['updateAssignment']>\r\n    getPersonAssignments: ActionCreator<[\"getPersonAssignments\"]>;\r\n    reorderAssignments: ActionCreator<\"reorderAssignment\"[]>;\r\n}\r\n\r\nexport const tasks = tasksDuck as TasksController\r\n\r\nexport const create: ActionCreator<['addTask']> = (newTask: Pick<MTask, 'title' | 'description' | 'startDate' | 'endDate' | 'isBillable' | 'budgetHours'>, milestoneId: MMilestone['_id']) => {\r\n        const actions = [{\r\n            name: 'addTask',\r\n            data: {\r\n                ...newTask,\r\n                milestoneId\r\n            }\r\n        }] as const;\r\n        return { actions }\r\n        //  const data = await dispatch(storeFetch<['addTask']>({actions}));\r\n\r\n        // if (data?.success && data.records?.[0]) {\r\n        //     const {newTask} = data.records[0];\r\n        //     const {workflows: w} = getState();\r\n\r\n        //     for ( const workflow of Object.values(w)) {\r\n        //         for (const stage of workflow.stages) {\r\n        //             for (const milestone of stage.milestones) {\r\n        //                 for (const task of milestone.tasks) {\r\n        //                     if (task._id === newTask) { \r\n        //                         const updateObject = {\r\n        //                             stages: [{\r\n        //                                 _id: stage._id,\r\n        //                                 milestones: [{\r\n        //                                     _id: milestone._id,\r\n        //                                     tasks: [newTask]\r\n        //                                 }]\r\n        //                             }]\r\n        //                         }\r\n        //                         dispatch( workflows.upsert(updateObject, workflow._id))\r\n        //                         return data;\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n}\r\ntasks.create = create\r\n\r\nexport const update: ActionCreator<['updateTask']> = (updateObject: Partial<MTask> & {taskId: MTask['_id']; progress?: number; status?: string}) => {\r\n    const actions = [{\r\n        name: 'updateTask',\r\n        data: updateObject\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.update = update;\r\n\r\nexport const addTaskDocuments: ActionCreator<['addTaskDocuments']> = async ( attachments: DropzoneFile[], taskId: MTask['_id']) => {\r\n\r\n    const arrDocumentsPosted = [] as {location: string, thumb?: {location: string}, title: string}[]\r\n\r\n    for ( const attachment of attachments ) {        \r\n        const newDoc = await uploadDoc(base64toBlob(attachment.base64), 'document', attachment.path)\r\n        if (newDoc?.success && newDoc.files?.document) {\r\n            arrDocumentsPosted.push(\r\n                {\r\n                    location: newDoc.files?.document.name, \r\n                    thumb: newDoc.files?.document.thumb \r\n                                ? {location: newDoc.files?.document.thumb} \r\n                                : undefined, \r\n                    title: attachment.path\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!attachments || !attachments.length) return { cancel: true }\r\n  \r\n    const actions = [{ \r\n        name: 'addTaskDocuments',\r\n        data: {\r\n            documents: arrDocumentsPosted,\r\n            taskId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\ntasks.addTaskDocuments = addTaskDocuments;\r\n\r\nexport const createAssignment: ActionCreator<['createAssignment']> = ( taskId: MTask['_id'], assignees: MPerson['_id'][], description: string, assignedHours: number, dueDate: string) => {\r\n    const actions = [{\r\n        name: 'createAssignment',\r\n        data: {\r\n            taskId,\r\n            assignment: {\r\n                assignees,\r\n                description,\r\n                assignedHours,\r\n                dueDate\r\n            }\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.createAssignment = createAssignment;\r\n\r\ninterface IUpdateAssignmentOptions {\r\n    status?: ITaskStatus;\r\n    complete?: boolean;\r\n    assignees?: MPerson['_id'][];\r\n    description?: string;\r\n    assignedHours?: number;\r\n    dueDate?: string;\r\n}\r\n\r\nexport const updateAssignment: ActionCreator<['updateAssignment']> = ( assignmentId: MAssignment['_id'], assignmentUpdate: IUpdateAssignmentOptions) => {\r\n    const actions = [{\r\n        name: 'updateAssignment',\r\n        data: {\r\n            assignmentId,\r\n            ...assignmentUpdate\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.updateAssignment = updateAssignment;\r\n\r\nexport const getPersonAssignments: ActionCreator<[\"getPersonAssignments\"]> = (personId: MPerson['_id']) => {\r\n    const actions = [{\r\n        name: 'getPersonAssignments',\r\n        data: {\r\n            personId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.getPersonAssignments = getPersonAssignments;\r\n\r\ninterface ReorderAssignmentProp {\r\n    assignmentId: MAssignment['_id'];\r\n    sortIndex: number;\r\n    category: string;\r\n}\r\n\r\nexport const reorderAssignments: ActionCreator<\"reorderAssignment\"[]> = (items: ReorderAssignmentProp[]) => {\r\n    const actions = items.map( data => ({\r\n        name: 'reorderAssignment',\r\n        data\r\n    } as const))\r\n    return { actions }\r\n}\r\ntasks.reorderAssignments = reorderAssignments","import React, { FC } from 'react';\r\n\r\ninterface Props {\r\n    onClickPrev: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    onClickSwitch: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    onClickNext: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    switchContent: React.ReactNode;\r\n    switchColSpan?: number;\r\n    switchProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement> & {[extendedProp: string]: any};\r\n}\r\n\r\nconst ViewNavigation: FC<Props> = ( { onClickPrev, onClickSwitch, onClickNext, switchContent, switchColSpan, switchProps } ) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<th className=\"rdtPrev\" onClick={ onClickPrev }>\r\n\t\t\t\t<span>‹</span>\r\n\t\t\t</th>\r\n\t\t\t<th className=\"rdtSwitch\" colSpan={ switchColSpan } onClick={ onClickSwitch } {...switchProps}>\r\n\t\t\t\t{ switchContent }\r\n\t\t\t</th>\r\n\t\t\t<th className=\"rdtNext\" onClick={ onClickNext }>\r\n\t\t\t\t<span>›</span>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default ViewNavigation;","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit, FlexibleDateType, RenderDateFunction } from '../types/HappinDateTime';\r\n\r\nimport dayjs from 'dayjs';\r\nimport localeData from 'dayjs/plugin/localeData';\r\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\r\ndayjs.extend(LocalizedFormat);\r\ndayjs.extend(localeData);\r\n\r\n\r\nconst DEFAULT_RENDER_DAY: RenderDateFunction = ( props, date ) => <td { ...props }>{ date.date() }</td>\r\nconst DEFAULT_VALID_DATE_CHECK = () => true;\r\n\r\ninterface Props {\r\n    renderDay?: RenderDateFunction;\r\n    isValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n    viewDate: dayjs.Dayjs;\r\n    navigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n    showView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n    timeFormat?: string | boolean;\r\n    selectedDate: dayjs.Dayjs;\r\n    updateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n    // setSelectedDate: (date: dayjs.Dayjs | ((date: FlexibleDateType)=>dayjs.Dayjs) )=>void\r\n}\r\n\r\nconst DaysView: FC<Props> = ({\r\n    renderDay=DEFAULT_RENDER_DAY, \r\n    isValidDate=DEFAULT_VALID_DATE_CHECK,\r\n    viewDate,\r\n    navigate,\r\n    showView,\r\n    timeFormat,\r\n    selectedDate,\r\n    updateDate\r\n}) => {\r\n\r\n    const date = viewDate;\r\n    const dat = dayjs(viewDate.toISOString())\r\n\t\t\r\n    const startOfMonth = date.clone().startOf('month');\r\n    const endOfMonth = date.clone().endOf('month');\r\n    \r\n    // We need 42 days in 6 rows\r\n    // starting in the last week of the previous month\r\n    const rows: React.ReactNode[][] = [\r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7],\r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7]\r\n    ];\r\n\r\n    const startDate = dat.startOf('month').startOf('week');\r\n\r\n    // const setDate = (renderDate: dayjs.Dayjs) => {\r\n    //     setSelectedDate( date => dayjs.isDayjs(date) \r\n    //                                 ? date.year(renderDate.year())\r\n    //                                         .month(renderDate.month())\r\n    //                                         .date(renderDate.date())\r\n    //                                 : renderDate \r\n    //     )\r\n    // }\r\n    const endDate = startDate.add( 42, 'd' );\r\n    let renderDate = startDate\r\n    for (const row of rows) {\r\n        for (const i in row) {\r\n            const valid = isValidDate(renderDate.startOf('day')) || isValidDate( renderDate.endOf('day') )\r\n            row[i] = renderDay(\r\n                {\r\n                    key: renderDate.format('MMDDYYhh'),\r\n                    'data-value': renderDate.date(),\r\n                    'data-month': renderDate.month(),\r\n                    'data-year': renderDate.year(),\r\n                    className: classNames('rdtDay', {\r\n                        'rdtOld': renderDate.isBefore( startOfMonth ),\r\n                        'rdtNew': renderDate.isAfter( endOfMonth ),\r\n                        'rdtActive': selectedDate && renderDate.isSame( selectedDate, 'day' ),\r\n                        'rdtToday': renderDate.isSame( dayjs(), 'day' ),\r\n                        'rdtDisabled': !valid\r\n                    }),\r\n                    onClick: valid ? updateDate : undefined\r\n                }, \r\n                renderDate, \r\n                selectedDate\r\n            )\r\n            renderDate = renderDate.add(1, 'day')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"rdtDays\">\r\n            <table>\r\n                <thead>\r\n                    <ViewNavigation\r\n                        onClickPrev={ () => navigate( -1, 'month' ) }\r\n                        onClickSwitch={ () => showView( 'months', viewDate ) }\r\n                        onClickNext={ () => navigate( 1, 'month' ) }\r\n                        switchContent={ dat.format('MMM YYYY') }\r\n                        switchColSpan={5}\r\n                        switchProps={ { 'data-value': viewDate.month() } }\r\n                    />\r\n                    <tr>\r\n                        { dayjs.weekdaysMin().map( (day, index) => (\r\n                            <th key={ day + index } className=\"dow\">{ day }</th>\r\n                        )) }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { rows.map( (r, i) => (\r\n                        <tr key={ `${endDate.month()}_${i}` }>{ r }</tr>\r\n                    )) }\r\n                </tbody>\r\n                { timeFormat &&\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td onClick={ () => showView('time', viewDate) }\r\n                                colSpan={7}\r\n                                className=\"rdtTimeToggle\">\r\n                                { date.format( timeFormat === true ? 'LT' : timeFormat) }\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                 }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DaysView","import dayjs from 'dayjs';\r\nimport React, { FC } from 'react';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit, FlexibleDateType, RenderMonthFunction } from '../types/HappinDateTime';\r\nimport classNames from 'classnames';\r\n\r\ninterface Props {\r\n\trenderMonth?: RenderMonthFunction;\r\n\tisValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n\tviewDate: dayjs.Dayjs;\r\n\tnavigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n\tshowView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n\tselectedDate: dayjs.Dayjs;\r\n\tupdateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n}\r\n\r\n\r\nconst MonthsView: FC<Props> = ({\r\n\tviewDate,\r\n\trenderMonth=(props, month, year)=><td {...props}>{dayjs().year(year).month(month).format('MMM')}</td>,\r\n\tisValidDate,\r\n\tnavigate,\r\n\tshowView,\r\n\tselectedDate,\r\n\tupdateDate\r\n}) => {\r\n\tconst year = viewDate?.year();\r\n\r\n\tfunction isDisabledMonth( month: number ) {\r\n\r\n\t\tif ( !isValidDate ) {\r\n\t\t\t// If no validator is set, all days are valid\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If one day in the month is valid, the month should be clickable\r\n\t\tconst startDate = viewDate?.month(month).date(1);\r\n\t\tlet day = startDate?.endOf( 'month' );\r\n\r\n\t\twhile ( day.isAfter(startDate) ) {\r\n\t\t\tif ( isValidDate( day ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tday = day.subtract(1, 'day');\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst rows: React.ReactNode[][] = [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ];\r\n\tlet month = 0;\r\n\tfor ( const row of rows ) {\r\n\t\tfor (const index in row) {\r\n\t\t\trow[index] = renderMonth(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: month, \r\n\t\t\t\t\tclassName: classNames('rdtMonth', {\r\n\t\t\t\t\t\t'rdtDisabled': isDisabledMonth( month ),\r\n\t\t\t\t\t\t'rdtActive': selectedDate.year() === viewDate.year() && selectedDate.month() === month\r\n\t\t\t\t\t}), \r\n\t\t\t\t\t'data-year': viewDate.year(),\r\n\t\t\t\t\t'data-value': month,\r\n\t\t\t\t\tonClick: isDisabledMonth( month ) ? undefined : updateDate\r\n\t\t\t\t},\r\n\t\t\t\tmonth,\r\n\t\t\t\tviewDate?.year(),\r\n\t\t\t\tselectedDate\r\n\t\t\t);\r\n\t\t\tmonth++\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\t\r\n\treturn (\r\n\t\t<div className=\"rdtMonths\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<ViewNavigation\r\n\t\t\t\t\t\tonClickPrev={ () => navigate( -1, 'year' ) }\r\n\t\t\t\t\t\tonClickSwitch={ () => showView( 'years', viewDate ) }\r\n\t\t\t\t\t\tonClickNext={ () => navigate( 1, 'year' ) }\r\n\t\t\t\t\t\tswitchContent={ year }\r\n\t\t\t\t\t\tswitchColSpan={2}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ rows.map( (months, i) => (\r\n\t\t\t\t\t\t<tr key={i}>{ months }</tr>\r\n\t\t\t\t\t)) }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MonthsView;","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit,  FlexibleDateType,  RenderYearFunction } from '../types/HappinDateTime';\r\n\r\ninterface Props {\r\n\trenderYear?: RenderYearFunction;\r\n\tisValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n\tviewDate: dayjs.Dayjs;\r\n\tnavigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n\tshowView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n\tselectedDate: dayjs.Dayjs;\r\n\tupdateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n}\r\n\r\nconst YearsView: FC<Props> = ({\r\n\trenderYear=( props, year ) => <td { ...props }>{ year }</td>,\r\n\tisValidDate,\r\n\tviewDate,\r\n\tnavigate,\r\n\tshowView,\r\n\tselectedDate,\r\n\tupdateDate\r\n}) => {\r\n\tconst [disabledYears, setDisabledYears] = useState({} as Record<number, boolean>);\r\n\r\n\tconst viewYear = viewDate?.year();\r\n\tconst selectedYear = selectedDate?.year();\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetDisabledYears({})\r\n\t}, [isValidDate])\r\n\r\n\t// 12 years in 3 rows for every view\r\n\r\n\tfunction isDisabledYear( year: number ) {\r\n\t\tif ( disabledYears[year] !== undefined ) {\r\n\t\t\treturn disabledYears[year];\r\n\t\t}\r\n\r\n\t\tif ( !isValidDate ) {\r\n\t\t\t// If no validator is set, all days are valid\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If one day in the year is valid, the year should be clickable\r\n\t\tconst startDate = dayjs().year(year).month(0).date(1);\r\n\r\n\t\tlet day = startDate.endOf( 'year' );\r\n\r\n\t\twhile ( day.isAfter(startDate) ) {\r\n\t\t\tif ( isValidDate( day ) ) {\r\n\t\t\t\tsetDisabledYears( cache => ({...cache, [year]: false}) );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tday = day.subtract(1, 'day');\r\n\t\t}\r\n\r\n\t\tsetDisabledYears( cache => ({...cache, [year]: true}) );\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst _updateSelectedYear = (event: React.MouseEvent<HTMLTableDataCellElement>) => {\r\n\t\tupdateDate( event );\r\n\t}\r\n\r\n\tconst rows: React.ReactNode[][] = [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ];\r\n\tlet year = viewYear - 1;\r\n\tfor ( const row of rows ) {\r\n\t\tfor (const index in row) {\r\n\t\t\trow[index] = renderYear(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: year, \r\n\t\t\t\t\tclassName: classNames('rdtYear', {\r\n\t\t\t\t\t\t'rdtDisabled': isDisabledYear( year ),\r\n\t\t\t\t\t\t'rdtActive': selectedYear === year\r\n\t\t\t\t\t}), \r\n\t\t\t\t\t'data-value': year, \r\n\t\t\t\t\tonClick: isDisabledYear( year ) ? undefined : _updateSelectedYear\r\n\t\t\t\t},\r\n\t\t\t\tyear,\r\n\t\t\t\tselectedDate\r\n\t\t\t);\r\n\t\t\tyear++;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"rdtYears\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<ViewNavigation\r\n\t\t\t\t\t\tonClickPrev={ () => navigate( -10, 'year' ) }\r\n\t\t\t\t\t\tonClickSwitch={ () => showView( 'years', viewDate ) }\r\n\t\t\t\t\t\tonClickNext={ () => navigate( 10, 'year' ) }\r\n\t\t\t\t\t\tswitchContent={ `${viewYear}-${viewYear + 9}` }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ rows.map( (years, i) => (\r\n\t\t\t\t\t\t<tr key={i}>{ years }</tr> \r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default YearsView;","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { CalendarViewOption, FlexibleDateType, TimeConstraintConfig, TimePartExtended, TimePart } from '../types/HappinDateTime';\r\n\r\nconst DEFAULT_CONSTRAINTS: TimeConstraintConfig = {\r\n\thours: {\r\n\t\tmin: 0,\r\n\t\tmax: 23,\r\n\t\tstep: 1\r\n\t},\r\n\tminutes: {\r\n\t\tmin: 0,\r\n\t\tmax: 59,\r\n\t\tstep: 1\r\n\t},\r\n\tseconds: {\r\n\t\tmin: 0,\r\n\t\tmax: 59,\r\n\t\tstep: 1\r\n\t},\r\n\tmilliseconds: {\r\n\t\tmin: 0,\r\n\t\tmax: 999,\r\n\t\tstep: 1\r\n\t}\r\n};\r\n\r\nfunction pad( type: keyof TimeConstraintConfig, value: number ) {\r\n\tconst padValues = {\r\n\t\thours: 1,\r\n\t\tminutes: 2,\r\n\t\tseconds: 2,\r\n\t\tmilliseconds: 3\r\n\t};\r\n\r\n\tlet str = value.toString();\r\n\twhile ( str.length < padValues[ type ] )\r\n\t\tstr = '0' + str;\r\n\treturn str;\r\n}\r\n\r\ninterface Props {\r\n    viewDate: dayjs.Dayjs;\r\n    showView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n    timeFormat: string | true;\r\n    selectedDate: dayjs.Dayjs;\r\n\tdateFormat?: string | false;\r\n\tsetTime: (type: TimePart, value: number)=>void;\r\n\ttimeConstraints: TimeConstraintConfig;\r\n}\r\n\r\nconst TimeView: FC<Props> = ({\r\n\tviewDate,\r\n\tshowView,\r\n\ttimeFormat,\r\n\tdateFormat,\r\n\tselectedDate,\r\n\tsetTime,\r\n\ttimeConstraints\r\n}) => {\r\n\tconst [constraints, setConstraints] = useState(DEFAULT_CONSTRAINTS);\r\n\r\n\tconst [timeParts, setTimeParts] = useState({} as Record<TimePartExtended, string>);\r\n\r\n\tconst prevSelectedDate = useRef<dayjs.Dayjs>();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst appliedConstraints = {} as typeof DEFAULT_CONSTRAINTS;\r\n\r\n\t\t(Object.keys( DEFAULT_CONSTRAINTS ) as (keyof TimeConstraintConfig)[]).forEach( type => {\r\n\t\t\tappliedConstraints[ type ] = { ...DEFAULT_CONSTRAINTS[type], ...(timeConstraints[type] || {}) };\r\n\t\t});\r\n\r\n\t\tsetConstraints(appliedConstraints);\r\n\t}, [timeConstraints])\r\n\r\n\tuseEffect(()=>{\r\n\t\tif ( prevSelectedDate.current && selectedDate?.isSame(prevSelectedDate.current) ) return;\r\n\t\tconst date = (selectedDate || viewDate)\r\n\t\tsetTimeParts({\r\n\t\t\thours: pad( 'hours', date.hour() ),\r\n\t\t\tminutes: pad( 'minutes', date.minute() ),\r\n\t\t\tseconds: pad( 'seconds', date.second() ),\r\n\t\t\tmilliseconds: pad('milliseconds', date.millisecond() ),\r\n\t\t\tampm: date.hour() < 12 ? 'AM' : 'PM'\r\n\t\t})\r\n\t\tprevSelectedDate.current = selectedDate\r\n\t}, [selectedDate?.toISOString(), viewDate?.toISOString()])\r\n\r\n\tconst counters = [] as TimePartExtended[];\r\n\tconst format = timeFormat === true ? 'hh:mm A' : timeFormat\r\n\r\n\tif ( /h/i.test(format) ) {\r\n\t\tcounters.push('hours');\r\n\t\tif ( /m/.test(format) ) {\r\n\t\t\tcounters.push('minutes');\r\n\t\t\tif ( /s/.test(format) ) {\r\n\t\t\t\tcounters.push('seconds');\r\n\t\t\t\tif ( /S/.test(format) ) {\r\n\t\t\t\t\tcounters.push('milliseconds');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( /a/i.test(format) ) {\r\n\t\t\tcounters.push('ampm');\r\n\t\t}\r\n\t}\r\n\r\n\tconst items: React.ReactNode[] = [];\r\n\r\n\t\r\n\tfunction increase( type: TimePart ) {\r\n\t\t\r\n\t\tsetTimeParts( t => {\r\n\r\n\t\t\tconst tc = constraints[ type ];\r\n\r\n\t\t\tlet value = parseInt( t[ type ], 10) + tc.step!;\r\n\r\n\t\t\tif ( value > tc.max! )\r\n\r\n\t\t\tvalue = tc.min! + ( value - ( tc.max! + 1 ) );\r\n\t\t\treturn {\r\n\t\t\t\t...t,\r\n\t\t\t\t[type]: pad( type, value )\r\n\t\t\t}\r\n\t\t}) ;\r\n\t}\r\n\r\n\tfunction decrease( type: TimePart ) {\r\n\t\tsetTimeParts( t => {\r\n\t\t\tconst tc = constraints[ type ];\r\n\t\t\tlet value = parseInt( timeParts[ type ], 10) - tc.step!;\r\n\t\t\tif ( value < tc.min! )\r\n\t\t\t\tvalue = tc.max! + 1 - ( tc.min! - value );\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...t,\r\n\t\t\t\t[type]: pad( type, value )\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction _setTime(type: TimePart) {\r\n\t\tsetTimeParts( t => {\r\n\t\t\tsetTime( type, +t[ type ] );\r\n\t\t\treturn t\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tfunction onStartClicking( e: React.MouseEvent<HTMLSpanElement>, action: (type: TimePart)=>void, type: TimePartExtended ) {\r\n\t\tif ( e && e.button && e.button !== 0 ) {\r\n\t\t\t// Only left clicks, thanks\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif ( type === 'ampm' ) {\r\n\t\t\tlet intHours = +timeParts.hours!;\r\n\t\t\r\n\t\t\tif ( intHours >= 12 ) {\r\n\t\t\t\tintHours -= 12;\r\n\t\t\t} else {\r\n\t\t\t\tintHours += 12;\r\n\t\t\t}\r\n\r\n\t\t\tsetTime( 'hours', intHours );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taction( type ) \r\n\r\n\t\tlet increaseTimer: NodeJS.Timeout\r\n\r\n\t\tconst timer = setTimeout( () => {\r\n\t\t\tincreaseTimer = setInterval( () => {\r\n\t\t\t\taction( type )\r\n\t\t\t}, 70);\r\n\t\t}, 500);\r\n\r\n\t\tconst mouseUpListener = () => {\r\n\t\t\tclearTimeout( timer );\r\n\t\t\tclearInterval( increaseTimer );\r\n\t\t\t_setTime( type );\r\n\t\t\tdocument.removeEventListener( 'mouseup', mouseUpListener );\r\n\t\t\tdocument.removeEventListener( 'touchend', mouseUpListener );\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener( 'mouseup', mouseUpListener );\r\n\t\tdocument.addEventListener( 'touchend', mouseUpListener );\r\n\t}\r\n\r\n\t// function renderCounter( type: TimePartExtended, value: string | number ) {\r\n\t// \tif ( type === 'hours' && /a/i.test(format) ) {\r\n\t// \t\tvalue = ( +value - 1 ) % 12 + 1;\r\n\r\n\t// \t\tif ( +value === 0 ) {\r\n\t// \t\t\tvalue = 12;\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \tif ( type === 'ampm' ) {\r\n\t// \t\tif ( /A/.test(format) ) {\r\n\t// \t\t\tvalue = viewDate.format('A');\r\n\t// \t\t}\r\n\t// \t\telse {\r\n\t// \t\t\tvalue = viewDate.format('a');\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \treturn (\r\n\t\t\t\r\n\t// \t);\r\n\t// }\r\n\r\n\t// counters.forEach( (c, i) => {\r\n\t\t\r\n\t// });\r\n\r\n\treturn (\r\n\t\t<div className=\"rdtTime\">\r\n\t\t\t<table>\r\n\t\t\t\t{ dateFormat && \r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td className=\"rdtSwitch\" colSpan={4} onClick={ () => showView('days', viewDate) }>\r\n\t\t\t\t\t\t\t\t{ (selectedDate || viewDate).format( dateFormat ) }\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t}\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div className=\"rdtCounters\">\r\n\t\t\t\t\t\t\t\t{ counters.map( (c, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{ !!i && (c !== 'ampm') && <div key={ `sep${i}` } className=\"rdtCounterSeparator\">:</div>}\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={ c } className=\"rdtCounter\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rdtBtn\" onMouseDown={ e => onStartClicking( e, increase, c)}>▲</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"rdtCount\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ( c === 'hours' && /a/i.test(format) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? (( +timeParts[c] - 1 ) % 12 + 1) || 12 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: c === \"ampm\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? dayjs().hour(+timeParts.hours).format(/A/.test(format) ? ' A' : ' a') \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: timeParts[c] \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rdtBtn\" onMouseDown={ e => onStartClicking( e, decrease, c)}>▼</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default TimeView\r\n\r\n","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport DaysView from './views/DaysView';\r\nimport MonthsView from './views/MonthsView';\r\nimport YearsView from './views/YearsView';\r\nimport TimeView from './views/TimeView';\r\nimport { CalendarViewOption, FlexibleDateType, RenderDateFunction, RenderMonthFunction, RenderYearFunction, TimeConstraintConfig } from './types/HappinDateTime';\r\nimport classNames from 'classnames';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\ninterface ClickOutProps extends React.HTMLProps<HTMLDivElement> {\r\n\tclassName: string;\r\n\tchildren: React.ReactNode;\r\n\tonClickOut: ( e: MouseEvent )=>void\r\n}\r\n\r\n\r\n// const ClickableWrapper: FC<ClickOutProps> = ({className, children, onClickOut, ...props}) => {\r\n// \tconst wrapperId = useRef(v4());\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconsole.log('adding')\r\n// \t\tfunction handleClickOutside(e: MouseEvent) {\r\n\t\t\t\r\n// \t\t\tconst wrapperEl = document.getElementById('rdtPickerWrapper');\r\n// \t\t\tconsole.log('clicked')\r\n// \t\t\tif (!wrapperEl) return\r\n// \t\t\tif ( !wrapperEl?.contains( e.target ) ) onClickOut(e)\r\n// \t\t}\r\n\r\n// \t\tdocument.addEventListener('click', handleClickOutside);\r\n\r\n// \t\treturn ()=>document.removeEventListener('click', handleClickOutside);\r\n\r\n// \t}, [wrapperId.current])\r\n\r\n// \treturn (\r\n// \t\t<div id={wrapperId.current} className={ className } {...props} >\r\n// \t\t\t{ children }\r\n// \t\t</div>\r\n// \t);\r\n\r\n// }\r\n\r\nclass ClickOutBase extends React.Component<ClickOutProps> {\r\n\tcontainer = React.createRef<HTMLDivElement>();\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={ this.props.className } ref={ this.container }>\r\n\t\t\t\t{ this.props.children }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\thandleClickOutside(e: MouseEvent) {\r\n\t\tthis.props.onClickOut( e );\r\n\t}\r\n\r\n\tsetClickOutsideRef() {\r\n\t\treturn this.container.current;\r\n\t}\r\n}\r\n\r\nconst ClickableWrapper = onClickOutside( ClickOutBase );\r\n\r\n\r\nconst viewModes: Record<string, CalendarViewOption> = {\r\n\tYEARS: 'years',\r\n\tMONTHS: 'months',\r\n\tDAYS: 'days',\r\n\tTIME: 'time',\r\n} as const;\r\n\r\nconst nofn = function () {};\r\n\r\nexport interface DateTimeProps {\r\n\tid?: string,\r\n\tvalue?: FlexibleDateType,\r\n\tinitialValue?: FlexibleDateType,\r\n\tinitialViewMode?: CalendarViewOption,\r\n\tonClose?: (date?: FlexibleDateType)=>void,\r\n\tonChange?: (date?: string)=>void,\r\n\tonNavigate?: (view: CalendarViewOption)=>void,\r\n\tonBeforeNavigate?: (view: CalendarViewOption, currentView: CalendarViewOption, date: FlexibleDateType)=>CalendarViewOption,\r\n\tonNavigateBack?: ( modifier: number, unit: dayjs.OpUnitType )=>void,\r\n\tonNavigateForward?: ( modifier: number, unit: dayjs.OpUnitType )=>void,\r\n\tupdateOnView?: CalendarViewOption,\r\n\tlocale?: string,\r\n\tiso?: boolean,\r\n\tdateFormat?: string | boolean,\r\n\ttimeFormat?: string | boolean,\r\n\ttimeConstraints?: TimeConstraintConfig,\r\n\tisValidDate?: (date?: dayjs.Dayjs | undefined) => boolean,\r\n\topen?: boolean,\r\n\tsetOpen?: (open: boolean)=>void;\r\n\tcloseOnSelect?: boolean,\r\n\trenderDay?: RenderDateFunction,\r\n\trenderMonth?: RenderMonthFunction,\r\n\trenderYear?: RenderYearFunction,\r\n\tclassName?: string,\r\n\tcloseOnClickOutside?: boolean;\r\n\tstaticDisplay?: boolean;\r\n\tdropLeft?: boolean;\r\n}\r\n\r\nconst DateTime: FC<DateTimeProps> = ({\r\n\tid,\r\n\tvalue,\r\n\tinitialValue,\r\n\tinitialViewMode,\r\n\tonClose=nofn,\r\n\tonChange=nofn,\r\n\tonNavigate=nofn,\r\n\tonBeforeNavigate=(e:any)=>e,\r\n\tonNavigateBack=nofn,\r\n\tonNavigateForward=nofn,\r\n\tupdateOnView,\r\n\tlocale,\r\n\tiso,\r\n\tdateFormat,\r\n\ttimeFormat,\r\n\ttimeConstraints={},\r\n\tisValidDate=()=>true,\r\n\topen,\r\n\tsetOpen,\r\n\tcloseOnSelect,\r\n\tcloseOnClickOutside=true,\r\n\trenderDay,\r\n\trenderMonth,\r\n\trenderYear,\r\n\tclassName='',\r\n\tstaticDisplay,\r\n\tdropLeft\r\n}) => {\r\n\r\n\tconst [currentView, setCurrentView] = useState( initialViewMode || ( dateFormat ? 'days' : timeFormat ? 'time' : 'years' ) );\r\n\tconst [viewDate, setViewDate] = useState( dayjs(value || initialValue) );\r\n\tconst [updateView, setUpdateView] = useState('time' as CalendarViewOption)\r\n\tconst [selectedDate, setSelectedDate] = useState( dayjs(value || initialValue) );\r\n\r\n\tconst [outputFormat, setOutputFormat] = useState('');\r\n\r\n\tuseEffect( () => {\r\n\t\tif (!value) return\r\n\t\tconst d = dayjs(value)\r\n\t\tif (d.isValid()) setViewDate(d)\r\n\t}, [value] )\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dateForm = dateFormat === true ? 'L' : dateFormat;\r\n\t\tconst timeForm = timeFormat === true ? 'LT' : timeFormat;\r\n\r\n\t\tsetOutputFormat( dateForm ? (timeForm ? dateForm + ' ' + timeForm : dateForm) : (timeForm ? timeForm : ''))\r\n\r\n\t}, [timeFormat, dateFormat]);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst d = dateFormat ? (dateFormat === true ? 'L' : dateFormat) : ''\r\n\r\n\t\tif ( updateOnView ) {\r\n\t\t\tsetUpdateView(updateOnView)\r\n\r\n\t\t} else if ( d.match(/[lLD]/) ) {\r\n\t\t\tsetUpdateView(viewModes.DAYS)\r\n\r\n\t\t} else if ( d.indexOf('M') !== -1 ) {\r\n\t\t\tsetUpdateView(viewModes.MONTHS)\r\n\r\n\t\t} else if ( d.indexOf('Y') !== -1 ) {\r\n\t\t\tsetUpdateView(viewModes.YEARS)\r\n\r\n\t\t} else { \r\n\t\t\tsetUpdateView(viewModes.TIME) \r\n\r\n\t\t}\r\n\r\n\t}, [dateFormat]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst d = dayjs(value);\r\n\t\tif ( d.isValid() ) {\r\n\t\t\tsetSelectedDate( d )\r\n\t\t} else {\r\n\t\t\tsetSelectedDate( dayjs() )\r\n\t\t}\r\n\t\t\r\n\t}, [value])\r\n\r\n\tconst _showView = ( view: CalendarViewOption, date: FlexibleDateType ) => {\r\n\t\tconst d = date || viewDate;\r\n\t\tconst nextView = onBeforeNavigate( view, currentView, d );\r\n\t\tif ( nextView && currentView !== nextView ) {\r\n\t\t\tonNavigate( nextView );\r\n\t\t\tsetCurrentView( nextView );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _onChange(value?: dayjs.Dayjs) {\r\n\t\tif (closeOnSelect) _closeCalendar();\r\n\t\tif (iso) {\r\n\t\t\tonChange( value?.toISOString() )\r\n\t\t} else {\r\n\t\t\tonChange( value?.format( outputFormat ) )\r\n\t\t}\r\n\t}\r\n\r\n\tconst _viewNavigate = ( modifier: number, unit: dayjs.OpUnitType ) => {\r\n\r\n\t\t// Subtracting is just adding negative time\r\n\t\tsetViewDate(viewDate => viewDate.add( modifier, unit ) );\r\n\r\n\t\tif ( modifier > 0 ) {\r\n\t\t\tonNavigateForward( modifier, unit );\r\n\t\t} else {\r\n\t\t\tonNavigateBack( -(modifier), unit );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _setTime = ( type: 'hours' | 'minutes' | 'seconds' | 'milliseconds', value: number ) => {\r\n\t\tconst date = selectedDate || viewDate;\r\n\t\tlet newDate: dayjs.Dayjs;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'hours':\r\n\t\t\t\tnewDate = date.hour( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'minutes':\r\n\t\t\t\tnewDate = date.minute( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'seconds':\r\n\t\t\t\tnewDate = date.second( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'milliseconds':\r\n\t\t\t\tnewDate = date.millisecond( value )\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tsetSelectedDate(newDate)\r\n\t\tsetViewDate(newDate)\r\n\t\t_onChange( newDate )\r\n\r\n\t}\r\n\r\n\tconst _closeCalendar = () => { \r\n\t\tif (setOpen) setOpen(false) \r\n\t\tonClose(selectedDate)\r\n\t}\r\n\t\r\n\tconst _handleClickOutside = () => {\r\n\t\tif ( open && closeOnClickOutside ) {\r\n\t\t\t_closeCalendar();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ClickableWrapper \r\n\t\t\tclassName={classNames('rdt', className, {\r\n\t\t\t\t'rdtStatic': !!staticDisplay,\r\n\t\t\t\t'rdtOpen': !!open\r\n\t\t\t})} \r\n\t\t\tonClickOut={ _handleClickOutside }\r\n\t\t>\r\n\t\t\t{/* { input && \r\n\t\t\t\trenderInput \r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<div> \r\n\t\t\t\t\t\t\t{ renderInput( inputProps, _openCalendar, _closeCalendar ) }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: <input { ...inputProps } />\r\n\t\t\t} */}\r\n\t\t\t<div id={id} className=\"rdtPicker rounded bg-light\" style={dropLeft ? {right: 0} : undefined}>\r\n\t\t\t\t{ currentView === 'years' && \r\n\t\t\t\t\t<YearsView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\trenderYear={ renderYear }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.YEARS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.MONTHS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}  }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'months' && \r\n\t\t\t\t\t<MonthsView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\trenderMonth={ renderMonth }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-year')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.month(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.MONTHS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.DAYS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'days' && \r\n\t\t\t\t\t<DaysView \r\n\t\t\t\t\t\trenderDay={ renderDay }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\ttimeFormat={ timeFormat }\r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-year')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.month(+e.currentTarget.getAttribute('data-month')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.date(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.DAYS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else if ( timeFormat ) {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.HOURS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'time' && timeFormat && \r\n\t\t\t\t\t<TimeView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\ttimeFormat={ timeFormat }\r\n\t\t\t\t\t\tdateFormat={ dateFormat === true ? 'L' : dateFormat }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tsetTime={ _setTime }\r\n\t\t\t\t\t\ttimeConstraints={ timeConstraints }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ClickableWrapper>\r\n\t)\r\n}\r\n\r\nexport default DateTime\r\n\r\n\r\n// export  class Datetime1 extends React.Component {\r\n\r\n\t// getUpdateOn( dateFormat ) {\r\n\t// \tif ( this.props.updateOnView ) {\r\n\t// \t\treturn this.props.updateOnView;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.match(/[lLD]/) ) {\r\n\t// \t\treturn viewModes.DAYS;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.indexOf('M') !== -1 ) {\r\n\t// \t\treturn viewModes.MONTHS;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.indexOf('Y') !== -1 ) {\r\n\t// \t\treturn viewModes.YEARS;\r\n\t// \t}\r\n\r\n\t// \treturn viewModes.DAYS;\r\n\t// }\r\n\r\n\t// viewToMethod = {days: 'date', months: 'month', years: 'year'};\r\n\t// nextView = { days: 'time', months: 'days', years: 'months'};\r\n\r\n\r\n\r\n\t// localMoment( date, format, props ) {\r\n\t// \tprops = props || this.props;\r\n\t// \tlet m = null;\r\n\r\n\t// \tif (props.utc) {\r\n\t// \t\tm = moment.utc(date, format, props.strictParsing);\r\n\t// \t} else if (props.displayTimeZone) {\r\n\t// \t\tm = moment.tz(date, format, props.displayTimeZone);\r\n\t// \t} else {\r\n\t// \t\tm = moment(date, format, props.strictParsing);\r\n\t// \t}\r\n\r\n\t// \tif ( props.locale )\r\n\t// \t\tm.locale( props.locale );\r\n\t// \treturn m;\r\n\t// }\r\n\r\n\t// componentDidUpdate( prevProps ) {\r\n\t// \tif ( prevProps === this.props ) return;\r\n\r\n\t// \tlet needsUpdate = false;\r\n\t// \tlet thisProps = this.props;\r\n\r\n\t// \t['locale', 'utc', 'displayZone', 'dateFormat', 'timeFormat'].forEach( function(p) {\r\n\t// \t\tprevProps[p] !== thisProps[p] && (needsUpdate = true);\r\n\t// \t});\r\n\r\n\t// \tif ( needsUpdate ) {\r\n\t// \t\tthis.regenerateDates();\r\n\t// \t}\r\n\r\n\t// \tif ( thisProps.value && thisProps.value !== prevProps.value ) {\r\n\t// \t\tthis.setViewDate( thisProps.value );\r\n\t// \t}\r\n\r\n\t// \tthis.checkTZ();\r\n\t// }\r\n\r\n\t// regenerateDates() {\r\n\t// \tconst props = this.props;\r\n\t// \tlet viewDate = this.state.viewDate.clone();\r\n\t// \tlet selectedDate = this.state.selectedDate && this.state.selectedDate.clone();\r\n\r\n\t// \tif ( props.locale ) {\r\n\t// \t\tviewDate.locale( props.locale );\r\n\t// \t\tselectedDate &&\tselectedDate.locale( props.locale );\r\n\t// \t}\r\n\t// \tif ( props.utc ) {\r\n\t// \t\tviewDate.utc();\r\n\t// \t\tselectedDate &&\tselectedDate.utc();\r\n\t// \t}\r\n\t// \telse if ( props.displayTimeZone ) {\r\n\t// \t\tviewDate.tz( props.displayTimeZone );\r\n\t// \t\tselectedDate &&\tselectedDate.tz( props.displayTimeZone );\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tviewDate.locale();\r\n\t// \t\tselectedDate &&\tselectedDate.locale();\r\n\t// \t}\r\n\r\n\t// \tlet update = { viewDate: viewDate, selectedDate: selectedDate};\r\n\t// \tif ( selectedDate && selectedDate.isValid() ) {\r\n\t// \t\tupdate.inputValue = selectedDate.format( this.getFormat('datetime') );\r\n\t// \t}\r\n\t\t\r\n\t// \tthis.setState( update );\r\n\t// }\r\n\r\n\t// getSelectedDate() {\r\n\t// \tif ( this.props.value === undefined ) return this.state.selectedDate;\r\n\t// \tlet selectedDate = this.parseDate( this.props.value, this.getFormat('datetime') );\r\n\t// \treturn selectedDate && selectedDate.isValid() ? selectedDate : false;\r\n\t// }\r\n\r\n\t// getInitialInputValue( selectedDate ) {\r\n\t// \tconst props = this.props;\r\n\t// \tif ( props.inputProps.value )\r\n\t// \t\treturn props.inputProps.value;\r\n\t\t\r\n\t// \tif ( selectedDate && selectedDate.isValid() )\r\n\t// \t\treturn selectedDate.format( this.getFormat('datetime') );\r\n\t\t\r\n\t// \tif ( props.value && typeof props.value === 'string' )\r\n\t// \t\treturn props.value;\r\n\t\t\r\n\t// \tif ( props.initialValue && typeof props.initialValue === 'string' )\r\n\t// \t\treturn props.initialValue;\r\n\t\t\r\n\t// \treturn '';\r\n\t// }\r\n\r\n\t// getInputValue() {\r\n\t// \tlet selectedDate = this.getSelectedDate();\r\n\t// \treturn selectedDate ? selectedDate.format( this.getFormat('datetime') ) : this.state.inputValue;\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Set the date that is currently shown in the calendar.\r\n\t//  * This is independent from the selected date and it's the one used to navigate through months or days in the calendar.\r\n\t//  * @param dateType date\r\n\t//  * @public\r\n\t//  */\r\n\t// setViewDate( date ) {\r\n\t// \tlet me = this;\r\n\t// \tlet logError = function() {\r\n\t// \t\treturn me.log( 'Invalid date passed to the `setViewDate` method: ' + date );\r\n\t// \t};\r\n\r\n\t// \tif ( !date ) return logError();\r\n\t\t\r\n\t// \tlet viewDate;\r\n\t// \tif ( typeof date === 'string' ) {\r\n\t// \t\tviewDate = this.localMoment(date, this.getFormat('datetime') );\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tviewDate = this.localMoment( date );\r\n\t// \t}\r\n\r\n\t// \tif ( !viewDate || !viewDate.isValid() ) return logError();\r\n\t// \tthis.setState({ viewDate: viewDate });\r\n\t// }\r\n\r\n// \t/**\r\n// \t * Set the view currently shown by the calendar. View modes shipped with react-datetime are 'years', 'months', 'days' and 'time'.\r\n// \t * @param TYPES.string mode \r\n// \t */\r\n// \tnavigate( mode ) {\r\n// \t\tthis._showView( mode );\r\n// \t}\r\n\r\n// \t_onInputFocus = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onFocus, e ) ) return;\r\n// \t\tthis._openCalendar();\r\n// \t}\r\n\r\n// \t_onInputChange = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onChange, e ) ) return;\r\n\r\n// \t\tconst value = e.target ? e.target.value : e;\r\n// \t\tconst localMoment = this.localMoment( value, this.getFormat('datetime') );\r\n// \t\tlet update = { inputValue: value };\r\n\r\n// \t\tif ( localMoment.isValid() ) {\r\n// \t\t\tupdate.selectedDate = localMoment;\r\n// \t\t\tupdate.viewDate = localMoment.clone().startOf('month');\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tupdate.selectedDate = null;\r\n// \t\t}\r\n\r\n// \t\tthis.setState( update, () => {\r\n// \t\t\tthis.props.onChange( localMoment.isValid() ? localMoment : this.state.inputValue );\r\n// \t\t});\r\n// \t}\r\n\r\n// \t_onInputKeyDown = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onKeyDown, e ) ) return;\r\n\r\n// \t\tif ( e.which === 9 && this.props.closeOnTab ) {\r\n// \t\t\tthis._closeCalendar();\r\n// \t\t}\r\n// \t}\r\n\r\n// \t_onInputClick = e => {\r\n// \t\t// Focus event should open the calendar, but there is some case where\r\n// \t\t// the input is already focused and the picker is closed, so clicking the input\r\n// \t\t// should open it again see https://github.com/arqex/react-datetime/issues/717\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onClick, e ) ) return;\r\n// \t\tthis._openCalendar();\r\n// \t}\r\n\r\n// \tcallHandler( method, e ) {\r\n// \t\tif ( !method ) return true;\r\n// \t\treturn method(e) !== false;\r\n// \t}\r\n// }\r\n\r\n// function log( message, method ) {\r\n// \tlet con = typeof window !== 'undefined' && window.console;\r\n// \tif ( !con ) return;\r\n\r\n// \tif ( !method ) {\r\n// \t\tmethod = 'warn';\r\n// \t}\r\n// \tcon[ method ]( '***react-datetime:' + message );\r\n// }\r\n\r\n\t// const inputProps = {\r\n\t// \ttype: 'text',\r\n\t// \tclassName: 'form-control',\r\n\t// \tvalue: getInputValue(),\r\n\t// \t...inputProps,\r\n\t// \tonFocus: _onInputFocus,\r\n\t// \tonChange: _onInputChange,\r\n\t// \tonKeyDown: _onInputKeyDown,\r\n\t// \tonClick: _onInputClick\r\n\t// }","import { ActionCreator } from \"store/types/interface/common\";\r\n\r\n// export const getStageOptions: ActionCreator<['getStageOptions']> = () => {\r\n//         const actions = [\r\n//             {\r\n//                 name: 'getStageOptions',\r\n//                 data: {}\r\n//             }\r\n//         ] as const;\r\n//         return { actions }\r\n// }\r\n\r\nexport const getStageTypes: ActionCreator<['getStageTypes']> = () => {\r\n        const actions = [\r\n            {\r\n                name: 'getStageTypes',\r\n                data: {}\r\n            }\r\n        ] as const;\r\n        return { actions }\r\n}\r\n\r\nexport const getStageTagOptions: ActionCreator<[\"getStageTagOptions\"]> = () => {\r\n        const actions = [\r\n            {\r\n                name: 'getStageTagOptions',\r\n                data: {}\r\n            }\r\n        ] as const;\r\n        return {actions}\r\n}\r\n\r\nexport const getStageMemberRoleOptions: ActionCreator<['getStageMemberRoleOptions']>= () => {\r\n        const actions = [\r\n            {\r\n                name: 'getStageMemberRoleOptions',\r\n                data: {}\r\n            }\r\n        ] as const;\r\n        return { actions }\r\n}\r\n\r\nexport const createMemberRole: ActionCreator<['createStageMemberRole']>= (role: string) => {\r\n        const actions = [\r\n            {\r\n                name: 'createStageMemberRole',\r\n                data: {\r\n                    role\r\n                }\r\n            }\r\n        ] as const\r\n        return {actions}\r\n}\r\n\r\nexport const getKanbanCategories: ActionCreator<['getKanbanCategories']> = () => {\r\n    const actions = [{\r\n        name: 'getKanbanCategories',\r\n        data: {\r\n\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nexport const setKanbanCategories: ActionCreator<['setKanbanCategories']> = (categories: string[]) => {\r\n    const actions = [{\r\n        name: 'setKanbanCategories',\r\n        data: {\r\n            categories\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nconst thunks = {\r\n    // getStageOptions,\r\n    getStageTypes,\r\n    getStageTagOptions\r\n}\r\n\r\nexport default thunks;","////// Packages //////////////////\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n\r\nconst UnderConstruction = () => (\r\n  <Card className=\"text-center\">\r\n    <CardBody className=\"p-5\">\r\n      <div className=\"display-1 text-200 fs-error\">Working On It</div>\r\n      <p className=\"lead mt-4 text-800 text-sans-serif font-weight-semi-bold\">\r\n        {`The page you're looking for is under construction.`}\r\n      </p>\r\n      <hr />\r\n      <p>\r\n        {`We are hard at work building the most intuitive business management app on the web`}\r\n        <a href=\"mailto:info@happin.design\" className=\"ml-1\">\r\n          We would love to hear from you. Contact Us\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link className=\"btn btn-primary btn-sm mt-3\" to=\"/\">\r\n        <FontAwesomeIcon icon=\"home\" className=\"mr-2\" />\r\n        Take me home\r\n      </Link>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default UnderConstruction;\r\n","////// Packages //////////////////\r\nimport React, { FC } from 'react'\r\nimport classNames from 'classnames';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\nimport { FalconColors } from './falconTypes';\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, 'size'> {\r\n    size: 'sm' | 'md' | 'lg';\r\n    color: FalconColors;\r\n    spinnerStyle?: React.CSSProperties;\r\n}\r\n\r\nconst BounceSpinner: FC<Props> = ({size, color, spinnerStyle, ...rest}) => {\r\n    const {className, ...divProps} = rest;\r\n    \r\n    return (\r\n        <div \r\n            className={classNames(\"bounce-spinner\", {\r\n                \"bounce-spinner-sm\": size === \"sm\",\r\n                \"bounce-spinner-md\": size === \"md\",\r\n                \"bounce-spinner-lg\": size === \"lg\"\r\n            }, className)} \r\n            {...divProps}\r\n        >\r\n            <div style={spinnerStyle} className={classNames(\"bounce1\", \"bg-\" + color)}></div>\r\n            <div style={spinnerStyle} className={classNames(\"bounce2\", \"bg-\" + color)}></div>\r\n            <div style={spinnerStyle} className={classNames(\"bounce3\", \"bg-\" + color)}></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BounceSpinner","import { useSelector } from 'react-redux'\r\nimport { SettingsState } from 'store/store'\r\n\r\nconst useSetting = <T extends keyof SettingsState>(settingName: T): SettingsState[T] => {\r\n    const settingValue = useSelector( state => state.app.settings[settingName] )\r\n    return settingValue\r\n}\r\n\r\nexport default useSetting","import { FalconColors } from \"components/falconTypes\";\r\nimport { ITaskStatus } from \"store/types/models/workflow\";\r\n\r\nexport const statusColorsMap: Record<ITaskStatus, FalconColors> = {\r\n    \"Not Started\": \"secondary\",\r\n    \"In Progress\": \"primary\",\r\n    \"Complete\": \"success\",\r\n    \"Running Late\": \"warning\",\r\n    \"Having Trouble\": \"warning\",\r\n    \"Waiting\": \"info\",\r\n    \"Past Due\": \"danger\"\r\n  };","////// Packages //////////////////\r\nimport React, { FC } from \"react\";\r\nimport {\r\n  Nav,\r\n  UncontrolledDropdown,\r\n  Media,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip,\r\n  Input,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from \"./Flex\";\r\nimport Avatar, { AvatarSize } from \"./Avatar\";\r\n\r\n// import usePeopleList, { BasicPerson } from 'store/hooks/person/usePeopleList';\r\n\r\n////// CommonJS Helpers //////////\r\nimport makeName from \"../helpers/makeName\";\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\nimport { $BasicPerson, MPerson } from \"store/types/models/id\";\r\n\r\ninterface Props {\r\n  avatarSize: AvatarSize;\r\n  showMembers: number;\r\n  people: ($BasicPerson | MPerson)[];\r\n  isShowMemberFixed?: boolean;\r\n  addMember?: boolean;\r\n  isTooltip?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst AvatarGroup: FC<Props> = ({\r\n  avatarSize,\r\n  showMembers,\r\n  people,\r\n  isShowMemberFixed = false,\r\n  addMember = false,\r\n  className\r\n}) => {\r\n  // const peopleList = people || [];\r\n  // const { value: avatars, ...avatarLoader } = usePeopleList(...peopleList);\r\n\r\n  return (\r\n    <Nav className={`avatar-group mb-0 align-items-center ${className}`}>\r\n      {people?.slice(0, showMembers).map((person, index) => {\r\n        return (\r\n          <UncontrolledDropdown direction=\"right\" nav key={index}>\r\n            <DropdownToggle\r\n              nav\r\n              caret={false}\r\n              className={index > 0 ? \"ml-n1 p-0\" : \"p-0\"}\r\n              id={`person-${person?._id}`}\r\n            >\r\n              <Avatar\r\n                src={person?.avatar?.location}\r\n                name={makeName(person?.name)}\r\n                size={avatarSize}\r\n              />\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"dropdown-md px-0 py-3\">\r\n              <Media className=\"align-items-center px-3\">\r\n                <div className=\"mr-2\">\r\n                  <Avatar\r\n                    src={person?.avatar?.location}\r\n                    name={makeName(person?.name)}\r\n                    size={avatarSize}\r\n                  />\r\n                </div>\r\n                <Media body>\r\n                  <h6 className=\"mb-0\">\r\n                    <Link\r\n                      className=\"text-900 stretched-link\"\r\n                      to={`/social/profile/${person._id}`}\r\n                    >\r\n                      {makeName(person?.name)}\r\n                    </Link>\r\n                  </h6>\r\n                  <p className=\"fs--2 mb-0\">{person?.position}</p>\r\n                </Media>\r\n              </Media>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        );\r\n      })}\r\n      {!isShowMemberFixed && (\r\n        <UncontrolledDropdown nav>\r\n          <DropdownToggle nav caret={false} className=\"ml-n1 p-0\">\r\n            {people && people?.length > showMembers && (\r\n              <Avatar\r\n                name={`+${people?.length - showMembers}`}\r\n                size={avatarSize}\r\n                isExact\r\n                mediaClass=\"avatar-button\"\r\n                className=\"mr-n1\"\r\n              />\r\n            )}\r\n            {addMember && (\r\n              <Avatar\r\n                icon=\"plus\"\r\n                size={avatarSize}\r\n                mediaClass=\"avatar-button\"\r\n              />\r\n            )}\r\n          </DropdownToggle>\r\n          <DropdownMenu className=\"dropdown-md\">\r\n            <h6 className=\"dropdown-header py-0 px-3 mb-0\">\r\n              {!addMember ? \"Board Members\" : \"Select Member\"}\r\n            </h6>\r\n            <DropdownItem divider />\r\n            {!addMember ? (\r\n              <Flex className=\"px-3\">\r\n                {people?.map((person) => (\r\n                  <Link\r\n                    className=\"text-900 \"\r\n                    to=\"/pages/profile\"\r\n                    key={person?._id}\r\n                    id={`Tooltip-${person?._id}`}\r\n                  >\r\n                    <Avatar\r\n                      src={person?.avatar?.location}\r\n                      className=\"mr-2\"\r\n                      size=\"xl\"\r\n                    />\r\n                    <UncontrolledTooltip\r\n                      placement=\"top\"\r\n                      target={`Tooltip-${person?._id}`}\r\n                    >\r\n                      {makeName(person?.name)}\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                ))}\r\n              </Flex>\r\n            ) : (\r\n              <>\r\n                <form className=\"px-3 mb-2\">\r\n                  <Input placeholder=\"Search team member\" bsSize=\"sm\" />\r\n                </form>\r\n                <ul className=\"list-unstyled\">\r\n                  {people?.map(person => (\r\n                    <li key={person?._id}>\r\n                      <Media\r\n                        tag=\"a\"\r\n                        className=\"align-items-center px-3 py-1 text-decoration-none\"\r\n                        href={`pages/profile`}\r\n                      >\r\n                        <Avatar\r\n                          src={person?.avatar?.location}\r\n                          name={makeName(person?.name)}\r\n                          className=\"mr-2\"\r\n                          size={avatarSize}\r\n                        />\r\n                        <Media body>\r\n                          <h6 className=\"mb-0\">{makeName(person?.name)}</h6>\r\n                        </Media>\r\n                      </Media>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","import { shallowEqual } from \"react-redux\";\r\nimport { getPersonAssignments } from \"store/thunks/workflow/tasks\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { AssignmentWithTaskInfo, TaskWithAssignmentInfo } from \"store/types/models/workflow\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useAssignments(personId: MPerson['_id']) {\r\n    return useLoadAndSelect({\r\n        actionCreator: getPersonAssignments,\r\n        selector: state => (Object.values(state.workflow.tasks) as TaskWithAssignmentInfo[])\r\n                            .filter( t => t.isMyAssignment )\r\n                            .reduce( (assignments, task) => [\r\n                                ...assignments, \r\n                                ...task.assignments\r\n                                    .filter(a => a.assignees.find(a => a.personId === personId))\r\n                                    .map(a => ({\r\n                                        ...a,\r\n                                        task: {\r\n                                            _id: task._id,\r\n                                            title: task.title\r\n                                        },\r\n                                        stage: task.stage\r\n                                    }))\r\n                                ], [] as AssignmentWithTaskInfo[]\r\n                            ),\r\n        equality: shallowEqual,\r\n        postParams: personId,\r\n        deduplicate: ['assignments', personId]\r\n    })\r\n}\r\n\r\nexport default useAssignments;","import { useSelector } from 'react-redux'\r\nimport useAssignments from './useAssignments'\r\n\r\nfunction useMyAssignments() {\r\n    const loginPersonId = useSelector(state => state.app.login.personId);\r\n    return useAssignments(loginPersonId || '') \r\n}\r\n\r\nexport default useMyAssignments"],"sourceRoot":""}
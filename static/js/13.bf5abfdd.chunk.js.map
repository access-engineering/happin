{"version":3,"sources":["layouts/management/assignments/KanbanColumnHeader.tsx","layouts/management/assignments/ColorPicker.tsx","compositions/SubmitButton.tsx","store/thunks/management.ts","layouts/management/assignments/AddToDo.tsx","layouts/management/assignments/helpers.ts","layouts/management/assignments/AssignmentCard.tsx","layouts/management/assignments/EditToDo.tsx","layouts/management/assignments/ToDoCard.tsx","layouts/management/assignments/KanbanColumn.tsx","layouts/management/assignments/KanbanHeader.tsx","store/hooks/management/useKanbanCategories.ts","store/hooks/management/useToDos.ts","layouts/management/assignments/Assignments.tsx","routes/management/ManagementRoutes.tsx","components/FormGroupInput.tsx","components/LoadingGateway.tsx","helpers/base64toBlob.ts","components/ButtonIcon.tsx","components/datetime/DateTimeInputGroup.tsx","components/Loader.tsx","store/thunks/workflow/tasks.ts","components/datetime/parts/ViewNavigation.tsx","components/datetime/views/DaysView.tsx","components/datetime/views/MonthsView.tsx","components/datetime/views/YearsView.tsx","components/datetime/views/TimeView.tsx","components/datetime/HappinDateTime.tsx","layouts/errors/UnderConstruction.tsx","store/thunks/settings.ts","components/BounceSpinner.tsx","helpers/statusColorsMap.tsx","components/AvatarGroup.tsx","store/hooks/workflow/useAssignments.ts","store/hooks/workflow/useMyAssignments.ts"],"names":["KanbanColumnHeader","category","items","className","length","UncontrolledDropdown","DropdownToggle","color","size","icon","DropdownMenu","right","DropdownItem","divider","toDoColors","ColorPicker","setColor","FormGroup","Label","for","Flex","justify","map","c","style","backgroundColor","width","height","onClick","SubmitButton","text","submitting","rest","Button","BounceSpinner","toDos","toDosDuck","createToDo","description","kanban","dueDate","actions","name","data","editToDo","toDoId","props","deleteToDo","getToDos","delimiter","reorderToDos","i","sortIndex","AddToDo","index","isOpen","setIsOpen","useState","setDescription","setDueDate","createToDoAction","useAction","a","post","success","toast","error","Modal","toggle","ModalHeader","ModalBody","FormGroupInput","id","type","placeholder","rows","value","onChange","e","target","DateTimeInputGroup","timeFormat","date","ModalFooter","loading","getItemStyle","isDragging","cursor","transform","transition","AssignmentCard","assignment","lastIndex","assignedIds","useSelector","state","app","login","personId","assignees","people","usePeopleList","history","useHistory","draggableId","_id","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","Card","CardBody","stage","identifier","title","Badge","statusColorsMap","status","task","split","str","dayjs","format","AvatarGroup","avatarSize","showMembers","stopPropagation","push","workflowId","EditToDo","toDo","editAction","useEffect","tag","align","ToDoCard","deleteAction","handleDelete","confirm","message","confirmColor","confirmText","cancelColor","cancelText","KanbanColumn","showForm","setShowForm","kanbanContainer","document","getElementById","scrollTop","scrollHeight","categoryItems","sort","b","sorta","sortb","classNames","droppableId","droppableProps","item","ButtonIcon","block","iconClassName","KanbanHeader","categories","setTitle","setCategories","setKanbanCategories","handleSubmit","Array","from","Set","undefined","Row","noGutters","Col","iconAlign","label","useKanbanCategories","useLoadAndSelect","actionCreator","getKanbanCategories","selector","options","deduplicate","useToDos","postParams","Object","values","management","equality","shallowEqual","compareArrays","array","dispatch","movedAssignments","movedToDos","config","find","tasksController","upsert","assignments","taskId","assignmentId","toDosController","handleResortOut","arr","get","slice","splicedIndex","findIndex","splice","set","handleResortIn","fromCategory","toCategory","draggedItem","_i","handleResortSame","spliced","Assignments","trappedCategories","setTrappedCategories","userCategories","useMyAssignments","assignmentsLoader","reorderAssignmentsAction","reorderAssignments","reorderToDosAction","containerRef","useRef","useDispatch","_categories","Map","cat","is","ipad","current","classList","add","mobile","safari","chrome","forEach","complete","aWithConfig","has","t","tWithConfig","LoadingGateway","dataLoader","keys","onDragEnd","result","newCat","newIndex","reason","destination","source","batch","categoriesMutableCopy","a2","t2","a1","t1","assignmentsToSend","toDosToSend","Promise","all","resolve","getBatchedActions","ManagmentRoutes","url","match","path","component","UnderConstruction","exact","to","formClass","feedback","valid","invalid","isTooltipFeedback","labelProps","inputProps","htmlFor","tooltip","children","xs","s","m","l","xl","join","base64toBlob","dataURI","splitDataURI","byteString","indexOf","atob","decodeURI","mimeString","ia","Uint8Array","charCodeAt","Blob","dateFormat","pickerProps","onBlur","autoFillBlank","buttonColor","dateValue","setDateValue","firstRender","setFirstRender","d","isValid","addonType","outline","o","dropLeft","open","onClose","Loader","tasks","tasksDuck","create","newTask","milestoneId","update","updateObject","addTaskDocuments","attachments","arrDocumentsPosted","attachment","uploadDoc","base64","newDoc","files","location","thumb","cancel","documents","createAssignment","assignedHours","updateAssignment","assignmentUpdate","getPersonAssignments","ViewNavigation","onClickPrev","onClickSwitch","onClickNext","switchContent","switchColSpan","switchProps","colSpan","extend","LocalizedFormat","localeData","DEFAULT_RENDER_DAY","DEFAULT_VALID_DATE_CHECK","DaysView","renderDay","isValidDate","viewDate","navigate","showView","selectedDate","updateDate","dat","toISOString","startOfMonth","clone","startOf","endOfMonth","endOf","startDate","endDate","renderDate","row","key","month","year","isBefore","isAfter","isSame","weekdaysMin","day","r","MonthsView","renderMonth","isDisabledMonth","subtract","months","YearsView","renderYear","disabledYears","setDisabledYears","viewYear","selectedYear","isDisabledYear","cache","_updateSelectedYear","event","years","DEFAULT_CONSTRAINTS","hours","min","max","step","minutes","seconds","milliseconds","pad","padValues","toString","TimeView","setTime","timeConstraints","constraints","setConstraints","timeParts","setTimeParts","prevSelectedDate","appliedConstraints","hour","minute","second","millisecond","ampm","counters","test","increase","tc","parseInt","decrease","onStartClicking","action","button","intHours","increaseTimer","timer","setTimeout","setInterval","mouseUpListener","clearTimeout","clearInterval","_setTime","removeEventListener","addEventListener","onMouseDown","ClickOutBase","container","React","createRef","this","onClickOut","Component","ClickableWrapper","onClickOutside","viewModes","YEARS","MONTHS","DAYS","TIME","nofn","DateTime","initialValue","initialViewMode","onNavigate","onBeforeNavigate","onNavigateBack","onNavigateForward","updateOnView","iso","locale","setOpen","closeOnSelect","closeOnClickOutside","staticDisplay","currentView","setCurrentView","setViewDate","updateView","setUpdateView","setSelectedDate","outputFormat","setOutputFormat","dateForm","timeForm","_showView","view","nextView","_onChange","_closeCalendar","_viewNavigate","modifier","unit","updatedDate","currentTarget","getAttribute","HOURS","newDate","href","getStageTypes","getStageTagOptions","getStageMemberRoleOptions","createMemberRole","role","spinnerStyle","divProps","isShowMemberFixed","addMember","person","direction","nav","caret","src","avatar","makeName","body","position","isExact","mediaClass","bsSize","placement","useAssignments","workflow","filter","isMyAssignment","reduce","loginPersonId"],"mappings":"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","file":"static/js/13.bf5abfdd.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { KanbanItem } from './KanbanColumn';\r\n\r\ninterface Props {\r\n  category: string;\r\n  items: KanbanItem[]\r\n}\r\n\r\nconst KanbanColumnHeader: FC<Props> = ({ category, items }) => {\r\n  return (\r\n    <div className=\"kanban-column-header\">\r\n      <h5 className=\"text-serif fs-0 mb-0\">\r\n        {category} <span className=\"text-500\">({items.length})</span>\r\n      </h5>\r\n      <UncontrolledDropdown className=\"text-sans-serif btn-reveal-trigger\">\r\n        <DropdownToggle color=\"reveal\" size=\"sm\" className=\"py-0 px-2\">\r\n          <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu right className=\"py-0\">\r\n          <DropdownItem>Add Card</DropdownItem>\r\n          <DropdownItem>Edit</DropdownItem>\r\n          <DropdownItem>Copy link</DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem className=\"text-danger\">Remove</DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumnHeader;\r\n","////// Packages //////////////////\r\nimport React, { FC } from 'react'\r\nimport { Label, FormGroup } from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from 'components/Flex';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\nexport const toDoColors = [\r\n    'rgb(235, 235, 200)',\r\n    'rgb(190, 230, 210)',\r\n    'rgb(230, 210, 240)',\r\n    'rgb(170, 200, 230)',\r\n    'rgb(240, 200, 200)'\r\n]\r\n\r\ninterface Props {\r\n    color?: string;\r\n    setColor: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst ColorPicker: FC<Props> = ({color, setColor}) => (\r\n    <FormGroup>\r\n        <Label for=\"colors\">Color</Label>\r\n        <Flex justify=\"between\">\r\n            {toDoColors.map( c => (\r\n                <div \r\n                    key={c}\r\n                    className={`cursor-pointer border ${color === c ? 'border-2x border-500' : ''}`} \r\n                    style={{backgroundColor: c, width: \"2rem\", height: \"2rem\"}} \r\n                    onClick={()=>setColor(c)}\r\n                />\r\n            ))}\r\n        </Flex>\r\n    </FormGroup>\r\n)\r\n\r\nexport default ColorPicker","////// Packages //////////////////\r\nimport BounceSpinner from 'components/BounceSpinner'\r\nimport React, { FC } from 'react'\r\nimport { Button, ButtonProps } from 'reactstrap'\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends ButtonProps {\r\n    text?: string;\r\n    submitting?: boolean;\r\n}\r\n\r\nconst SubmitButton: FC<Props> = ({text='Submit', submitting, color=\"primary\", ...rest}) => {\r\n    \r\n    \r\n    return (\r\n        <Button color={color} {...rest}>\r\n            {text}\r\n            {submitting && <BounceSpinner color=\"light\" size=\"sm\" /> }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default SubmitButton","import { BaseDuck } from \"store/ducks/BaseDuck\";\r\nimport { toDos as toDosDuck } from \"store/ducks/management\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MToDo } from \"store/types/models/management\";\r\n\r\ninterface ToDoController extends BaseDuck<MToDo> {\r\n    createToDo: ActionCreator<['createToDo']>;\r\n    editToDo: ActionCreator<['editToDo']>;\r\n    deleteToDo: ActionCreator<['deleteToDo']>;\r\n    getToDos: ActionCreator<['getToDos']>;\r\n    reorderToDos: ActionCreator<\"editToDo\"[]>;\r\n}\r\n\r\nexport const toDos = toDosDuck as ToDoController\r\n\r\nexport const createToDo: ActionCreator<['createToDo']> = (\r\n    description: string, \r\n    kanban: {category?: string, sortIndex: number}, \r\n    dueDate?: string,\r\n    color: string\r\n) => {\r\n    const actions = [{\r\n        name: 'createToDo',\r\n        data: {\r\n            description,\r\n            dueDate,\r\n            kanban,\r\n            color\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\ntoDos.createToDo = createToDo;\r\n\r\ninterface EditToDoProps {\r\n    description?: string, \r\n    dueDate?: string, \r\n    kanban?: {\r\n        category?: string, \r\n        sortIndex?: number,\r\n        color?: string;\r\n    },\r\n    complete?: boolean\r\n}\r\n\r\nexport const editToDo: ActionCreator<['editToDo']> = (toDoId: MToDo['_id'], props: EditToDoProps) => {\r\n    const actions = [{\r\n        name: 'editToDo',\r\n        data: {\r\n            toDoId,\r\n            ...props\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nexport const deleteToDo: ActionCreator<['deleteToDo']> = (toDoId: MToDo['_id']) => {\r\n    const actions = [{\r\n        name: 'deleteToDo',\r\n        data: {\r\n            toDoId\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nexport const getToDos: ActionCreator<['getToDos']> = (delimiter?: MToDo['_id']) => {\r\n    const actions = [{\r\n        name: 'getToDos',\r\n        data: {\r\n            delimiter\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\ninterface ReorderToDoProp {\r\n    toDoId: MToDo['_id'];\r\n    sortIndex: number;\r\n    category: string;\r\n}\r\n\r\nexport const reorderToDos: ActionCreator<\"editToDo\"[]> = (items: ReorderToDoProp[]) => {\r\n    const actions = items.map( i => ({\r\n        name: 'editToDo',\r\n        data: {\r\n            toDoId: i.toDoId,\r\n            kanban: {\r\n                sortIndex: i.sortIndex,\r\n                category: i.category\r\n            }\r\n        }\r\n    } as const))\r\n    return { actions }\r\n}\r\ntoDos.reorderToDos = reorderToDos;","////// Packages //////////////////\r\nimport React, { FC, useState } from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, FormGroup, Label } from 'reactstrap'\r\n\r\n////// Local Components //////////\r\nimport ColorPicker, { toDoColors } from './ColorPicker';\r\n\r\n////// Global Components /////////\r\nimport FormGroupInput from 'components/FormGroupInput'\r\nimport DateTimeInputGroup from 'components/datetime/DateTimeInputGroup';\r\nimport SubmitButton from 'compositions/SubmitButton';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Thunks ////////////////////\r\nimport { createToDo } from 'store/thunks/management';\r\n\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    category: string;\r\n    index: number;\r\n    isOpen: boolean,\r\n    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst AddToDo: FC<Props> = ({category, index, isOpen, setIsOpen}) => {\r\n    const [description, setDescription] = useState<string>();\r\n    const [dueDate, setDueDate] = useState<string>();\r\n    const [color, setColor] = useState(toDoColors[0]);\r\n    const createToDoAction = useAction( createToDo )\r\n\r\n    async function handleSubmit() {\r\n        const data = await createToDoAction.post(description, {category, sortIndex: index}, dueDate, color)\r\n        if (data?.success) {\r\n            toast.success('Created new to-do');\r\n            setIsOpen(false)\r\n        } else {\r\n            toast.error(data?.error || \"Something went wrong\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} toggle={()=>setIsOpen(false)}>\r\n            <ModalHeader className='bg-light border-bottom-0'>\r\n                Add To-Do\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <FormGroupInput\r\n                    id=\"todo-description\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter description...\"\r\n                    rows={ 4 }\r\n                    value={ description }\r\n                    onChange={ e => setDescription(e.target.value) }\r\n                />\r\n                <FormGroup>\r\n                    <Label for=\"todo-duedate\">Due Date</Label>\r\n                    <DateTimeInputGroup\r\n                        timeFormat={false}\r\n                        value={ dueDate }\r\n                        onChange={ date => setDueDate(date) }\r\n                    />\r\n                </FormGroup>\r\n                <ColorPicker color={color} setColor={setColor} />\r\n            </ModalBody>\r\n            <ModalFooter className='bg-light border-top-0'>\r\n                <SubmitButton\r\n                    submitting={createToDoAction.loading}\r\n                    onClick={handleSubmit}\r\n                />\r\n            </ModalFooter>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddToDo;","export const getItemStyle = (isDragging: boolean) => ({\r\n    // change background colour if dragging\r\n    cursor: isDragging ? 'grabbing' : 'grab',\r\n    transform: isDragging ? 'rotate(-3deg)' : '',\r\n    transition: 'all 0.3s ease-out'\r\n\r\n    // styles we need to apply on draggables\r\n  });","////// Packages //////////////////\r\nimport React, { FC, useContext } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  CardHeader,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip\r\n} from 'reactstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport AvatarGroup from 'components/AvatarGroup';\r\nimport Flex from 'components/Flex';\r\n\r\n////// CommonJS Helpers //////////\r\nimport { getItemStyle } from './helpers';\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\nimport { AssignmentWithTaskInfo, MAssignment } from 'store/types/models/workflow';\r\nimport { statusColorsMap } from 'helpers/statusColorsMap';\r\nimport dayjs from 'dayjs';\r\nimport usePeopleList from 'store/hooks/person/usePeopleList';\r\n\r\n\r\n\r\nexport interface KanbanAssignment extends AssignmentWithTaskInfo {\r\n  type: 'assignment'\r\n}\r\n\r\ninterface Props {\r\n    assignment: KanbanAssignment;\r\n    category: string;\r\n    index: number;\r\n    lastIndex: number\r\n}\r\n\r\nconst AssignmentCard: FC<Props> = ({ assignment, category, index, lastIndex }) => {\r\n  const loginPersonId = useSelector( state => state.app.login.personId );\r\n\r\n  const assignedIds = assignment.assignees.map(a => a.personId)\r\n  const {value: people} = usePeopleList(...assignedIds)\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Draggable draggableId={`draggable-assignment-${assignment._id}`} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          className=\"kanban-item\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Card\r\n            className=\"kanban-item-card\"\r\n            style={getItemStyle(snapshot.isDragging)}\r\n          >\r\n            <CardBody>\r\n              <Flex justify=\"between\">\r\n                <div>\r\n                  <h6 className=\"mb-1\">{assignment.stage.identifier}</h6>\r\n                  <p className=\"fs--2 my-0\"><i>{assignment.stage.title}</i></p>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <Badge \r\n                    className={`badge-soft-${statusColorsMap[assignment.status[assignment.status.length - 1].title]} d-inline-block py-1 mr-1 mb-1`} \r\n                    key={index + 10}\r\n                  >\r\n                    {assignment.status[assignment.status.length - 1].title}\r\n                  </Badge>\r\n                </div>\r\n              </Flex>\r\n              \r\n              <hr className=\"my-1\" />\r\n              <h6 className=\"mb-1\"><i>{assignment.task.title}</i></h6>\r\n              { assignment.description?.split('\\n').map((str, i) => <p className=\"mb-1 fs--1\" key={i}>{str}</p>) }\r\n              \r\n              <div className=\"kanban-item-footer\">\r\n                <div className=\"text-500\">\r\n                  {dayjs(assignment.dueDate).format(\"MM/DD/YYYY\")}\r\n                </div>\r\n                <div>\r\n                  <AvatarGroup avatarSize=\"m\" showMembers={ 6 } people={ people || []} />\r\n                </div>\r\n                <UncontrolledDropdown\r\n                  className=\"text-sans-serif\"\r\n                  onClick={e => {\r\n                    e.stopPropagation();\r\n                  }}\r\n                >\r\n                  <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                    <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right className=\"py-0\">\r\n                    {index > 0 && <DropdownItem>Move Up</DropdownItem>}\r\n                    {index < lastIndex && <DropdownItem>Move Down</DropdownItem>}\r\n                    <DropdownItem>Move To...</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem \r\n                      className=\"text-primary\"\r\n                      onClick={() => history.push(`/workflows/${assignment.stage.workflowId}/stage/${assignment.stage._id}/task/${assignment.task._id}`)}\r\n                    >\r\n                      Go To Task\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n              \r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default AssignmentCard;\r\n","////// Packages //////////////////\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport useAction from 'store/hooks/useAction';\r\nimport { editToDo } from 'store/thunks/management';\r\nimport { Modal, ModalHeader, ModalFooter, ModalBody, FormGroup, Label} from 'reactstrap'\r\nimport { KanbanTodo } from './KanbanColumn';\r\n////// Local Components //////////\r\nimport ColorPicker, {toDoColors} from './ColorPicker'\r\n\r\n////// Global Components /////////\r\nimport FormGroupInput from 'components/FormGroupInput';\r\nimport DateTimeInputGroup from 'components/datetime/DateTimeInputGroup';\r\nimport SubmitButton from 'compositions/SubmitButton';\r\nimport Flex from 'components/Flex';\r\nimport { toast } from 'react-toastify';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    toDo: KanbanTodo;\r\n    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst EditToDo: FC<Props> = ({toDo, setIsOpen}) => {\r\n    const [description, setDescription] = useState<string>()\r\n    const [dueDate, setDueDate] = useState<string>();\r\n    const [color, setColor] = useState(toDoColors[0]);\r\n    const editAction = useAction( editToDo );\r\n\r\n    useEffect(() => {setDescription(toDo.description)}, [toDo.description])\r\n    useEffect(() => {setDueDate(toDo.dueDate)}, [toDo.dueDate])\r\n\r\n\r\n    async function handleSubmitEdit() {\r\n        const data = await editAction.post(toDo._id, {description, dueDate, kanban: {color}})\r\n        if (data?.success) {\r\n            toast.success('Updated to-do');\r\n            setIsOpen(false);\r\n        } else {\r\n            toast.error(data?.error || \"Something went wrong\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen toggle={()=>setIsOpen(false)}>\r\n            <ModalHeader>\r\n\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <FormGroupInput \r\n                    id=\"todo-description\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter description...\"\r\n                    rows={ 4 }\r\n                    value={ description }\r\n                    onChange={ e => setDescription(e.target.value) }\r\n                />\r\n                <FormGroup>\r\n                    <Label for=\"todo-duedate\">Due Date</Label>\r\n                    <DateTimeInputGroup\r\n                        timeFormat={false}\r\n                        value={ dueDate }\r\n                        onChange={ date => setDueDate(date) }\r\n                    />\r\n                </FormGroup>\r\n                <ColorPicker color={color} setColor={setColor} />\r\n            </ModalBody>\r\n            <ModalFooter tag={Flex} align=\"bottom\" justify=\"end\">\r\n                <SubmitButton\r\n                    submitting={ editAction.loading }\r\n                    onClick={handleSubmitEdit}\r\n                />\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditToDo","////// Packages //////////////////\r\nimport React, { FC, useState } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { toast } from 'react-toastify';\r\nimport confirm from 'reactstrap-confirm';\r\nimport dayjs from 'dayjs';\r\n\r\n////// Local Components //////////\r\nimport EditToDo from './EditToDo';\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\nimport { getItemStyle } from './helpers';\r\n\r\n////// Custom Hooks //////////////\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Thunks ////////////////////\r\nimport { deleteToDo } from 'store/thunks/management';\r\n\r\n////// Types /////////////////////\r\nimport { AssignmentWithTaskInfo, MAssignment } from 'store/types/models/workflow';\r\nimport { KanbanTodo } from './KanbanColumn';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface KanbanAssignment extends AssignmentWithTaskInfo {\r\n  type: 'assignment'\r\n}\r\n\r\ninterface Props {\r\n    toDo: KanbanTodo;\r\n    category: string;\r\n    index: number;\r\n    lastIndex: number;\r\n}\r\n\r\nconst ToDoCard: FC<Props> = ({ toDo, category, index, lastIndex }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const deleteAction = useAction( deleteToDo );\r\n\r\n\r\n\r\n    async function handleDelete() {\r\n        const confirmed = await confirm({\r\n            title: 'Delete To-Do?',\r\n            message: 'Are you sure you want to delete this To-Do?',\r\n            confirmColor: 'danger',\r\n            confirmText: 'Delete',\r\n            cancelColor: 'secondary',\r\n            cancelText: 'Cancel'            \r\n        })\r\n        if (!confirmed) return\r\n        const data = await deleteAction.post(toDo._id)\r\n        if (data?.success) {\r\n            toast.success('Deleted to-do');\r\n        } else {\r\n            toast.error(data?.error || \"Something went wrong\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Draggable draggableId={`draggable-todo-${toDo._id}`} index={index}>\r\n        {(provided, snapshot) => (\r\n            <div\r\n            className=\"kanban-item\"\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            >\r\n            <Card\r\n                className=\"kanban-item-card\"\r\n                style={{...getItemStyle(snapshot.isDragging), backgroundColor: toDo.kanban.color || 'rgb(255, 255, 200)', color: 'rgb(50, 50, 50)'}}\r\n            >\r\n                <CardBody>\r\n                    { \r\n                        toDo.description\r\n                            .split('\\n')\r\n                            .map((str, i) => (\r\n                                <p className=\"mb-1 fs--1 text-sans-serif\" key={i}>\r\n                                    {str}\r\n                                </p>\r\n                            )) \r\n                    }\r\n                \r\n                <div className=\"kanban-item-footer\">\r\n                    <div className=\"text-500\">\r\n                    {toDo.dueDate && dayjs(toDo.dueDate).format(\"MM/DD/YYYY\")}\r\n                    </div>\r\n                    <UncontrolledDropdown\r\n                    className=\"text-sans-serif\"\r\n                    onClick={e => {\r\n                        e.stopPropagation();\r\n                    }}\r\n                    >\r\n                    <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                        <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right className=\"py-0\">\r\n                        {index > 0 && <DropdownItem>Move Up</DropdownItem>}\r\n                        {index < lastIndex && <DropdownItem>Move Down</DropdownItem>}\r\n                        <DropdownItem>Move To...</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem \r\n                            className=\"text-primary\"\r\n                            onClick={()=>setIsOpen(true)}\r\n                        >\r\n                            Edit\r\n                        </DropdownItem>\r\n                        <DropdownItem \r\n                            className=\"text-danger\"\r\n                            onClick={handleDelete}\r\n                        >\r\n                        Delete\r\n                        </DropdownItem>\r\n                    </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </div>\r\n                \r\n                </CardBody>\r\n            </Card>\r\n            {isOpen && <EditToDo toDo={toDo} setIsOpen={setIsOpen} />}\r\n            </div>\r\n        )}\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nexport default ToDoCard;\r\n","import React, {  useState, FC, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport KanbanColumnHeader from './KanbanColumnHeader';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nimport AddToDo from './AddToDo';\r\nimport ButtonIcon from 'components/ButtonIcon';\r\nimport AssignmentCard, { KanbanAssignment } from './AssignmentCard';\r\nimport ToDoCard from './ToDoCard';\r\nimport { MToDo } from 'store/types/models/management';\r\n\r\nexport interface KanbanTodo extends MToDo {\r\n  type: 'todo';\r\n}\r\n\r\nexport type KanbanConfiguredAssignment = KanbanAssignment & {kanban: {category: string, sortIndex: number}}\r\nexport type KanbanItem = KanbanConfiguredAssignment | KanbanTodo;\r\n\r\ninterface Props {\r\n  category: string;\r\n  index: number;\r\n  items: KanbanItem[]\r\n}\r\n\r\nconst KanbanColumn: FC<Props> = ({ category, index, items }) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const kanbanContainer = document.getElementById(`container-${index}`)!;\r\n    kanbanContainer.scrollTop = kanbanContainer.scrollHeight;\r\n  }, [showForm, index]);\r\n\r\n  const categoryItems = items.sort( (a, b) => {\r\n    const sorta = a.kanban.sortIndex || 0\r\n    const sortb = b.kanban.sortIndex || 0\r\n    if (sorta === sortb) {\r\n      if (a._id > b._id) {\r\n        return 1\r\n      } else {\r\n        return -1\r\n      }\r\n    } else if (sorta > sortb) {\r\n      return 1\r\n    }\r\n    return -1\r\n  })\r\n\r\n  return (\r\n    <div className={classNames('kanban-column', { 'form-added': showForm })}>\r\n      <KanbanColumnHeader category={category} items={items} />\r\n      <Droppable droppableId={category}>\r\n        {(provided, snapshot) => (\r\n          <>\r\n            <div\r\n              className=\"kanban-items-container scrollbar\"\r\n              id={`container-${index}`}\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              {\r\n                categoryItems.map( (item, i, a) => {\r\n                  switch (item.type) {\r\n                    case 'assignment':\r\n                      return <AssignmentCard assignment={item} category={category} index={i} key={item._id} lastIndex={a.length - 1} />\r\n                    case 'todo':\r\n                      return <ToDoCard toDo={item} category={category} index={i} key={item._id} lastIndex={a.length - 1} /> \r\n                  }\r\n                })\r\n              }\r\n              {showForm && <AddToDo category={category} index={categoryItems.length} isOpen={showForm} setIsOpen={setShowForm} />}\r\n              {provided.placeholder}\r\n            </div>\r\n            {!showForm && (\r\n              <div className=\"kanban-column-footer\">\r\n                <ButtonIcon\r\n                  className=\"btn-add-card text-600 text-decoration-none\"\r\n                  color=\"link\"\r\n                  block\r\n                  icon=\"plus\"\r\n                  iconClassName=\"mr-1\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    setShowForm(true);\r\n                  }}\r\n                >\r\n                  Add a Personal To-Do\r\n                </ButtonIcon>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default KanbanColumn;\r\n","import Flex from 'components/Flex';\r\nimport React, { FC, useState } from 'react';\r\nimport { Button, Row, Col, ModalBody, Modal, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport ButtonIcon from 'components/ButtonIcon';\r\nimport FormGroupInput from 'components/FormGroupInput';\r\nimport useAction from 'store/hooks/useAction';\r\nimport { setKanbanCategories } from 'store/thunks/settings';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Props {\r\n  categories: string[]\r\n}\r\n\r\nconst KanbanHeader: FC<Props> = ({categories}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState<string>();\r\n  const setCategories = useAction( setKanbanCategories )\r\n\r\n  const handleSubmit = async () => {\r\n    const data = await setCategories.post( Array.from(new Set([...categories, title])) )\r\n    if (data?.success) {\r\n      toast.success('Added category')\r\n      setIsOpen(false)\r\n      setTitle(undefined)\r\n    } else {\r\n      toast.error(data?.error || 'Something went wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row noGutters className=\"bg-100 rounded-soft px-card py-2 mt-2 mb-3 btn-reveal-trigger\">\r\n      <Col tag={Flex} align=\"center\" justify=\"between\">\r\n        <h5 className=\"mb-0\">Assignments</h5>\r\n        <ButtonIcon\r\n          id=\"add-kanban-category\"\r\n          color=\"link\"\r\n          icon=\"plus\" \r\n          iconAlign=\"right\"\r\n          size=\"sm\"\r\n          className=\"btn-reveal text-decoration-none\"\r\n          onClick={() => setIsOpen(true)}\r\n          \r\n        >\r\n          Add Category\r\n        </ButtonIcon>\r\n        <Modal isOpen={isOpen} toggle={()=>setIsOpen(false)}>\r\n          <ModalHeader>\r\n            Add Category\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroupInput\r\n              id=\"new-category-title\"\r\n              label=\"Title\"\r\n              value={title}\r\n              onChange={e=>setTitle(e.target.value)}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter tag={Flex} align=\"bottom\" justify=\"end\">\r\n            <Button color=\"primary\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KanbanHeader;\r\n","import { getKanbanCategories } from \"store/thunks/settings\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useKanbanCategories() {\r\n    return useLoadAndSelect({\r\n        actionCreator: getKanbanCategories,\r\n        selector: state => state.app.options?.kanban?.categories,\r\n        deduplicate: ['kanbanCategories']\r\n    })\r\n}\r\n\r\nexport default useKanbanCategories;","import { shallowEqual } from \"react-redux\";\r\nimport { getToDos } from \"store/thunks/management\";\r\nimport { MToDo } from \"store/types/models/management\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useToDos(delimiter?: MToDo['_id']) {\r\n    return useLoadAndSelect({\r\n        actionCreator: getToDos,\r\n        postParams: delimiter,\r\n        selector: state => Object.values(state.management.toDos),\r\n        equality: shallowEqual,\r\n        deduplicate: ['toDos', delimiter || 'top']\r\n    })\r\n}\r\n\r\nexport default useToDos","////// Packages //////////////////\r\nimport LoadingGateway from 'components/LoadingGateway';\r\nimport React, { FC, useEffect, useRef, useState } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport useMyAssignments from 'store/hooks/workflow/useMyAssignments';\r\nimport { MPerson } from 'store/types/models/id'\r\nimport KanbanColumn, { KanbanConfiguredAssignment, KanbanItem } from './KanbanColumn';\r\nimport KanbanHeader from './KanbanHeader';\r\nimport { DragDropContext, DropResult, ResponderProvided } from 'react-beautiful-dnd';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from 'components/Flex';\r\nimport is from 'is_js';\r\nimport useSetting from 'store/hooks/settings/useSettings';\r\nimport useKanbanCategories from 'store/hooks/management/useKanbanCategories';\r\nimport useToDos from 'store/hooks/management/useToDos';\r\nimport { MToDo } from 'store/types/models/management';\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\nimport { toDos as toDosController } from 'store/thunks/management';\r\nimport { tasks as tasksController } from 'store/thunks/workflow/tasks';\r\nimport { Dispatch } from 'redux';\r\nimport { toast } from 'react-toastify';\r\nimport useAction from 'store/hooks/useAction';\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nfunction compareArrays(array: KanbanItem[], category: string, dispatch: Dispatch<any>, personId: MPerson['_id']) {\r\n    const movedAssignments = [] as {taskId: string, assignmentId: string, sortIndex: number, category: string;}[]\r\n    const movedToDos = [] as {toDoId: string, sortIndex: number, category: string}[]\r\n    for ( let i = 0; i < array.length; i++ ) {\r\n        const item = array[i]\r\n        if (!item) continue;\r\n        switch(item.type) {\r\n            case \"assignment\": {\r\n                const config = item.assignees.find( a => a.personId === personId)!\r\n                if (config.sortIndex !== i || config.category !== category) {\r\n                    dispatch( \r\n                        tasksController.upsert(\r\n                            {\r\n                                assignments: [{\r\n                                    _id: item._id, \r\n                                    assignees: [{\r\n                                        _id: config._id,\r\n                                        sortIndex: i\r\n                                    }]\r\n                                }]\r\n                            },\r\n                            item.task._id\r\n                        )\r\n                    )\r\n                    movedAssignments.push({\r\n                        taskId: item.task._id, \r\n                        assignmentId: item._id,\r\n                        sortIndex: i,\r\n                        category: category\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n            case \"todo\":\r\n                if (item.kanban.sortIndex !== i || item.kanban.category !== category) {\r\n                    dispatch( \r\n                        toDosController.upsert(\r\n                            {\r\n                                kanban: {\r\n                                    sortIndex: i\r\n                                }\r\n                            },\r\n                            item._id\r\n                        )\r\n                    )\r\n                    movedToDos.push({\r\n                        toDoId: item._id,\r\n                        sortIndex: i,\r\n                        category: category\r\n                    })\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return {movedAssignments, movedToDos}\r\n}\r\n\r\nfunction handleResortOut(\r\n    draggableId: string, \r\n    category: string, \r\n    index: number, \r\n    dispatch: Dispatch<any>, \r\n    categories: Map<string, KanbanItem[]>, \r\n    personId: MPerson['_id']\r\n) {\r\n    const [_d, type, id] = draggableId.split('-')\r\n\r\n    const arr = categories.get(category)!\r\n                            .slice()\r\n                            .sort( (a, b) => a.kanban.sortIndex > b.kanban.sortIndex ? 1 : -1)\r\n\r\n    const splicedIndex = arr.findIndex( item => item.type === type && item._id === id)\r\n    if (splicedIndex === -1) {\r\n        toast.error('there was a problem re-sorting out')\r\n        return {movedAssignments: [], movedToDos: []};\r\n    }\r\n    arr.splice(splicedIndex, 1);\r\n    categories.set(category, arr.map( (item, i) => ({...item, kanban: {...item.kanban, sortIndex: i}})));\r\n    \r\n    return compareArrays(arr, category, dispatch, personId)\r\n}\r\n\r\nfunction handleResortIn(\r\n    draggableId: string, \r\n    fromCategory: string,\r\n    toCategory: string, \r\n    index: number, \r\n    dispatch: Dispatch<any>, \r\n    categories: Map<string, KanbanItem[]>, \r\n    personId: MPerson['_id']\r\n) {\r\n    const [_d, type, id] = draggableId.split('-')\r\n    const draggedItem = categories.get(fromCategory)!.find( _i => _i._id === id && _i.type === type);\r\n    if (!draggedItem) {\r\n        toast.error('there was a problem re-sorting in')\r\n        return {movedAssignments: [], movedToDos: []};\r\n    }\r\n    const arr = categories.get(toCategory)!\r\n                            .slice()\r\n                            .sort( (a, b) => a.kanban.sortIndex > b.kanban.sortIndex ? 1 : -1)\r\n\r\n    arr.splice(index, 0, draggedItem);\r\n    categories.set(toCategory, arr.map( (item, i) => ({...item, kanban: {...item.kanban, sortIndex: i}})));\r\n    return compareArrays(arr, toCategory, dispatch, personId)\r\n}\r\n\r\nfunction handleResortSame(\r\n        draggableId: string, \r\n        category: string,\r\n        index: number, \r\n        dispatch: Dispatch<any>, \r\n        categories: Map<string, KanbanItem[]>, \r\n        personId: MPerson['_id']\r\n    ) {\r\n    const arr = categories.get(category)!\r\n                            .slice()\r\n                            .sort( (a, b) => a.kanban.sortIndex > b.kanban.sortIndex ? 1 : -1)\r\n\r\n    const [_d, type, id] = draggableId.split('-')\r\n\r\n    const spliced = arr.splice( arr.findIndex( item => item._id === id && item.type === type ), 1 )\r\n    if (!spliced.length) {\r\n        toast.error('there was a problem re-sorting')\r\n        return {movedAssignments: [], movedToDos: []};\r\n    }\r\n\r\n    arr.splice(index, 0, ...spliced)\r\n    categories.set(category, arr.map( (item, i) => ({...item, kanban: {...item.kanban, sortIndex: i}})));\r\n    return compareArrays(arr, category, dispatch, personId)\r\n}\r\n\r\nconst Assignments: FC<Props> = () => {\r\n    const personId = useSelector(state => state.app.login.personId);\r\n    const [delimiter, setDelimiter] = useState<MToDo[\"_id\"]>();\r\n    const [trappedCategories, setTrappedCategories] = useState<Map<string, KanbanItem[]>>();\r\n    const {value: userCategories, ...userCategoriesLoader} = useKanbanCategories();\r\n\r\n    const { value: assignments, ...assignmentsLoader } = useMyAssignments();\r\n    const { value: toDos, ...toDosLoader } = useToDos(delimiter);\r\n\r\n    const reorderAssignmentsAction = useAction( tasksController.reorderAssignments )\r\n    const reorderToDosAction = useAction( toDosController.reorderToDos )\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const _categories = new Map<string, KanbanItem[]>(userCategories?.map( cat => [ cat, [] ] ) )\r\n\r\n    // Detect device\r\n    useEffect(() => {\r\n        if (is.ipad()) {\r\n            containerRef.current?.classList.add('ipad');\r\n        }\r\n        if (is.mobile()) {\r\n            containerRef.current?.classList.add('mobile');\r\n            if (is.safari()) {\r\n                containerRef.current?.classList.add('safari');\r\n            }\r\n            if (is.chrome()) {\r\n                containerRef.current?.classList.add('chrome');\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n    assignments?.forEach( a => {\r\n        const config = a.assignees.find( e => e.personId === personId );\r\n        const category = a.complete ? 'Complete' : (config?.category || 'Uncategorized');\r\n        const aWithConfig = {\r\n            ...a,\r\n            type: 'assignment' as const,\r\n            kanban: {\r\n                category,\r\n                sortIndex: config?.sortIndex || 0\r\n            }\r\n        }\r\n        if ( _categories.has(category) ) {\r\n            _categories.get(category)!.push(aWithConfig)\r\n        } else {\r\n            _categories.set(category, [aWithConfig])\r\n        }\r\n    })\r\n\r\n    toDos?.forEach( t => {\r\n        const category = t.complete ? 'Complete' : (t.kanban.category || 'Uncategorized');\r\n        const tWithConfig = {\r\n            ...t,\r\n            type: 'todo' as const,\r\n            kanban: {\r\n                category,\r\n                sortIndex: t.kanban.sortIndex || 0,\r\n                color: t.kanban.color\r\n            }\r\n        }\r\n        if ( _categories.has(category) ) {\r\n            _categories.get(category)!.push(tWithConfig)\r\n        } else {\r\n            _categories.set(category, [tWithConfig])\r\n        }\r\n    })\r\n\r\n    const categories = trappedCategories || _categories;\r\n\r\n    async function reorderAssignments(items: {assignmentId: string, taskId: string, sortIndex: number, category: string}[]) {\r\n        const data = await reorderAssignmentsAction.post(items)\r\n        if (!data?.success) toast.error('There was a problem re-sorting the assignments. Please refresh the page and try again.')\r\n    }\r\n\r\n    async function reorderToDos(items: {toDoId: string, sortIndex: number, category: string}[]) {\r\n        const data = await reorderToDosAction.post(items)\r\n        if (!data?.success) toast.error('There was a problem re-sorting the todos. Please refresh the page and try again.')\r\n    }\r\n\r\n    const getBatchedActions = (\r\n        result: DropResult, \r\n        newCat: string | undefined, \r\n        dispatch: Dispatch<any>, \r\n        categories: Map<string, KanbanItem[]>, \r\n        personId: MPerson['_id']\r\n    ) => async () => {\r\n        const categoriesMutableCopy = new Map(categories);\r\n        if (newCat !== undefined) {\r\n            const {movedAssignments: a2, movedToDos: t2} = handleResortIn(\r\n                result.draggableId, \r\n                result.source.droppableId, \r\n                newCat, \r\n                result.destination!.index, \r\n                dispatch, \r\n                categoriesMutableCopy, \r\n                personId!\r\n            )\r\n            const {movedAssignments: a1, movedToDos: t1} = handleResortOut(\r\n                result.draggableId,\r\n                result.source.droppableId,\r\n                result.source.index,\r\n                dispatch,\r\n                categoriesMutableCopy,\r\n                personId!\r\n            )\r\n            const assignmentsToSend = [...a1, ...a2];\r\n            const toDosToSend = [...t1, ...t2];\r\n            setTrappedCategories(categoriesMutableCopy)\r\n            await Promise.all([\r\n                assignmentsToSend.length > 0 ? reorderAssignments(assignmentsToSend) : Promise.resolve(),\r\n                toDosToSend.length > 0 ? reorderToDos(toDosToSend) : Promise.resolve()\r\n            ])\r\n            setTrappedCategories(undefined)\r\n        } else {\r\n            const {movedAssignments, movedToDos} = handleResortSame(\r\n                result.draggableId, \r\n                result.source.droppableId, \r\n                result.destination!.index,\r\n                dispatch,\r\n                categoriesMutableCopy,\r\n                personId!\r\n            )\r\n            setTrappedCategories(categoriesMutableCopy)\r\n            await Promise.all([\r\n                movedAssignments.length > 0 ? reorderAssignments(movedAssignments) : Promise.resolve(),\r\n                movedToDos.length > 0 ? reorderToDos(movedToDos) : Promise.resolve()\r\n            ])\r\n            setTrappedCategories(undefined)\r\n        }\r\n    }\r\n\r\n    function onDragEnd(result: DropResult) {\r\n        let newCat: string | undefined = undefined;\r\n        let newIndex: number | undefined = undefined;\r\n\r\n        if (result.reason === 'DROP' && result.destination) {\r\n            if (result.destination.droppableId !== result.source.droppableId ) {\r\n                newCat = result.destination.droppableId\r\n                newIndex = result.destination.index\r\n            } else {\r\n                if (result.destination.index !== result.source.index ) {\r\n                    newIndex = result.destination.index\r\n                }\r\n            }\r\n        }\r\n        if (newIndex !== undefined) {\r\n            batch(getBatchedActions(result, newCat, dispatch, categories, personId!))\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <LoadingGateway dataLoader={assignmentsLoader}>\r\n            <KanbanHeader categories={Array.from(categories.keys()) || []} />\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"kanban-container scrollbar\" ref={containerRef}>\r\n                    { \r\n                        Array.from(categories.keys())\r\n                            .sort((a, b) => {\r\n                                if (a === 'Complete') return 1\r\n                                if (b === 'Complete') return -1\r\n                                if (a === 'Uncategorized') return 1\r\n                                if (b === 'Uncategorized') return -1\r\n                                return 0\r\n                            })\r\n                            .map( (c, i) => <KanbanColumn key={i} category={c} index={i} items={categories.get(c) || []} /> ) \r\n                    }\r\n                    {/* <AddAnotherList /> */}\r\n                </div>\r\n            </DragDropContext>\r\n            <Flex>\r\n                \r\n            </Flex>\r\n        </LoadingGateway>\r\n    )\r\n}\r\n\r\nexport default Assignments","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport UnderConstruction from 'layouts/errors/UnderConstruction';\r\nimport Assignments from 'layouts/management/assignments/Assignments';\r\n\r\ninterface Props extends RouteComponentProps {\r\n\r\n}\r\n\r\nconst ManagmentRoutes: FC<Props> = ({ match: { url } }) => (\r\n  <Switch>\r\n    <Route path={`${url}/assignments`} component={Assignments} />\r\n    <Route path={`${url}/teams`} component={UnderConstruction} />\r\n    <Route path={`${url}/workload`} exact component={UnderConstruction} />\r\n    <Route path={`${url}/approvals`} exact component={UnderConstruction} /> \r\n    <Route path={`${url}/timelines`} exact component={UnderConstruction} /> \r\n\r\n    {/*Redirect*/}\r\n    <Redirect to=\"/errors/404\" />\r\n  </Switch>\r\n);\r\n\r\nexport default ManagmentRoutes;\r\n","import React, { FC } from 'react';\r\nimport { FormGroup, Input, InputProps, Label, LabelProps, FormFeedback } from 'reactstrap';\r\n\r\ninterface Props extends InputProps {\r\n  label?: string;\r\n  formClass?: string;\r\n  feedback?: React.ReactNode;\r\n  isTooltipFeedback?: boolean;\r\n  labelProps?: LabelProps;\r\n}\r\nconst FormGroupInput: FC<Props> = ({ label, formClass='', feedback, valid, invalid, isTooltipFeedback, labelProps, ...rest }) => {\r\n  const {id, ...inputProps} = rest;\r\n  return (\r\n    <FormGroup className={formClass}>\r\n      {label && <Label htmlFor={id} {...labelProps} >{label}</Label>}\r\n      <Input id={id} valid={valid} invalid={invalid} {...inputProps} />\r\n      {feedback && <FormFeedback valid={valid} invalid={invalid} tooltip={isTooltipFeedback}>{feedback}</FormFeedback>}\r\n    </FormGroup>\r\n  )\r\n};\r\n\r\nexport default FormGroupInput;","import React, { FC } from 'react';\r\nimport Loader from './Loader';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\ninterface Props {\r\n    dataLoader: {loading?: boolean; error?: any;};\r\n    size?: 's' | 'm' | 'l' | 'xl';\r\n    children: any;\r\n    className?: string;\r\n}\r\n\r\nconst LoadingGateway: FC<Props> = ({dataLoader, size='l', className, children}) => {\r\n    const sizeClass = {\r\n        s: 'fs-0',\r\n        m: 'fs-1',\r\n        l: 'fs-2',\r\n        xl: 'fs-4'\r\n    }\r\n\r\n    if (dataLoader?.loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    if (dataLoader?.error) {\r\n        return ( \r\n            <>\r\n                <Row className={\"flex-center py-5 \" + className}>\r\n                    <Col xs=\"auto\">\r\n                        <FontAwesomeIcon icon='exclamation-circle' className={[sizeClass, 'text-danger'].join(' ')} />\r\n                    </Col>\r\n                </Row>\r\n                <Row className={\"flex-center py-5 \" + className}>\r\n                    {dataLoader.error}\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return <>{ children }</>;\r\n};\r\n\r\nexport default LoadingGateway;\r\n","const base64toBlob = (dataURI: string): Blob => {\r\n    const splitDataURI = dataURI.split(',')\r\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\r\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\r\n\r\n    const ia = new Uint8Array(byteString.length)\r\n    for (let i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i)\r\n    }\r\n    return new Blob([ia], { type: mimeString })\r\n}\r\n\r\nexport default base64toBlob;","import React, {FC} from 'react';\r\nimport classNames from 'classnames';\r\nimport { Button, ButtonProps } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Transform, IconProp } from '@fortawesome/fontawesome-svg-core'\r\n\r\n\r\nexport interface Props extends ButtonProps {\r\n  iconAlign?: 'right' | 'left',\r\n  iconClassName?: string;\r\n  transform?: string | Transform ;\r\n  icon: IconProp;\r\n}\r\n\r\nconst ButtonIcon: FC<Props> = ({ icon, iconAlign='left', iconClassName, transform, children, ...rest }) => (\r\n  <Button {...rest}>\r\n    {iconAlign === 'right' && children}\r\n    <FontAwesomeIcon\r\n      icon={icon}\r\n      className={classNames(iconClassName, {\r\n        'mr-1': children && iconAlign === 'left',\r\n        'ml-1': children && iconAlign === 'right'\r\n      })}\r\n      transform={transform}\r\n    />\r\n    {iconAlign === 'left' && children}\r\n  </Button>\r\n);\r\n\r\nexport default ButtonIcon;\r\n","////// Packages //////////////////\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FalconColors } from 'components/falconTypes';\r\nimport dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputProps } from 'reactstrap'\r\nimport HappinDateTime, {DateTimeProps} from './HappinDateTime';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends Omit<InputProps, 'onChange'> {\r\n    onChange?: (date: string)=>void;\r\n    pickerProps?: Omit<DateTimeProps, 'setter' | 'value'>;\r\n    buttonColor?: FalconColors;\r\n    autoFillBlank?: boolean\r\n}\r\n\r\nconst DateTimeInputGroup: FC<Props> = ({dateFormat=\"MM/DD/YY\", timeFormat=\"hh:mm A\", value, onChange, onBlur, pickerProps, size, autoFillBlank, buttonColor=\"primary\", ...inputProps}) => {\r\n    const [dateValue, setDateValue] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [firstRender, setFirstRender] = useState(true)\r\n    const format = (dateFormat && timeFormat) ? (dateFormat + ' ' + timeFormat) : ( dateFormat || timeFormat )\r\n\r\n    useEffect(()=> {\r\n        if (firstRender) {\r\n            setFirstRender(false);\r\n            if (!value && !autoFillBlank) return;\r\n        }\r\n        \r\n        const d = dayjs(value)\r\n        if ( d.isValid() ) {\r\n            setDateValue( d.format( format ) )\r\n        } else {\r\n            setDateValue( value )\r\n        }\r\n        \r\n    }, [value])\r\n\r\n    function handleInputBlur() {\r\n        const d = dayjs(dateValue);\r\n        if ( d.isValid() ) {\r\n            if (onChange) onChange( d.format( format ) )\r\n        } else {\r\n            if (onChange) onChange( dateValue )\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <InputGroup>\r\n                <Input \r\n                    onChange={e=>setDateValue(e.target.value)} \r\n                    onBlur={ handleInputBlur } \r\n                    value={dateValue}\r\n                    size={size}\r\n                    {...inputProps} \r\n                />\r\n                <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                        outline\r\n                        color={buttonColor}\r\n                        onClick={()=>setIsOpen(o=>!o)}\r\n                        size={size}\r\n                    >\r\n                        <FontAwesomeIcon icon='calendar' />\r\n                    </Button>\r\n                </InputGroupAddon>\r\n                \r\n            </InputGroup>\r\n            <HappinDateTime\r\n                        dateFormat={dateFormat}\r\n                        timeFormat={timeFormat}\r\n                        onChange={date => {\r\n                            const d = dayjs(date)\r\n                            if ( d.isValid() ) {\r\n                                setDateValue( d.format(format) )\r\n                                if (onChange) onChange( d.format(format) )\r\n                            }\r\n                        }}\r\n                        value={dateValue}\r\n                        dropLeft\r\n                        open={isOpen}\r\n                        onClose={(date)=>{\r\n                            setIsOpen(false);\r\n                            if(pickerProps?.onClose) pickerProps.onClose(date);\r\n                        }}\r\n                        {...pickerProps}\r\n                    />\r\n                \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DateTimeInputGroup\r\n\r\n//  <DateTimePicker \r\n//                         setter={date => {\r\n//                             const d = dayjs(date)\r\n//                             if ( d.isValid() ) {\r\n//                                 setDateValue( d.format(format) )\r\n//                                 if (onChange) onChange( d.format(format) )\r\n//                             }\r\n//                         }} \r\n//                         value={dateValue}\r\n//                         dropLeft\r\n//                         dateFormat={dateFormat}\r\n//                         timeFormat={timeFormat}\r\n//                         {...pickerProps}\r\n//                     /> ","import React, { FC } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport SpinnerLogo, { Props } from 'components/SpinnerLogo'\r\n\r\nconst Loader: FC<Props> = props => (\r\n  <Row className=\"flex-center py-5\">\r\n    <Col xs=\"auto\">\r\n      <SpinnerLogo width={50} {...props} />\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nexport default Loader;\r\n","import base64toBlob from \"helpers/base64toBlob\";\r\nimport uploadDoc from \"helpers/uploadDoc\";\r\nimport { DropzoneFile } from \"store/store\";\r\nimport { ActionCreator } from \"store/types/interface/common\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { ITaskStatus, MAssignment, MMilestone, MTask } from \"store/types/models/workflow\";\r\nimport { tasks as tasksDuck } from 'store/ducks/workflow';\r\nimport { BaseDuck } from \"store/ducks/BaseDuck\";\r\n\r\ninterface TasksController extends BaseDuck<MTask> {\r\n    create: ActionCreator<['addTask']>;\r\n    update: ActionCreator<['updateTask']>;\r\n    addTaskDocuments: ActionCreator<['addTaskDocuments']>;\r\n    createAssignment: ActionCreator<['createAssignment']>\r\n    updateAssignment: ActionCreator<['updateAssignment']>\r\n    getPersonAssignments: ActionCreator<[\"getPersonAssignments\"]>;\r\n    reorderAssignments: ActionCreator<\"reorderAssignment\"[]>;\r\n}\r\n\r\nexport const tasks = tasksDuck as TasksController\r\n\r\nexport const create: ActionCreator<['addTask']> = (newTask: Pick<MTask, 'title' | 'description' | 'startDate' | 'endDate' | 'isBillable' | 'budgetHours'>, milestoneId: MMilestone['_id']) => {\r\n        const actions = [{\r\n            name: 'addTask',\r\n            data: {\r\n                ...newTask,\r\n                milestoneId\r\n            }\r\n        }] as const;\r\n        return { actions }\r\n        //  const data = await dispatch(storeFetch<['addTask']>({actions}));\r\n\r\n        // if (data?.success && data.records?.[0]) {\r\n        //     const {newTask} = data.records[0];\r\n        //     const {workflows: w} = getState();\r\n\r\n        //     for ( const workflow of Object.values(w)) {\r\n        //         for (const stage of workflow.stages) {\r\n        //             for (const milestone of stage.milestones) {\r\n        //                 for (const task of milestone.tasks) {\r\n        //                     if (task._id === newTask) { \r\n        //                         const updateObject = {\r\n        //                             stages: [{\r\n        //                                 _id: stage._id,\r\n        //                                 milestones: [{\r\n        //                                     _id: milestone._id,\r\n        //                                     tasks: [newTask]\r\n        //                                 }]\r\n        //                             }]\r\n        //                         }\r\n        //                         dispatch( workflows.upsert(updateObject, workflow._id))\r\n        //                         return data;\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n}\r\ntasks.create = create\r\n\r\nexport const update: ActionCreator<['updateTask']> = (updateObject: Partial<MTask> & {taskId: MTask['_id']; progress?: number; status?: string}) => {\r\n    const actions = [{\r\n        name: 'updateTask',\r\n        data: updateObject\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.update = update;\r\n\r\nexport const addTaskDocuments: ActionCreator<['addTaskDocuments']> = async ( attachments: DropzoneFile[], taskId: MTask['_id']) => {\r\n\r\n    const arrDocumentsPosted = [] as {location: string, thumb?: {location: string}, title: string}[]\r\n\r\n    for ( const attachment of attachments ) {        \r\n        const newDoc = await uploadDoc(base64toBlob(attachment.base64), 'document', attachment.path)\r\n        if (newDoc?.success && newDoc.files?.document) {\r\n            arrDocumentsPosted.push(\r\n                {\r\n                    location: newDoc.files?.document.name, \r\n                    thumb: newDoc.files?.document.thumb \r\n                                ? {location: newDoc.files?.document.thumb} \r\n                                : undefined, \r\n                    title: attachment.path\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!attachments || !attachments.length) return { cancel: true }\r\n  \r\n    const actions = [{ \r\n        name: 'addTaskDocuments',\r\n        data: {\r\n            documents: arrDocumentsPosted,\r\n            taskId\r\n        }\r\n    }] as const;\r\n    return {actions}\r\n}\r\ntasks.addTaskDocuments = addTaskDocuments;\r\n\r\nexport const createAssignment: ActionCreator<['createAssignment']> = ( taskId: MTask['_id'], assignees: MPerson['_id'][], description: string, assignedHours: number, dueDate: string) => {\r\n    const actions = [{\r\n        name: 'createAssignment',\r\n        data: {\r\n            taskId,\r\n            assignment: {\r\n                assignees,\r\n                description,\r\n                assignedHours,\r\n                dueDate\r\n            }\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.createAssignment = createAssignment;\r\n\r\ninterface IUpdateAssignmentOptions {\r\n    status?: ITaskStatus;\r\n    complete?: boolean;\r\n    assignees?: MPerson['_id'][];\r\n    description?: string;\r\n    assignedHours?: number;\r\n    dueDate?: string;\r\n}\r\n\r\nexport const updateAssignment: ActionCreator<['updateAssignment']> = ( assignmentId: MAssignment['_id'], assignmentUpdate: IUpdateAssignmentOptions) => {\r\n    const actions = [{\r\n        name: 'updateAssignment',\r\n        data: {\r\n            assignmentId,\r\n            ...assignmentUpdate\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.updateAssignment = updateAssignment;\r\n\r\nexport const getPersonAssignments: ActionCreator<[\"getPersonAssignments\"]> = (personId: MPerson['_id']) => {\r\n    const actions = [{\r\n        name: 'getPersonAssignments',\r\n        data: {\r\n            personId\r\n        }\r\n    }] as const;\r\n    return { actions }\r\n}\r\ntasks.getPersonAssignments = getPersonAssignments;\r\n\r\ninterface ReorderAssignmentProp {\r\n    assignmentId: MAssignment['_id'];\r\n    sortIndex: number;\r\n    category: string;\r\n}\r\n\r\nexport const reorderAssignments: ActionCreator<\"reorderAssignment\"[]> = (items: ReorderAssignmentProp[]) => {\r\n    const actions = items.map( data => ({\r\n        name: 'reorderAssignment',\r\n        data\r\n    } as const))\r\n    return { actions }\r\n}\r\ntasks.reorderAssignments = reorderAssignments","import React, { FC } from 'react';\r\n\r\ninterface Props {\r\n    onClickPrev: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    onClickSwitch: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    onClickNext: (event: React.MouseEvent<HTMLTableHeaderCellElement>)=>void;\r\n    switchContent: React.ReactNode;\r\n    switchColSpan?: number;\r\n    switchProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement> & {[extendedProp: string]: any};\r\n}\r\n\r\nconst ViewNavigation: FC<Props> = ( { onClickPrev, onClickSwitch, onClickNext, switchContent, switchColSpan, switchProps } ) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<th className=\"rdtPrev\" onClick={ onClickPrev }>\r\n\t\t\t\t<span>‹</span>\r\n\t\t\t</th>\r\n\t\t\t<th className=\"rdtSwitch\" colSpan={ switchColSpan } onClick={ onClickSwitch } {...switchProps}>\r\n\t\t\t\t{ switchContent }\r\n\t\t\t</th>\r\n\t\t\t<th className=\"rdtNext\" onClick={ onClickNext }>\r\n\t\t\t\t<span>›</span>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default ViewNavigation;","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit, FlexibleDateType, RenderDateFunction } from '../types/HappinDateTime';\r\n\r\nimport dayjs from 'dayjs';\r\nimport localeData from 'dayjs/plugin/localeData';\r\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\r\ndayjs.extend(LocalizedFormat);\r\ndayjs.extend(localeData);\r\n\r\n\r\nconst DEFAULT_RENDER_DAY: RenderDateFunction = ( props, date ) => <td { ...props }>{ date.date() }</td>\r\nconst DEFAULT_VALID_DATE_CHECK = () => true;\r\n\r\ninterface Props {\r\n    renderDay?: RenderDateFunction;\r\n    isValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n    viewDate: dayjs.Dayjs;\r\n    navigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n    showView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n    timeFormat?: string | boolean;\r\n    selectedDate: dayjs.Dayjs;\r\n    updateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n    // setSelectedDate: (date: dayjs.Dayjs | ((date: FlexibleDateType)=>dayjs.Dayjs) )=>void\r\n}\r\n\r\nconst DaysView: FC<Props> = ({\r\n    renderDay=DEFAULT_RENDER_DAY, \r\n    isValidDate=DEFAULT_VALID_DATE_CHECK,\r\n    viewDate,\r\n    navigate,\r\n    showView,\r\n    timeFormat,\r\n    selectedDate,\r\n    updateDate\r\n}) => {\r\n\r\n    const date = viewDate;\r\n    const dat = dayjs(viewDate.toISOString())\r\n\t\t\r\n    const startOfMonth = date.clone().startOf('month');\r\n    const endOfMonth = date.clone().endOf('month');\r\n    \r\n    // We need 42 days in 6 rows\r\n    // starting in the last week of the previous month\r\n    const rows: React.ReactNode[][] = [\r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7],\r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7], \r\n        [1, 2, 3, 4, 5, 6, 7]\r\n    ];\r\n\r\n    const startDate = dat.startOf('month').startOf('week');\r\n\r\n    // const setDate = (renderDate: dayjs.Dayjs) => {\r\n    //     setSelectedDate( date => dayjs.isDayjs(date) \r\n    //                                 ? date.year(renderDate.year())\r\n    //                                         .month(renderDate.month())\r\n    //                                         .date(renderDate.date())\r\n    //                                 : renderDate \r\n    //     )\r\n    // }\r\n    const endDate = startDate.add( 42, 'd' );\r\n    let renderDate = startDate\r\n    for (const row of rows) {\r\n        for (const i in row) {\r\n            const valid = isValidDate(renderDate.startOf('day')) || isValidDate( renderDate.endOf('day') )\r\n            row[i] = renderDay(\r\n                {\r\n                    key: renderDate.format('MMDDYYhh'),\r\n                    'data-value': renderDate.date(),\r\n                    'data-month': renderDate.month(),\r\n                    'data-year': renderDate.year(),\r\n                    className: classNames('rdtDay', {\r\n                        'rdtOld': renderDate.isBefore( startOfMonth ),\r\n                        'rdtNew': renderDate.isAfter( endOfMonth ),\r\n                        'rdtActive': selectedDate && renderDate.isSame( selectedDate, 'day' ),\r\n                        'rdtToday': renderDate.isSame( dayjs(), 'day' ),\r\n                        'rdtDisabled': !valid\r\n                    }),\r\n                    onClick: valid ? updateDate : undefined\r\n                }, \r\n                renderDate, \r\n                selectedDate\r\n            )\r\n            renderDate = renderDate.add(1, 'day')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"rdtDays\">\r\n            <table>\r\n                <thead>\r\n                    <ViewNavigation\r\n                        onClickPrev={ () => navigate( -1, 'month' ) }\r\n                        onClickSwitch={ () => showView( 'months', viewDate ) }\r\n                        onClickNext={ () => navigate( 1, 'month' ) }\r\n                        switchContent={ dat.format('MMM YYYY') }\r\n                        switchColSpan={5}\r\n                        switchProps={ { 'data-value': viewDate.month() } }\r\n                    />\r\n                    <tr>\r\n                        { dayjs.weekdaysMin().map( (day, index) => (\r\n                            <th key={ day + index } className=\"dow\">{ day }</th>\r\n                        )) }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { rows.map( (r, i) => (\r\n                        <tr key={ `${endDate.month()}_${i}` }>{ r }</tr>\r\n                    )) }\r\n                </tbody>\r\n                { timeFormat &&\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td onClick={ () => showView('time', viewDate) }\r\n                                colSpan={7}\r\n                                className=\"rdtTimeToggle\">\r\n                                { date.format( timeFormat === true ? 'LT' : timeFormat) }\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                 }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DaysView","import dayjs from 'dayjs';\r\nimport React, { FC } from 'react';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit, FlexibleDateType, RenderMonthFunction } from '../types/HappinDateTime';\r\nimport classNames from 'classnames';\r\n\r\ninterface Props {\r\n\trenderMonth?: RenderMonthFunction;\r\n\tisValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n\tviewDate: dayjs.Dayjs;\r\n\tnavigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n\tshowView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n\tselectedDate: dayjs.Dayjs;\r\n\tupdateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n}\r\n\r\n\r\nconst MonthsView: FC<Props> = ({\r\n\tviewDate,\r\n\trenderMonth=(props, month, year)=><td {...props}>{dayjs().year(year).month(month).format('MMM')}</td>,\r\n\tisValidDate,\r\n\tnavigate,\r\n\tshowView,\r\n\tselectedDate,\r\n\tupdateDate\r\n}) => {\r\n\tconst year = viewDate?.year();\r\n\r\n\tfunction isDisabledMonth( month: number ) {\r\n\r\n\t\tif ( !isValidDate ) {\r\n\t\t\t// If no validator is set, all days are valid\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If one day in the month is valid, the month should be clickable\r\n\t\tconst startDate = viewDate?.month(month).date(1);\r\n\t\tlet day = startDate?.endOf( 'month' );\r\n\r\n\t\twhile ( day.isAfter(startDate) ) {\r\n\t\t\tif ( isValidDate( day ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tday = day.subtract(1, 'day');\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst rows: React.ReactNode[][] = [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ];\r\n\tlet month = 0;\r\n\tfor ( const row of rows ) {\r\n\t\tfor (const index in row) {\r\n\t\t\trow[index] = renderMonth(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: month, \r\n\t\t\t\t\tclassName: classNames('rdtMonth', {\r\n\t\t\t\t\t\t'rdtDisabled': isDisabledMonth( month ),\r\n\t\t\t\t\t\t'rdtActive': selectedDate.year() === viewDate.year() && selectedDate.month() === month\r\n\t\t\t\t\t}), \r\n\t\t\t\t\t'data-year': viewDate.year(),\r\n\t\t\t\t\t'data-value': month,\r\n\t\t\t\t\tonClick: isDisabledMonth( month ) ? undefined : updateDate\r\n\t\t\t\t},\r\n\t\t\t\tmonth,\r\n\t\t\t\tviewDate?.year(),\r\n\t\t\t\tselectedDate\r\n\t\t\t);\r\n\t\t\tmonth++\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\t\r\n\treturn (\r\n\t\t<div className=\"rdtMonths\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<ViewNavigation\r\n\t\t\t\t\t\tonClickPrev={ () => navigate( -1, 'year' ) }\r\n\t\t\t\t\t\tonClickSwitch={ () => showView( 'years', viewDate ) }\r\n\t\t\t\t\t\tonClickNext={ () => navigate( 1, 'year' ) }\r\n\t\t\t\t\t\tswitchContent={ year }\r\n\t\t\t\t\t\tswitchColSpan={2}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ rows.map( (months, i) => (\r\n\t\t\t\t\t\t<tr key={i}>{ months }</tr>\r\n\t\t\t\t\t)) }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MonthsView;","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport ViewNavigation from '../parts/ViewNavigation';\r\nimport { CalendarViewOption, DateNavigationUnit,  FlexibleDateType,  RenderYearFunction } from '../types/HappinDateTime';\r\n\r\ninterface Props {\r\n\trenderYear?: RenderYearFunction;\r\n\tisValidDate: ( date?: dayjs.Dayjs )=>boolean;\r\n\tviewDate: dayjs.Dayjs;\r\n\tnavigate: ( amount: number, unit: dayjs.OpUnitType )=>void;\r\n\tshowView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n\tselectedDate: dayjs.Dayjs;\r\n\tupdateDate: ( event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent> )=>void;\r\n}\r\n\r\nconst YearsView: FC<Props> = ({\r\n\trenderYear=( props, year ) => <td { ...props }>{ year }</td>,\r\n\tisValidDate,\r\n\tviewDate,\r\n\tnavigate,\r\n\tshowView,\r\n\tselectedDate,\r\n\tupdateDate\r\n}) => {\r\n\tconst [disabledYears, setDisabledYears] = useState({} as Record<number, boolean>);\r\n\r\n\tconst viewYear = viewDate?.year();\r\n\tconst selectedYear = selectedDate?.year();\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetDisabledYears({})\r\n\t}, [isValidDate])\r\n\r\n\t// 12 years in 3 rows for every view\r\n\r\n\tfunction isDisabledYear( year: number ) {\r\n\t\tif ( disabledYears[year] !== undefined ) {\r\n\t\t\treturn disabledYears[year];\r\n\t\t}\r\n\r\n\t\tif ( !isValidDate ) {\r\n\t\t\t// If no validator is set, all days are valid\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If one day in the year is valid, the year should be clickable\r\n\t\tconst startDate = dayjs().year(year).month(0).date(1);\r\n\r\n\t\tlet day = startDate.endOf( 'year' );\r\n\r\n\t\twhile ( day.isAfter(startDate) ) {\r\n\t\t\tif ( isValidDate( day ) ) {\r\n\t\t\t\tsetDisabledYears( cache => ({...cache, [year]: false}) );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tday = day.subtract(1, 'day');\r\n\t\t}\r\n\r\n\t\tsetDisabledYears( cache => ({...cache, [year]: true}) );\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst _updateSelectedYear = (event: React.MouseEvent<HTMLTableDataCellElement>) => {\r\n\t\tupdateDate( event );\r\n\t}\r\n\r\n\tconst rows: React.ReactNode[][] = [ [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4] ];\r\n\tlet year = viewYear - 1;\r\n\tfor ( const row of rows ) {\r\n\t\tfor (const index in row) {\r\n\t\t\trow[index] = renderYear(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: year, \r\n\t\t\t\t\tclassName: classNames('rdtYear', {\r\n\t\t\t\t\t\t'rdtDisabled': isDisabledYear( year ),\r\n\t\t\t\t\t\t'rdtActive': selectedYear === year\r\n\t\t\t\t\t}), \r\n\t\t\t\t\t'data-value': year, \r\n\t\t\t\t\tonClick: isDisabledYear( year ) ? undefined : _updateSelectedYear\r\n\t\t\t\t},\r\n\t\t\t\tyear,\r\n\t\t\t\tselectedDate\r\n\t\t\t);\r\n\t\t\tyear++;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"rdtYears\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<ViewNavigation\r\n\t\t\t\t\t\tonClickPrev={ () => navigate( -10, 'year' ) }\r\n\t\t\t\t\t\tonClickSwitch={ () => showView( 'years', viewDate ) }\r\n\t\t\t\t\t\tonClickNext={ () => navigate( 10, 'year' ) }\r\n\t\t\t\t\t\tswitchContent={ `${viewYear}-${viewYear + 9}` }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ rows.map( (years, i) => (\r\n\t\t\t\t\t\t<tr key={i}>{ years }</tr> \r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default YearsView;","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { CalendarViewOption, FlexibleDateType, TimeConstraintConfig, TimePartExtended, TimePart } from '../types/HappinDateTime';\r\n\r\nconst DEFAULT_CONSTRAINTS: TimeConstraintConfig = {\r\n\thours: {\r\n\t\tmin: 0,\r\n\t\tmax: 23,\r\n\t\tstep: 1\r\n\t},\r\n\tminutes: {\r\n\t\tmin: 0,\r\n\t\tmax: 59,\r\n\t\tstep: 1\r\n\t},\r\n\tseconds: {\r\n\t\tmin: 0,\r\n\t\tmax: 59,\r\n\t\tstep: 1\r\n\t},\r\n\tmilliseconds: {\r\n\t\tmin: 0,\r\n\t\tmax: 999,\r\n\t\tstep: 1\r\n\t}\r\n};\r\n\r\nfunction pad( type: keyof TimeConstraintConfig, value: number ) {\r\n\tconst padValues = {\r\n\t\thours: 1,\r\n\t\tminutes: 2,\r\n\t\tseconds: 2,\r\n\t\tmilliseconds: 3\r\n\t};\r\n\r\n\tlet str = value.toString();\r\n\twhile ( str.length < padValues[ type ] )\r\n\t\tstr = '0' + str;\r\n\treturn str;\r\n}\r\n\r\ninterface Props {\r\n    viewDate: dayjs.Dayjs;\r\n    showView: ( view: CalendarViewOption, date: FlexibleDateType )=>void;\r\n    timeFormat: string | true;\r\n    selectedDate: dayjs.Dayjs;\r\n\tdateFormat?: string | false;\r\n\tsetTime: (type: TimePart, value: number)=>void;\r\n\ttimeConstraints: TimeConstraintConfig;\r\n}\r\n\r\nconst TimeView: FC<Props> = ({\r\n\tviewDate,\r\n\tshowView,\r\n\ttimeFormat,\r\n\tdateFormat,\r\n\tselectedDate,\r\n\tsetTime,\r\n\ttimeConstraints\r\n}) => {\r\n\tconst [constraints, setConstraints] = useState(DEFAULT_CONSTRAINTS);\r\n\r\n\tconst [timeParts, setTimeParts] = useState({} as Record<TimePartExtended, string>);\r\n\r\n\tconst prevSelectedDate = useRef<dayjs.Dayjs>();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst appliedConstraints = {} as typeof DEFAULT_CONSTRAINTS;\r\n\r\n\t\t(Object.keys( DEFAULT_CONSTRAINTS ) as (keyof TimeConstraintConfig)[]).forEach( type => {\r\n\t\t\tappliedConstraints[ type ] = { ...DEFAULT_CONSTRAINTS[type], ...(timeConstraints[type] || {}) };\r\n\t\t});\r\n\r\n\t\tsetConstraints(appliedConstraints);\r\n\t}, [timeConstraints])\r\n\r\n\tuseEffect(()=>{\r\n\t\tif ( prevSelectedDate.current && selectedDate?.isSame(prevSelectedDate.current) ) return;\r\n\t\tconst date = (selectedDate || viewDate)\r\n\t\tsetTimeParts({\r\n\t\t\thours: pad( 'hours', date.hour() ),\r\n\t\t\tminutes: pad( 'minutes', date.minute() ),\r\n\t\t\tseconds: pad( 'seconds', date.second() ),\r\n\t\t\tmilliseconds: pad('milliseconds', date.millisecond() ),\r\n\t\t\tampm: date.hour() < 12 ? 'AM' : 'PM'\r\n\t\t})\r\n\t\tprevSelectedDate.current = selectedDate\r\n\t}, [selectedDate?.toISOString(), viewDate?.toISOString()])\r\n\r\n\tconst counters = [] as TimePartExtended[];\r\n\tconst format = timeFormat === true ? 'hh:mm A' : timeFormat\r\n\r\n\tif ( /h/i.test(format) ) {\r\n\t\tcounters.push('hours');\r\n\t\tif ( /m/.test(format) ) {\r\n\t\t\tcounters.push('minutes');\r\n\t\t\tif ( /s/.test(format) ) {\r\n\t\t\t\tcounters.push('seconds');\r\n\t\t\t\tif ( /S/.test(format) ) {\r\n\t\t\t\t\tcounters.push('milliseconds');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( /a/i.test(format) ) {\r\n\t\t\tcounters.push('ampm');\r\n\t\t}\r\n\t}\r\n\r\n\tconst items: React.ReactNode[] = [];\r\n\r\n\t\r\n\tfunction increase( type: TimePart ) {\r\n\t\t\r\n\t\tsetTimeParts( t => {\r\n\r\n\t\t\tconst tc = constraints[ type ];\r\n\r\n\t\t\tlet value = parseInt( t[ type ], 10) + tc.step!;\r\n\r\n\t\t\tif ( value > tc.max! )\r\n\r\n\t\t\tvalue = tc.min! + ( value - ( tc.max! + 1 ) );\r\n\t\t\treturn {\r\n\t\t\t\t...t,\r\n\t\t\t\t[type]: pad( type, value )\r\n\t\t\t}\r\n\t\t}) ;\r\n\t}\r\n\r\n\tfunction decrease( type: TimePart ) {\r\n\t\tsetTimeParts( t => {\r\n\t\t\tconst tc = constraints[ type ];\r\n\t\t\tlet value = parseInt( timeParts[ type ], 10) - tc.step!;\r\n\t\t\tif ( value < tc.min! )\r\n\t\t\t\tvalue = tc.max! + 1 - ( tc.min! - value );\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...t,\r\n\t\t\t\t[type]: pad( type, value )\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction _setTime(type: TimePart) {\r\n\t\tsetTimeParts( t => {\r\n\t\t\tsetTime( type, +t[ type ] );\r\n\t\t\treturn t\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tfunction onStartClicking( e: React.MouseEvent<HTMLSpanElement>, action: (type: TimePart)=>void, type: TimePartExtended ) {\r\n\t\tif ( e && e.button && e.button !== 0 ) {\r\n\t\t\t// Only left clicks, thanks\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif ( type === 'ampm' ) {\r\n\t\t\tlet intHours = +timeParts.hours!;\r\n\t\t\r\n\t\t\tif ( intHours >= 12 ) {\r\n\t\t\t\tintHours -= 12;\r\n\t\t\t} else {\r\n\t\t\t\tintHours += 12;\r\n\t\t\t}\r\n\r\n\t\t\tsetTime( 'hours', intHours );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taction( type ) \r\n\r\n\t\tlet increaseTimer: NodeJS.Timeout\r\n\r\n\t\tconst timer = setTimeout( () => {\r\n\t\t\tincreaseTimer = setInterval( () => {\r\n\t\t\t\taction( type )\r\n\t\t\t}, 70);\r\n\t\t}, 500);\r\n\r\n\t\tconst mouseUpListener = () => {\r\n\t\t\tclearTimeout( timer );\r\n\t\t\tclearInterval( increaseTimer );\r\n\t\t\t_setTime( type );\r\n\t\t\tdocument.removeEventListener( 'mouseup', mouseUpListener );\r\n\t\t\tdocument.removeEventListener( 'touchend', mouseUpListener );\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener( 'mouseup', mouseUpListener );\r\n\t\tdocument.addEventListener( 'touchend', mouseUpListener );\r\n\t}\r\n\r\n\t// function renderCounter( type: TimePartExtended, value: string | number ) {\r\n\t// \tif ( type === 'hours' && /a/i.test(format) ) {\r\n\t// \t\tvalue = ( +value - 1 ) % 12 + 1;\r\n\r\n\t// \t\tif ( +value === 0 ) {\r\n\t// \t\t\tvalue = 12;\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \tif ( type === 'ampm' ) {\r\n\t// \t\tif ( /A/.test(format) ) {\r\n\t// \t\t\tvalue = viewDate.format('A');\r\n\t// \t\t}\r\n\t// \t\telse {\r\n\t// \t\t\tvalue = viewDate.format('a');\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \treturn (\r\n\t\t\t\r\n\t// \t);\r\n\t// }\r\n\r\n\t// counters.forEach( (c, i) => {\r\n\t\t\r\n\t// });\r\n\r\n\treturn (\r\n\t\t<div className=\"rdtTime\">\r\n\t\t\t<table>\r\n\t\t\t\t{ dateFormat && \r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td className=\"rdtSwitch\" colSpan={4} onClick={ () => showView('days', viewDate) }>\r\n\t\t\t\t\t\t\t\t{ (selectedDate || viewDate).format( dateFormat ) }\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t}\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div className=\"rdtCounters\">\r\n\t\t\t\t\t\t\t\t{ counters.map( (c, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{ !!i && (c !== 'ampm') && <div key={ `sep${i}` } className=\"rdtCounterSeparator\">:</div>}\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={ c } className=\"rdtCounter\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rdtBtn\" onMouseDown={ e => onStartClicking( e, increase, c)}>▲</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"rdtCount\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ( c === 'hours' && /a/i.test(format) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? (( +timeParts[c] - 1 ) % 12 + 1) || 12 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: c === \"ampm\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? dayjs().hour(+timeParts.hours).format(/A/.test(format) ? ' A' : ' a') \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: timeParts[c] \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rdtBtn\" onMouseDown={ e => onStartClicking( e, decrease, c)}>▼</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default TimeView\r\n\r\n","import dayjs from 'dayjs';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport DaysView from './views/DaysView';\r\nimport MonthsView from './views/MonthsView';\r\nimport YearsView from './views/YearsView';\r\nimport TimeView from './views/TimeView';\r\nimport { CalendarViewOption, FlexibleDateType, RenderDateFunction, RenderMonthFunction, RenderYearFunction, TimeConstraintConfig } from './types/HappinDateTime';\r\nimport classNames from 'classnames';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\ninterface ClickOutProps extends React.HTMLProps<HTMLDivElement> {\r\n\tclassName: string;\r\n\tchildren: React.ReactNode;\r\n\tonClickOut: ( e: MouseEvent )=>void\r\n}\r\n\r\n\r\n// const ClickableWrapper: FC<ClickOutProps> = ({className, children, onClickOut, ...props}) => {\r\n// \tconst wrapperId = useRef(v4());\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconsole.log('adding')\r\n// \t\tfunction handleClickOutside(e: MouseEvent) {\r\n\t\t\t\r\n// \t\t\tconst wrapperEl = document.getElementById('rdtPickerWrapper');\r\n// \t\t\tconsole.log('clicked')\r\n// \t\t\tif (!wrapperEl) return\r\n// \t\t\tif ( !wrapperEl?.contains( e.target ) ) onClickOut(e)\r\n// \t\t}\r\n\r\n// \t\tdocument.addEventListener('click', handleClickOutside);\r\n\r\n// \t\treturn ()=>document.removeEventListener('click', handleClickOutside);\r\n\r\n// \t}, [wrapperId.current])\r\n\r\n// \treturn (\r\n// \t\t<div id={wrapperId.current} className={ className } {...props} >\r\n// \t\t\t{ children }\r\n// \t\t</div>\r\n// \t);\r\n\r\n// }\r\n\r\nclass ClickOutBase extends React.Component<ClickOutProps> {\r\n\tcontainer = React.createRef<HTMLDivElement>();\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={ this.props.className } ref={ this.container }>\r\n\t\t\t\t{ this.props.children }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\thandleClickOutside(e: MouseEvent) {\r\n\t\tthis.props.onClickOut( e );\r\n\t}\r\n\r\n\tsetClickOutsideRef() {\r\n\t\treturn this.container.current;\r\n\t}\r\n}\r\n\r\nconst ClickableWrapper = onClickOutside( ClickOutBase );\r\n\r\n\r\nconst viewModes: Record<string, CalendarViewOption> = {\r\n\tYEARS: 'years',\r\n\tMONTHS: 'months',\r\n\tDAYS: 'days',\r\n\tTIME: 'time',\r\n} as const;\r\n\r\nconst nofn = function () {};\r\n\r\nexport interface DateTimeProps {\r\n\tid?: string,\r\n\tvalue?: FlexibleDateType,\r\n\tinitialValue?: FlexibleDateType,\r\n\tinitialViewMode?: CalendarViewOption,\r\n\tonClose?: (date?: FlexibleDateType)=>void,\r\n\tonChange?: (date?: string)=>void,\r\n\tonNavigate?: (view: CalendarViewOption)=>void,\r\n\tonBeforeNavigate?: (view: CalendarViewOption, currentView: CalendarViewOption, date: FlexibleDateType)=>CalendarViewOption,\r\n\tonNavigateBack?: ( modifier: number, unit: dayjs.OpUnitType )=>void,\r\n\tonNavigateForward?: ( modifier: number, unit: dayjs.OpUnitType )=>void,\r\n\tupdateOnView?: CalendarViewOption,\r\n\tlocale?: string,\r\n\tiso?: boolean,\r\n\tdateFormat?: string | boolean,\r\n\ttimeFormat?: string | boolean,\r\n\ttimeConstraints?: TimeConstraintConfig,\r\n\tisValidDate?: (date?: dayjs.Dayjs | undefined) => boolean,\r\n\topen?: boolean,\r\n\tsetOpen?: (open: boolean)=>void;\r\n\tcloseOnSelect?: boolean,\r\n\trenderDay?: RenderDateFunction,\r\n\trenderMonth?: RenderMonthFunction,\r\n\trenderYear?: RenderYearFunction,\r\n\tclassName?: string,\r\n\tcloseOnClickOutside?: boolean;\r\n\tstaticDisplay?: boolean;\r\n\tdropLeft?: boolean;\r\n}\r\n\r\nconst DateTime: FC<DateTimeProps> = ({\r\n\tid,\r\n\tvalue,\r\n\tinitialValue,\r\n\tinitialViewMode,\r\n\tonClose=nofn,\r\n\tonChange=nofn,\r\n\tonNavigate=nofn,\r\n\tonBeforeNavigate=(e:any)=>e,\r\n\tonNavigateBack=nofn,\r\n\tonNavigateForward=nofn,\r\n\tupdateOnView,\r\n\tlocale,\r\n\tiso,\r\n\tdateFormat,\r\n\ttimeFormat,\r\n\ttimeConstraints={},\r\n\tisValidDate=()=>true,\r\n\topen,\r\n\tsetOpen,\r\n\tcloseOnSelect,\r\n\tcloseOnClickOutside=true,\r\n\trenderDay,\r\n\trenderMonth,\r\n\trenderYear,\r\n\tclassName='',\r\n\tstaticDisplay,\r\n\tdropLeft\r\n}) => {\r\n\r\n\tconst [currentView, setCurrentView] = useState( initialViewMode || ( dateFormat ? 'days' : timeFormat ? 'time' : 'years' ) );\r\n\tconst [viewDate, setViewDate] = useState( dayjs(value || initialValue) );\r\n\tconst [updateView, setUpdateView] = useState('time' as CalendarViewOption)\r\n\tconst [selectedDate, setSelectedDate] = useState( dayjs(value || initialValue) );\r\n\r\n\tconst [outputFormat, setOutputFormat] = useState('');\r\n\r\n\tuseEffect( () => {\r\n\t\tif (!value) return\r\n\t\tconst d = dayjs(value)\r\n\t\tif (d.isValid()) setViewDate(d)\r\n\t}, [value] )\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dateForm = dateFormat === true ? 'L' : dateFormat;\r\n\t\tconst timeForm = timeFormat === true ? 'LT' : timeFormat;\r\n\r\n\t\tsetOutputFormat( dateForm ? (timeForm ? dateForm + ' ' + timeForm : dateForm) : (timeForm ? timeForm : ''))\r\n\r\n\t}, [timeFormat, dateFormat]);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst d = dateFormat ? (dateFormat === true ? 'L' : dateFormat) : ''\r\n\r\n\t\tif ( updateOnView ) {\r\n\t\t\tsetUpdateView(updateOnView)\r\n\r\n\t\t} else if ( d.match(/[lLD]/) ) {\r\n\t\t\tsetUpdateView(viewModes.DAYS)\r\n\r\n\t\t} else if ( d.indexOf('M') !== -1 ) {\r\n\t\t\tsetUpdateView(viewModes.MONTHS)\r\n\r\n\t\t} else if ( d.indexOf('Y') !== -1 ) {\r\n\t\t\tsetUpdateView(viewModes.YEARS)\r\n\r\n\t\t} else { \r\n\t\t\tsetUpdateView(viewModes.TIME) \r\n\r\n\t\t}\r\n\r\n\t}, [dateFormat]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst d = dayjs(value);\r\n\t\tif ( d.isValid() ) {\r\n\t\t\tsetSelectedDate( d )\r\n\t\t} else {\r\n\t\t\tsetSelectedDate( dayjs() )\r\n\t\t}\r\n\t\t\r\n\t}, [value])\r\n\r\n\tconst _showView = ( view: CalendarViewOption, date: FlexibleDateType ) => {\r\n\t\tconst d = date || viewDate;\r\n\t\tconst nextView = onBeforeNavigate( view, currentView, d );\r\n\t\tif ( nextView && currentView !== nextView ) {\r\n\t\t\tonNavigate( nextView );\r\n\t\t\tsetCurrentView( nextView );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _onChange(value?: dayjs.Dayjs) {\r\n\t\tif (closeOnSelect) _closeCalendar();\r\n\t\tif (iso) {\r\n\t\t\tonChange( value?.toISOString() )\r\n\t\t} else {\r\n\t\t\tonChange( value?.format( outputFormat ) )\r\n\t\t}\r\n\t}\r\n\r\n\tconst _viewNavigate = ( modifier: number, unit: dayjs.OpUnitType ) => {\r\n\r\n\t\t// Subtracting is just adding negative time\r\n\t\tsetViewDate(viewDate => viewDate.add( modifier, unit ) );\r\n\r\n\t\tif ( modifier > 0 ) {\r\n\t\t\tonNavigateForward( modifier, unit );\r\n\t\t} else {\r\n\t\t\tonNavigateBack( -(modifier), unit );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _setTime = ( type: 'hours' | 'minutes' | 'seconds' | 'milliseconds', value: number ) => {\r\n\t\tconst date = selectedDate || viewDate;\r\n\t\tlet newDate: dayjs.Dayjs;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'hours':\r\n\t\t\t\tnewDate = date.hour( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'minutes':\r\n\t\t\t\tnewDate = date.minute( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'seconds':\r\n\t\t\t\tnewDate = date.second( value )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'milliseconds':\r\n\t\t\t\tnewDate = date.millisecond( value )\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tsetSelectedDate(newDate)\r\n\t\tsetViewDate(newDate)\r\n\t\t_onChange( newDate )\r\n\r\n\t}\r\n\r\n\tconst _closeCalendar = () => { \r\n\t\tif (setOpen) setOpen(false) \r\n\t\tonClose(selectedDate)\r\n\t}\r\n\t\r\n\tconst _handleClickOutside = () => {\r\n\t\tif ( open && closeOnClickOutside ) {\r\n\t\t\t_closeCalendar();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ClickableWrapper \r\n\t\t\tclassName={classNames('rdt', className, {\r\n\t\t\t\t'rdtStatic': !!staticDisplay,\r\n\t\t\t\t'rdtOpen': !!open\r\n\t\t\t})} \r\n\t\t\tonClickOut={ _handleClickOutside }\r\n\t\t>\r\n\t\t\t{/* { input && \r\n\t\t\t\trenderInput \r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<div> \r\n\t\t\t\t\t\t\t{ renderInput( inputProps, _openCalendar, _closeCalendar ) }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t: <input { ...inputProps } />\r\n\t\t\t} */}\r\n\t\t\t<div id={id} className=\"rdtPicker rounded bg-light\" style={dropLeft ? {right: 0} : undefined}>\r\n\t\t\t\t{ currentView === 'years' && \r\n\t\t\t\t\t<YearsView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\trenderYear={ renderYear }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.YEARS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.MONTHS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}  }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'months' && \r\n\t\t\t\t\t<MonthsView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\trenderMonth={ renderMonth }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-year')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.month(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.MONTHS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.DAYS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'days' && \r\n\t\t\t\t\t<DaysView \r\n\t\t\t\t\t\trenderDay={ renderDay }\r\n\t\t\t\t\t\tisValidDate={ isValidDate }\r\n\t\t\t\t\t\tnavigate={ _viewNavigate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\ttimeFormat={ timeFormat }\r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tupdateDate={ e => {\r\n\t\t\t\t\t\t\tconst updatedDate = dayjs(viewDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.year(+e.currentTarget.getAttribute('data-year')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.month(+e.currentTarget.getAttribute('data-month')!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.date(+e.currentTarget.getAttribute('data-value')!)\r\n\t\t\t\t\t\t\tsetViewDate(updatedDate)\r\n\t\t\t\t\t\t\tif (updateView === viewModes.DAYS) {\r\n\t\t\t\t\t\t\t\tsetSelectedDate(updatedDate)\r\n\t\t\t\t\t\t\t\t_onChange(updatedDate)\r\n\t\t\t\t\t\t\t} else if ( timeFormat ) {\r\n\t\t\t\t\t\t\t\t_showView( viewModes.HOURS, viewDate )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ currentView === 'time' && timeFormat && \r\n\t\t\t\t\t<TimeView \r\n\t\t\t\t\t\tviewDate={ viewDate }\r\n\t\t\t\t\t\tshowView={ _showView }\r\n\t\t\t\t\t\ttimeFormat={ timeFormat }\r\n\t\t\t\t\t\tdateFormat={ dateFormat === true ? 'L' : dateFormat }\r\n\t\t\t\t\t\tselectedDate={ selectedDate }\r\n\t\t\t\t\t\tsetTime={ _setTime }\r\n\t\t\t\t\t\ttimeConstraints={ timeConstraints }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ClickableWrapper>\r\n\t)\r\n}\r\n\r\nexport default DateTime\r\n\r\n\r\n// export  class Datetime1 extends React.Component {\r\n\r\n\t// getUpdateOn( dateFormat ) {\r\n\t// \tif ( this.props.updateOnView ) {\r\n\t// \t\treturn this.props.updateOnView;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.match(/[lLD]/) ) {\r\n\t// \t\treturn viewModes.DAYS;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.indexOf('M') !== -1 ) {\r\n\t// \t\treturn viewModes.MONTHS;\r\n\t// \t}\r\n\r\n\t// \tif ( dateFormat.indexOf('Y') !== -1 ) {\r\n\t// \t\treturn viewModes.YEARS;\r\n\t// \t}\r\n\r\n\t// \treturn viewModes.DAYS;\r\n\t// }\r\n\r\n\t// viewToMethod = {days: 'date', months: 'month', years: 'year'};\r\n\t// nextView = { days: 'time', months: 'days', years: 'months'};\r\n\r\n\r\n\r\n\t// localMoment( date, format, props ) {\r\n\t// \tprops = props || this.props;\r\n\t// \tlet m = null;\r\n\r\n\t// \tif (props.utc) {\r\n\t// \t\tm = moment.utc(date, format, props.strictParsing);\r\n\t// \t} else if (props.displayTimeZone) {\r\n\t// \t\tm = moment.tz(date, format, props.displayTimeZone);\r\n\t// \t} else {\r\n\t// \t\tm = moment(date, format, props.strictParsing);\r\n\t// \t}\r\n\r\n\t// \tif ( props.locale )\r\n\t// \t\tm.locale( props.locale );\r\n\t// \treturn m;\r\n\t// }\r\n\r\n\t// componentDidUpdate( prevProps ) {\r\n\t// \tif ( prevProps === this.props ) return;\r\n\r\n\t// \tlet needsUpdate = false;\r\n\t// \tlet thisProps = this.props;\r\n\r\n\t// \t['locale', 'utc', 'displayZone', 'dateFormat', 'timeFormat'].forEach( function(p) {\r\n\t// \t\tprevProps[p] !== thisProps[p] && (needsUpdate = true);\r\n\t// \t});\r\n\r\n\t// \tif ( needsUpdate ) {\r\n\t// \t\tthis.regenerateDates();\r\n\t// \t}\r\n\r\n\t// \tif ( thisProps.value && thisProps.value !== prevProps.value ) {\r\n\t// \t\tthis.setViewDate( thisProps.value );\r\n\t// \t}\r\n\r\n\t// \tthis.checkTZ();\r\n\t// }\r\n\r\n\t// regenerateDates() {\r\n\t// \tconst props = this.props;\r\n\t// \tlet viewDate = this.state.viewDate.clone();\r\n\t// \tlet selectedDate = this.state.selectedDate && this.state.selectedDate.clone();\r\n\r\n\t// \tif ( props.locale ) {\r\n\t// \t\tviewDate.locale( props.locale );\r\n\t// \t\tselectedDate &&\tselectedDate.locale( props.locale );\r\n\t// \t}\r\n\t// \tif ( props.utc ) {\r\n\t// \t\tviewDate.utc();\r\n\t// \t\tselectedDate &&\tselectedDate.utc();\r\n\t// \t}\r\n\t// \telse if ( props.displayTimeZone ) {\r\n\t// \t\tviewDate.tz( props.displayTimeZone );\r\n\t// \t\tselectedDate &&\tselectedDate.tz( props.displayTimeZone );\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tviewDate.locale();\r\n\t// \t\tselectedDate &&\tselectedDate.locale();\r\n\t// \t}\r\n\r\n\t// \tlet update = { viewDate: viewDate, selectedDate: selectedDate};\r\n\t// \tif ( selectedDate && selectedDate.isValid() ) {\r\n\t// \t\tupdate.inputValue = selectedDate.format( this.getFormat('datetime') );\r\n\t// \t}\r\n\t\t\r\n\t// \tthis.setState( update );\r\n\t// }\r\n\r\n\t// getSelectedDate() {\r\n\t// \tif ( this.props.value === undefined ) return this.state.selectedDate;\r\n\t// \tlet selectedDate = this.parseDate( this.props.value, this.getFormat('datetime') );\r\n\t// \treturn selectedDate && selectedDate.isValid() ? selectedDate : false;\r\n\t// }\r\n\r\n\t// getInitialInputValue( selectedDate ) {\r\n\t// \tconst props = this.props;\r\n\t// \tif ( props.inputProps.value )\r\n\t// \t\treturn props.inputProps.value;\r\n\t\t\r\n\t// \tif ( selectedDate && selectedDate.isValid() )\r\n\t// \t\treturn selectedDate.format( this.getFormat('datetime') );\r\n\t\t\r\n\t// \tif ( props.value && typeof props.value === 'string' )\r\n\t// \t\treturn props.value;\r\n\t\t\r\n\t// \tif ( props.initialValue && typeof props.initialValue === 'string' )\r\n\t// \t\treturn props.initialValue;\r\n\t\t\r\n\t// \treturn '';\r\n\t// }\r\n\r\n\t// getInputValue() {\r\n\t// \tlet selectedDate = this.getSelectedDate();\r\n\t// \treturn selectedDate ? selectedDate.format( this.getFormat('datetime') ) : this.state.inputValue;\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Set the date that is currently shown in the calendar.\r\n\t//  * This is independent from the selected date and it's the one used to navigate through months or days in the calendar.\r\n\t//  * @param dateType date\r\n\t//  * @public\r\n\t//  */\r\n\t// setViewDate( date ) {\r\n\t// \tlet me = this;\r\n\t// \tlet logError = function() {\r\n\t// \t\treturn me.log( 'Invalid date passed to the `setViewDate` method: ' + date );\r\n\t// \t};\r\n\r\n\t// \tif ( !date ) return logError();\r\n\t\t\r\n\t// \tlet viewDate;\r\n\t// \tif ( typeof date === 'string' ) {\r\n\t// \t\tviewDate = this.localMoment(date, this.getFormat('datetime') );\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tviewDate = this.localMoment( date );\r\n\t// \t}\r\n\r\n\t// \tif ( !viewDate || !viewDate.isValid() ) return logError();\r\n\t// \tthis.setState({ viewDate: viewDate });\r\n\t// }\r\n\r\n// \t/**\r\n// \t * Set the view currently shown by the calendar. View modes shipped with react-datetime are 'years', 'months', 'days' and 'time'.\r\n// \t * @param TYPES.string mode \r\n// \t */\r\n// \tnavigate( mode ) {\r\n// \t\tthis._showView( mode );\r\n// \t}\r\n\r\n// \t_onInputFocus = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onFocus, e ) ) return;\r\n// \t\tthis._openCalendar();\r\n// \t}\r\n\r\n// \t_onInputChange = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onChange, e ) ) return;\r\n\r\n// \t\tconst value = e.target ? e.target.value : e;\r\n// \t\tconst localMoment = this.localMoment( value, this.getFormat('datetime') );\r\n// \t\tlet update = { inputValue: value };\r\n\r\n// \t\tif ( localMoment.isValid() ) {\r\n// \t\t\tupdate.selectedDate = localMoment;\r\n// \t\t\tupdate.viewDate = localMoment.clone().startOf('month');\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tupdate.selectedDate = null;\r\n// \t\t}\r\n\r\n// \t\tthis.setState( update, () => {\r\n// \t\t\tthis.props.onChange( localMoment.isValid() ? localMoment : this.state.inputValue );\r\n// \t\t});\r\n// \t}\r\n\r\n// \t_onInputKeyDown = e => {\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onKeyDown, e ) ) return;\r\n\r\n// \t\tif ( e.which === 9 && this.props.closeOnTab ) {\r\n// \t\t\tthis._closeCalendar();\r\n// \t\t}\r\n// \t}\r\n\r\n// \t_onInputClick = e => {\r\n// \t\t// Focus event should open the calendar, but there is some case where\r\n// \t\t// the input is already focused and the picker is closed, so clicking the input\r\n// \t\t// should open it again see https://github.com/arqex/react-datetime/issues/717\r\n// \t\tif ( !this.callHandler( this.props.inputProps.onClick, e ) ) return;\r\n// \t\tthis._openCalendar();\r\n// \t}\r\n\r\n// \tcallHandler( method, e ) {\r\n// \t\tif ( !method ) return true;\r\n// \t\treturn method(e) !== false;\r\n// \t}\r\n// }\r\n\r\n// function log( message, method ) {\r\n// \tlet con = typeof window !== 'undefined' && window.console;\r\n// \tif ( !con ) return;\r\n\r\n// \tif ( !method ) {\r\n// \t\tmethod = 'warn';\r\n// \t}\r\n// \tcon[ method ]( '***react-datetime:' + message );\r\n// }\r\n\r\n\t// const inputProps = {\r\n\t// \ttype: 'text',\r\n\t// \tclassName: 'form-control',\r\n\t// \tvalue: getInputValue(),\r\n\t// \t...inputProps,\r\n\t// \tonFocus: _onInputFocus,\r\n\t// \tonChange: _onInputChange,\r\n\t// \tonKeyDown: _onInputKeyDown,\r\n\t// \tonClick: _onInputClick\r\n\t// }","////// Packages //////////////////\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n\r\nconst UnderConstruction = () => (\r\n  <Card className=\"text-center\">\r\n    <CardBody className=\"p-5\">\r\n      <div className=\"display-1 text-200 fs-error\">Working On It</div>\r\n      <p className=\"lead mt-4 text-800 text-sans-serif font-weight-semi-bold\">\r\n        {`The page you're looking for is under construction.`}\r\n      </p>\r\n      <hr />\r\n      <p>\r\n        {`We are hard at work building the most intuitive business management app on the web`}\r\n        <a href=\"mailto:info@happin.design\" className=\"ml-1\">\r\n          We would love to hear from you. Contact Us\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link className=\"btn btn-primary btn-sm mt-3\" to=\"/\">\r\n        <FontAwesomeIcon icon=\"home\" className=\"mr-2\" />\r\n        Take me home\r\n      </Link>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default UnderConstruction;\r\n","import { ActionCreator } from \"store/types/interface/common\";\r\n\r\n// export const getStageOptions: ActionCreator<['getStageOptions']> = () => {\r\n//         const actions = [\r\n//             {\r\n//                 name: 'getStageOptions',\r\n//                 data: {}\r\n//             }\r\n//         ] as const;\r\n//         return { actions }\r\n// }\r\n\r\nexport const getStageTypes: ActionCreator<['getStageTypes']> = () => {\r\n        const actions = [\r\n            {\r\n                name: 'getStageTypes',\r\n                data: {}\r\n            }\r\n        ] as const;\r\n        return { actions }\r\n}\r\n\r\nexport const getStageTagOptions: ActionCreator<[\"getStageTagOptions\"]> = () => {\r\n        const actions = [\r\n            {\r\n                name: 'getStageTagOptions',\r\n                data: {}\r\n            }\r\n        ] as const;\r\n        return {actions}\r\n}\r\n\r\nexport const getStageMemberRoleOptions: ActionCreator<['getStageMemberRoleOptions']>= () => {\r\n        const actions = [\r\n            {\r\n                name: 'getStageMemberRoleOptions',\r\n                data: {}\r\n            }\r\n        ] as const;\r\n        return { actions }\r\n}\r\n\r\nexport const createMemberRole: ActionCreator<['createStageMemberRole']>= (role: string) => {\r\n        const actions = [\r\n            {\r\n                name: 'createStageMemberRole',\r\n                data: {\r\n                    role\r\n                }\r\n            }\r\n        ] as const\r\n        return {actions}\r\n}\r\n\r\nexport const getKanbanCategories: ActionCreator<['getKanbanCategories']> = () => {\r\n    const actions = [{\r\n        name: 'getKanbanCategories',\r\n        data: {\r\n\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nexport const setKanbanCategories: ActionCreator<['setKanbanCategories']> = (categories: string[]) => {\r\n    const actions = [{\r\n        name: 'setKanbanCategories',\r\n        data: {\r\n            categories\r\n        }\r\n    }] as const\r\n    return { actions }\r\n}\r\n\r\nconst thunks = {\r\n    // getStageOptions,\r\n    getStageTypes,\r\n    getStageTagOptions\r\n}\r\n\r\nexport default thunks;","////// Packages //////////////////\r\nimport React, { FC } from 'react'\r\nimport classNames from 'classnames';\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\n\r\n////// CommonJS Helpers //////////\r\nimport { FalconColors } from './falconTypes';\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\n\r\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, 'size'> {\r\n    size: 'sm' | 'md' | 'lg';\r\n    color: FalconColors;\r\n    spinnerStyle?: React.CSSProperties;\r\n}\r\n\r\nconst BounceSpinner: FC<Props> = ({size, color, spinnerStyle, ...rest}) => {\r\n    const {className, ...divProps} = rest;\r\n    \r\n    return (\r\n        <div \r\n            className={classNames(\"bounce-spinner\", {\r\n                \"bounce-spinner-sm\": size === \"sm\",\r\n                \"bounce-spinner-md\": size === \"md\",\r\n                \"bounce-spinner-lg\": size === \"lg\"\r\n            }, className)} \r\n            {...divProps}\r\n        >\r\n            <div style={spinnerStyle} className={classNames(\"bounce1\", \"bg-\" + color)}></div>\r\n            <div style={spinnerStyle} className={classNames(\"bounce2\", \"bg-\" + color)}></div>\r\n            <div style={spinnerStyle} className={classNames(\"bounce3\", \"bg-\" + color)}></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BounceSpinner","import { FalconColors } from \"components/falconTypes\";\r\nimport { ITaskStatus } from \"store/types/models/workflow\";\r\n\r\nexport const statusColorsMap: Record<ITaskStatus, FalconColors> = {\r\n    \"Not Started\": \"secondary\",\r\n    \"In Progress\": \"primary\",\r\n    \"Complete\": \"success\",\r\n    \"Running Late\": \"warning\",\r\n    \"Having Trouble\": \"warning\",\r\n    \"Waiting\": \"info\",\r\n    \"Past Due\": \"danger\"\r\n  };","////// Packages //////////////////\r\nimport React, { FC } from \"react\";\r\nimport {\r\n  Nav,\r\n  UncontrolledDropdown,\r\n  Media,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip,\r\n  Input,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n////// Local Components //////////\r\n\r\n////// Global Components /////////\r\nimport Flex from \"./Flex\";\r\nimport Avatar, { AvatarSize } from \"./Avatar\";\r\n\r\n// import usePeopleList, { BasicPerson } from 'store/hooks/person/usePeopleList';\r\n\r\n////// CommonJS Helpers //////////\r\nimport makeName from \"../helpers/makeName\";\r\n\r\n////// Custom Hooks //////////////\r\n\r\n////// Thunks ////////////////////\r\n\r\n////// Types /////////////////////\r\nimport { $BasicPerson, MPerson } from \"store/types/models/id\";\r\n\r\ninterface Props {\r\n  avatarSize: AvatarSize;\r\n  showMembers: number;\r\n  people: ($BasicPerson | MPerson)[];\r\n  isShowMemberFixed?: boolean;\r\n  addMember?: boolean;\r\n  isTooltip?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst AvatarGroup: FC<Props> = ({\r\n  avatarSize,\r\n  showMembers,\r\n  people,\r\n  isShowMemberFixed = false,\r\n  addMember = false,\r\n  className\r\n}) => {\r\n  // const peopleList = people || [];\r\n  // const { value: avatars, ...avatarLoader } = usePeopleList(...peopleList);\r\n\r\n  return (\r\n    <Nav className={`avatar-group mb-0 align-items-center ${className}`}>\r\n      {people?.slice(0, showMembers).map((person, index) => {\r\n        return (\r\n          <UncontrolledDropdown direction=\"right\" nav key={index}>\r\n            <DropdownToggle\r\n              nav\r\n              caret={false}\r\n              className={index > 0 ? \"ml-n1 p-0\" : \"p-0\"}\r\n              id={`person-${person?._id}`}\r\n            >\r\n              <Avatar\r\n                src={person?.avatar?.location}\r\n                name={makeName(person?.name)}\r\n                size={avatarSize}\r\n              />\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"dropdown-md px-0 py-3\">\r\n              <Media className=\"align-items-center px-3\">\r\n                <div className=\"mr-2\">\r\n                  <Avatar\r\n                    src={person?.avatar?.location}\r\n                    name={makeName(person?.name)}\r\n                    size={avatarSize}\r\n                  />\r\n                </div>\r\n                <Media body>\r\n                  <h6 className=\"mb-0\">\r\n                    <Link\r\n                      className=\"text-900 stretched-link\"\r\n                      to={`/social/profile/${person._id}`}\r\n                    >\r\n                      {makeName(person?.name)}\r\n                    </Link>\r\n                  </h6>\r\n                  <p className=\"fs--2 mb-0\">{person?.position}</p>\r\n                </Media>\r\n              </Media>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        );\r\n      })}\r\n      {!isShowMemberFixed && (\r\n        <UncontrolledDropdown nav>\r\n          <DropdownToggle nav caret={false} className=\"ml-n1 p-0\">\r\n            {people && people?.length > showMembers && (\r\n              <Avatar\r\n                name={`+${people?.length - showMembers}`}\r\n                size={avatarSize}\r\n                isExact\r\n                mediaClass=\"avatar-button\"\r\n                className=\"mr-n1\"\r\n              />\r\n            )}\r\n            {addMember && (\r\n              <Avatar\r\n                icon=\"plus\"\r\n                size={avatarSize}\r\n                mediaClass=\"avatar-button\"\r\n              />\r\n            )}\r\n          </DropdownToggle>\r\n          <DropdownMenu className=\"dropdown-md\">\r\n            <h6 className=\"dropdown-header py-0 px-3 mb-0\">\r\n              {!addMember ? \"Board Members\" : \"Select Member\"}\r\n            </h6>\r\n            <DropdownItem divider />\r\n            {!addMember ? (\r\n              <Flex className=\"px-3\">\r\n                {people?.map((person) => (\r\n                  <Link\r\n                    className=\"text-900 \"\r\n                    to=\"/pages/profile\"\r\n                    key={person?._id}\r\n                    id={`Tooltip-${person?._id}`}\r\n                  >\r\n                    <Avatar\r\n                      src={person?.avatar?.location}\r\n                      className=\"mr-2\"\r\n                      size=\"xl\"\r\n                    />\r\n                    <UncontrolledTooltip\r\n                      placement=\"top\"\r\n                      target={`Tooltip-${person?._id}`}\r\n                    >\r\n                      {makeName(person?.name)}\r\n                    </UncontrolledTooltip>\r\n                  </Link>\r\n                ))}\r\n              </Flex>\r\n            ) : (\r\n              <>\r\n                <form className=\"px-3 mb-2\">\r\n                  <Input placeholder=\"Search team member\" bsSize=\"sm\" />\r\n                </form>\r\n                <ul className=\"list-unstyled\">\r\n                  {people?.map(person => (\r\n                    <li key={person?._id}>\r\n                      <Media\r\n                        tag=\"a\"\r\n                        className=\"align-items-center px-3 py-1 text-decoration-none\"\r\n                        href={`pages/profile`}\r\n                      >\r\n                        <Avatar\r\n                          src={person?.avatar?.location}\r\n                          name={makeName(person?.name)}\r\n                          className=\"mr-2\"\r\n                          size={avatarSize}\r\n                        />\r\n                        <Media body>\r\n                          <h6 className=\"mb-0\">{makeName(person?.name)}</h6>\r\n                        </Media>\r\n                      </Media>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","import { shallowEqual } from \"react-redux\";\r\nimport { getPersonAssignments } from \"store/thunks/workflow/tasks\";\r\nimport { MPerson } from \"store/types/models/id\";\r\nimport { AssignmentWithTaskInfo, TaskWithAssignmentInfo } from \"store/types/models/workflow\";\r\nimport useLoadAndSelect from \"../useLoadAndSelect\";\r\n\r\nfunction useAssignments(personId: MPerson['_id']) {\r\n    return useLoadAndSelect({\r\n        actionCreator: getPersonAssignments,\r\n        selector: state => (Object.values(state.workflow.tasks) as TaskWithAssignmentInfo[])\r\n                            .filter( t => t.isMyAssignment )\r\n                            .reduce( (assignments, task) => [\r\n                                ...assignments, \r\n                                ...task.assignments\r\n                                    .filter(a => a.assignees.find(a => a.personId === personId))\r\n                                    .map(a => ({\r\n                                        ...a,\r\n                                        task: {\r\n                                            _id: task._id,\r\n                                            title: task.title\r\n                                        },\r\n                                        stage: task.stage\r\n                                    }))\r\n                                ], [] as AssignmentWithTaskInfo[]\r\n                            ),\r\n        equality: shallowEqual,\r\n        postParams: personId,\r\n        deduplicate: ['assignments', personId]\r\n    })\r\n}\r\n\r\nexport default useAssignments;","import { useSelector } from 'react-redux'\r\nimport useAssignments from './useAssignments'\r\n\r\nfunction useMyAssignments() {\r\n    const loginPersonId = useSelector(state => state.app.login.personId);\r\n    return useAssignments(loginPersonId || '') \r\n}\r\n\r\nexport default useMyAssignments"],"sourceRoot":""}